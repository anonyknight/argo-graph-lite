{"version":3,"sources":["stores/PreferencesStore.js","services/AlgorithmUtils.js","stores/GraphStore.js","stores/ImportStore.js","stores/ProjectStore.js","stores/SearchStore.js","stores/index.js","components/PreferencesDialog.jsx","components/utils/Collapsable.jsx","components/utils/CommonItemRenderer.jsx","components/utils/SimpleSelect.jsx","components/PostImportOptions.jsx","components/ImportDialog.jsx","components/GEXFImportDialog.jsx","components/OpenDialog.jsx","components/NewProjectDialog.jsx","components/ProjectDetailDialog.jsx","components/SaveSnapshotDialog.jsx","components/RenameSnapshotDialog.jsx","components/OpenSnapshotDialog.jsx","components/ShareDialog.jsx","components/StatisticsDialog.jsx","components/HelpDialog.jsx","components/NodeTable.jsx","components/NeighborDialog.jsx","components/DataSheetDialog.jsx","components/Dialogs.jsx","components/Navbar.jsx","components/WorkspaceView.jsx","visualizers/ThreeJSVis.jsx","components/panels/GlobalPanel.jsx","components/utils/SwitchCollapsable.jsx","components/panels/SelectionPanel.jsx","components/panels/NodesPanel.jsx","components/panels/EdgesPanel.jsx","components/panels/LabelsPanel.jsx","components/panels/NodeDetailPanel.jsx","components/Legends.jsx","components/StatusBar.jsx","components/panels/SelectionActionPanel.jsx","components/FloatingCards.jsx","app.jsx","index.js","constants/index.js","ipc/client.js","graph-frontend/src/structure/node.js","graph-frontend/include/THREE.MeshLine.js","graph-frontend/src/select.js","graph-frontend/index.js","images/argologo.png","notifications/client.js","graph-frontend/src/imports.js","graph-frontend/src/process.js","graph-frontend/include/QuickHull.js","graph-frontend/include/ConvexGeometry.js","graph-frontend/include/CSS3DRenderer.js","graph-frontend/include/OrbitControls.js","graph-frontend/src/utils/utils.js","graph-frontend/src/setup.js","graph-frontend/src/addremove.js","graph-frontend/src/highlighting.js","graph-frontend/src/mouse.js","graph-frontend/src/modify.js","graph-frontend/src/draw.js","graph-frontend/src/api.js","graph-frontend/src/update.js"],"names":["PreferencesStore","requestLoadUserConfig","userConfig","darkMode","this","workspace","workspacePath","requestSaveUserConfig","isRenderOptionsCardHidden","minimapShowing","isStatusBarShowing","isNavbarInMinimalMode","isLegendShowing","appState","graph","frame","hideMiniMap","console","log","showMiniMap","observable","IS_IFRAME_WIDGET","jsnx","require","jsgraphs","averageClusteringCoefficient","snapshot","jsnxGraph","Graph","addNodesFrom","rawGraph","nodes","map","n","id","addEdgesFrom","edges","e","source_id","target_id","convertToJsnx","result","averageClustering","connectedComponents","ConnectedComponents","i","idDict","length","g","forEach","addEdge","convertToJSGraph","componentCount","exactGraphDiameter","temp","WeightedDiGraph","Edge","convertToJSGraphWeightedDi","jsg","dia","dijkstra","Dijkstra","f","hasPathTo","pathLength","pathTo","Math","max","GraphStore","ref","initialGlobalConfig","colorBy","color","scale","from","to","sizeBy","size","min","labelBy","shape","labelSize","labelLength","_lastSelectedSingleNode","nodesShowingLabels","hasGraphLoaded","selectedNodeId","setOfNeighborIds","Set","source","toString","target","add","filter","node","has","nodeids","runInAction","includes","isHidden","removeNodesByIds","overrides","positions","getPositions","pinnedNodes","Array","getPinnedNodes","metadata","global","optionalConfig","getSnapshot","noPosition","undefined","noGlobal","noOverride","JSON","stringify","savedStatesStr","savedStates","parse","savedOverrides","Map","Object","entries","k","v","clear","merge","initialNodesShowingLabels","runActiveLayout","paused","smartPause","defaultActive","isActive","startTime","Date","now","smartPaused","nodesToPin","that","process","forEachNode","push","setPinnedNodes","graphFrame","Frame","computedGraph","init","display","ee","on","selectedNodes","data","menu","MenuFactory","children","MenuItemFactory","onClick","toggleSelectedLabels","text","key","unpinSelectedNodes","pinSelectedNodes","rightClickedNode","rightClickedNodeId","neighbors","getNeighborNodesFromRawGraph","sort","n1","n2","ids","showNodes","ContextMenu","show","left","pageX","top","pageY","uniq","nodeProperties","nodeComputed","ret","p","Number","MAX_VALUE","MIN_VALUE","scales","domain","minMax","range","createGraph","override","get","addNode","label","nodeSizeScale","nodeColorScale","hasNode","addLink","nodeCount","graphDensity","sum","degree","averageDegree","duration","interactingWithGraph","computed","fullNodes","fullEdges","edgeProperties","snapshotName","action","ImportStore","postImportFilteringOptions","sortedList","setIds","defaultPostImportFilteringOption","selectedPostImportFilteringOption","nodeFile","path","topN","hasColumns","ready","columns","mapping","delimiter","edgeFile","fromId","toId","createMissing","ProjectStore","SearchStore","AppState","preferences","import","search","project","window","loadAndDisplaySnapshotFromStrapi","uuid","url","BACKEND_URL","fetch","method","mode","then","response","json","body","catch","error","toaster","message","intent","Intent","DANGER","timeout","loadSnapshotFromStrapi","snapshotString","loadImmediateStates","loadAndDisplaySnapshotFromURL","loadSnapshotFromURL","split","pop","loadInitialSampleGraph","a","location","hash","substring","startsWith","decodeURIComponent","alert","SAMPLE_GRAPH_SNAPSHOTS","saveSnapshotToString","saveImmediateStates","addEventListener","event","autorun","hasGraph","updateGraph","setAllNodesShapeWithOverride","setLabelRelativeSize","setLabelLength","pinNodes","updatePositions","showLabels","searchStr","runSearch","panelOpen","candidates","splice","highlightNodeIds","file","selectedEdgeFileFromInput","hasHeader","importConfig","reader","FileReader","readAsText","onload","lines","topLinesAsString","l","trim","join","it","comment","auto_parse","skip_empty_lines","keys","onerror","selectedNodeFileFromInput","PreferencesDialog","observer","iconName","className","classnames","Classes","DARK","isOpen","dialogOpen","onClose","title","checked","onChange","saveUserConfig","toggleDark","PRIMARY","React","Component","name","onToggle","LARGE","FILL","MINIMAL","rightIconName","handleClick","item","ACTIVE","items","onSelect","value","fill","itemRenderer","CommonItemRenderer","filterable","onItemSelect","PostImportOptions","SimpleSelect","selected","PreviewTable","props","numRows","selectedRegions","values","indexOf","rows","cols","renderCell","ImportDialog","changeAvailable","targetValue","ONLY_EDGE_FILE","setState","available","canImport","state","NODE_AND_EDGE_FILE","renderNodesSelection","Collapsable","nodesOpen","CONTROL_GROUP","INPUT_GROUP","type","DISABLED","files","renderEdgesSelection","edgesOpen","disabled","newDelimiter","updateDelimiter","loading","DIALOG_BODY","renderDelimiterSelection","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","requestCreateNewProject","newProjectName","createdDate","toLocaleString","requestImportGraphFromCSV","turnOffLabelCSSRenderer","GEXFImportDialog","selectedGexfFileFromInput","requestImportGraphFromGexf","gexfDialogOpen","renderImportButton","OpenDialog","GRAPH_AND_STATE_FILE","stateFile","graphFile","renderSelectGraph","INPUT","placeholder","readOnly","requestChooseGraphFile","renderSelectState","requestChooseStateFile","ONLY_GRAPH_FILE","selectedGraph","selectedState","openDialogOpen","requestOpen","NewProjectDialog","isNewProjectNameDuplicate","projects","some","isNewProjectNameEmpty","isValidated","isNewProjectDialogOpen","dir","ProjectDetailDialog","currentProject","isProjectDetailDialogOpen","hasGraphData","interactive","elevation","Card","ELEVATION_TWO","graphDataPath","snapshotPaths","snapshotPath","replace","BUTTON","INTENT_PRIMARY","currentSnapshotName","requestDelete","SaveSnapshotDialog","isSaveSnapshotDialogOpen","stringCopyOfSnapshot","document","getElementById","select","execCommand","isRenameSnapshotDialogOpen","OpenSnapshotDialog","selectedFile","openSnapshotDialogOpen","NONE","fileAsString","uuidv4","ShareDialog","isShared","isFetching","sharedURL","selectedContinue","handleRequest","bind","backendURL","cache","headers","referrer","ok","shareDialogOpen","style","width","marginRight","marginBottom","marginTop","overflow","resize","readonly","position","dangerouslySetInnerHTML","__html","StatisticsDialog","statisticsDialogOpen","TABLE","density","diameter","components","HelpDialog","helpDialogOpen","NodeTable","sortBy","sortOrder","filteredNodes","n1val","n2val","n1valAsNum","n2valAsNum","isNaN","n1valAsString","n2valAsString","localeCompare","nodeAttributesOrig","allPropertiesKeyList","hideNodes","NeighborDialog","showMoreBy","showMoreNum","lastSelectedSingleNode","neighborDialogOpen","minWidth","numberToShow","attributeName","hiddenNodes","showNMoreByAttribute","onValueChange","valAsNumber","valAsString","DataSheetDialog","dataSheetDialogOpen","Dialogs","RenameSnapshotDialog","RegularNavbar","NAVBAR","NAVBAR_GROUP","ALIGN_LEFT","href","LOGO_URL","src","argologo","height","NAVBAR_HEADING","content","sample","sampleSnapshotTitle","sampleSnapshotStrapiUuid","Position","BOTTOM","pauseLayout","forceUpdate","sortedNodeList","NAVBAR_DIVIDER","self","setInterval","timeNow","resumeLayout","ALIGN_RIGHT","turnOnMinimalMode","GITHUB_URL","fontSize","textDecoration","icon","faGithub","MinimalNavbar","backgroundColor","role","turnOffMinimalMode","Navbar","WorkspaceView","textAlign","ThreeJSVis","setUpFrame","flex","GlobalPanel","timeOutRef","sizeOptionOpen","colorOptionOpen","shapeOptionOpen","CARD","float","placement","modifiers","preventOverflow","enabled","backgroundImage","hex","x1","y1","x2","y2","stopColor","stopOpacity","offset","x","y","stepSize","labelStepSize","b","pluralize","SelectionPanel","twoLayerUpdate","nodeId","set","nodeAttrs","delete","batchTwoLayerUpdate","labelOptionOpen","SwitchCollapsable","overrideConfig","NodesPanel","getRenderedNodes","EdgesPanel","thicknessOptionOpen","red","THREE","Color","r","blue","green","renderData","linecolor","onHover","directedOrNot","LabelsPanel","hideAllLabels","showAllLabels","marginLeft","hideSelectedLabels","showSelectedLabels","NodeDetail","TABLE_STRIPED","padding","whiteSpace","nodeAttributeValue","num","parseFloat","toPrecision","formatLongFloat","visibility","direction","itemDirection","itemMargin","shapeMargin","labelFormat","format","cx","cy","StatusBar","numHiddenNodes","SelectionActionPanel","numHiddenNeighbor","WARNING","getSelectedIds","RenderOptionsCard","animate","panel","Expander","FloatingCards","optionsVisible","optionsInvisible","sideButtonVis","sideButtonInv","toggleOptions","ELEVATION_2","justifyContent","alignItems","numCandidates","searchOrder","INTERACTIVE","userSelect","onMouseOver","node_id","onMouseDown","onMouseLeave","pageNum","allCands","slice","nPerPage","pointerEvents","cursor","pages","maxPage","paddingTop","paddingRight","paddingBottom","currentlyHovered","registerIPC","FocusStyleManager","onlyShowFocusOnTabs","fetchWorkspaceProjects","loadUserConfig","DELETE","Keys","BACKSPACE","P","U","respondToResize","innerWidth","MOBILE_WIDTH_CUTOFF","innerHeight","MOBILE_HEIGHT_CUTOFF","setTimeout","App","keydown","which","ReactDOM","render","parent","FRONTEND_URL","SCALE_LINEAR","SCALE_LOG","LOAD_USER_CONFIG","LOADED_USER_CONFIG","SAVE_USER_CONFIG","SAVED_USER_CONFIG","FETCH_WORKSPACE_PROJECTS","FETCHED_WORKSPACE_PROJECTS","MENU_NEW_PROJECT","CREATE_NEW_PROJECT","CREATED_NEW_PROJECT","DELETE_FILE","RENAME_FILE","LOAD_GRAPH_JSON","LOAD_GRAPH_SQLITE","LOADED_GRAPH_JSON","LOAD_TOAST_KEY","SAVE_GRAPH_JSON","SAVE_GRAPH_SQLITE","SAVED_GRAPH_JSON","SAVE_TOAST_KEY","MENU_LOAD","MENU_IMPORT_CSV","MENU_SAVE_GRAPH_STATE","MENU_SAVE_GRAPH_STATE_TO_PROJECT","MENU_SAVE_GRAPH_SQLITE","SAVE_GRAPH_STATE","SAVED_GRAPH_STATE","SAVE_GRAPH_STATE_TO_PROJECT","SAVED_GRAPH_STATE_TO_PROJECT","LOAD_GRAPH_STATE","LOADED_GRAPH_STATE","SHOW_ITEM_IN_FOLDER","SHOW_WORKSPACE_FOLDER","CHANGE_WORKSPACE_FOLDER","CHANGED_WORKSPACE_FOLDER","CHOOSE_EDGE_FILE","CHOSEN_EDGE_FILE","CHOOSE_NODE_FILE","PEAKED_NODE_FILE","CHOSEN_NODE_FILE","CHOOSE_GRAPH_FILE","CHOSEN_GRAPH_FILE","CHOOSE_STATE_FILE","CHOSEN_STATE_FILE","IMPORT_GRAPH","IMPORTED_GRAPH","OPEN_GRAPH","OPENED_GRAPH","SEARCH_REQUEST","SEARCH_RESPONSE","ADD_NODES","ADD_SELECT_NODE","ADD_NODE","GET_NEIGHBORS","ipcRenderer","eventString","filePath","hasNodeFile","toJS","importGraphFromCSV","postImportFilter","importGraphFromGexf","readCSV","fileObject","Promise","resolve","reject","err","msg","parseGEXF","parser","DOMParser","xmlDoc","parseFromString","xmlEdges","getElementsByTagName","xmlNodes","xmlAttri","nodeAttri","edgesArr","nodesArr","nodeAttriOrdered","curr","getAttribute","currEdge","s","t","currNode","nodeAttvalues","nodeAttvalue","pagerank","j","attributes","attributeIdElementAttribute","attributeId","currAttri","readGEXF","config","parseInt","degreeDict","edgesSet","edgeKey","rank","pageRank","gexfParsed","projectMetadata","$","Node","index","in","out","domainData","vx","vy","connectedTo","outNodeIds","outNode","inArray","prototype","connectNode","exports","memcpy","srcOffset","dst","dstOffset","subarray","buffer","MeshLine","previous","next","side","indices_array","uvs","counters","geometry","BufferGeometry","widthCallback","setGeometry","c","Geometry","vertices","z","Float32Array","compareV3","aa","ab","copyV3","w","copyArray","needsUpdate","uv","Uint16Array","BufferAttribute","addAttribute","setIndex","advance","array","MeshLineMaterial","parameters","check","d","Material","call","lineWidth","useMap","opacity","resolution","Vector2","sizeAttenuation","near","far","dashArray","useDash","alphaTest","material","RawShaderMaterial","uniforms","vertexShader","fragmentShader","setValues","create","constructor","copy","def","default","OrbitControls","d3","module","selectNode","dragging","selection","isSelected","updateSelection","mouseX","mouseY","clearSelection","NODE_NO_HIGHLIGHT","draw_object","visible","textHolder","element","hideme","diffx","diffy","clickedNode","pinnedx","pinnedy","fx","fy","hcolor","checkSelection","mouseEnd","Vector3","mouseStart","right","npos","options","layout","force","getNodePosition","insideBox","posx","posy","balancedBinTree","Argo","Toaster","TOP","STATS","STATS_SHOW","NODE_COLOR","NODE_HIGHLIGHT","ADJACENT_HIGHLIGHT","SEARCH_HIGHLIGHT","NODE_HTEXTURE","NODE_TEXTURE","NODE_NO_HTEX","NODE_NO_TEX","NODE_NO_HCOLOR","NODE_NO_COLOR","NODE_NEIGHBOR_HIGHLIGHT","NODE_SHAPE","NODE_HSHAPE","NODE_SIZE","HIGHLIGHT_SIZE","LAYOUT","LINES","MAP","MAP_RENDER_PER_NUMBER_OF_FRAME","TEXT_SCALE","TEXT_SIZE","TEXT_X_OFFSET","TEXT_Y_OFFSET","TEXT_BACK_COLOR","TEXT_OPACITY","TEXT_WIREFRAME","PIN_COLOR","spawn","inGraph","layout_options","graphLayout","lineObjects","lineIndices","MAX_LINES","textureLoader","TextureLoader","crossOrigin","oldIntersect","fov","showBox","renderWidth","renderHeight","maxZoom","mouseDown","layoutInit","relativeFontSize","mapShowing","mapRenderPerNumberOfFrame","lastNode","doHighlightNeighbors","prevHighlights","hull","stats","showPanel","appendChild","dom","begin","controls","update","end","requestAnimationFrame","renderer","WebGLRenderer","alpha","antialias","preserveDrawingBuffer","minimapRenderer","setDisplayParams","setRendererParams","setupCamera","setupMinimap","setupGeometry","setupSelect","innerHTML","domElement","cssRenderer","setupLayout","setupGraph","preventDefault","onWindowResize","clientRect","getBoundingClientRect","minimap","aspect","ccamera","updateProjectionMatrix","setSize","stage","numberOfFrameSinceMiniMapRerender","updateCamera","updateNodes","updateLabels","updateEdges","forceLink","restart","stop","tickToStatic","ceil","alphaMin","alphaDecay","tick","setViewport","setScissor","setScissorTest","scene","camera","QuickHull","tolerance","faces","newFaces","assigned","VertexList","unassigned","Face","normal","midpoint","area","constant","outside","mark","edge","HalfEdge","vertex","face","prev","twin","VertexNode","point","head","tail","assign","setFromPoints","points","isArray","makeEmpty","compute","setFromObject","object","updateMatrixWorld","traverse","isGeometry","clone","applyMatrix4","matrixWorld","isBufferGeometry","attribute","count","fromBufferAttribute","addVertexToFace","append","insertBefore","removeVertexFromFace","remove","removeAllVerticesFromFace","start","removeSubList","deleteFaceVertices","absorbingFace","faceVertices","appendChain","nextVertex","distanceToPoint","resolveUnassignedPoints","isEmpty","first","maxDistance","maxFace","distance","computeExtremes","minVertices","maxVertices","getComponent","setComponent","EPSILON","abs","computeInitialHull","line3","plane","closestPoint","Line3","Plane","v0","v1","v2","v3","extremes","closestPointToPoint","distanceToSquared","setFromCoplanarPoints","getEdge","setTwin","reindexFaces","activeFaces","nextVertexToAdd","eyeVertex","eyeFace","computeHorizon","eyePoint","crossEdge","horizon","twinEdge","oppositeFace","addAdjoiningFace","horizonEdge","addNewFaces","firstSideEdge","previousSideEdge","sideEdge","addVertexToHull","cleanup","e0","e1","e2","triangle","Triangle","dot","distanceTo","lengthSquared","last","insertAfter","ConvexGeometry","fromBufferGeometry","ConvexBufferGeometry","mergeVertices","normals","Float32BufferAttribute","CSS3DObject","Object3D","parentNode","removeChild","CSS3DSprite","CSS3DRenderer","_width","_height","REVISION","matrix","Matrix4","objects","createElement","WebkitTransformStyle","MozTransformStyle","oTransformStyle","transformStyle","cameraElement","epsilon","getObjectCSSMatrix","elements","setClearColor","isPaused","getSize","tan","degToRad","getEffectiveFOV","WebkitPerspective","MozPerspective","oPerspective","perspective","matrixWorldInverse","getInverse","getCameraCSSMatrix","WebkitTransform","MozTransform","oTransform","transform","renderObject","transpose","copyPosition","cachedStyle","minDistance","Infinity","minZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","LEFT","UP","RIGHT","SPACE","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","target0","position0","zoom0","zoom","spacePan","bothPan","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","reset","scope","dispatchEvent","changeEvent","STATE","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","makeSafe","radius","panOffset","setFromSpherical","lookAt","zoomChanged","EPS","quaternion","dispose","removeEventListener","onContextMenu","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","pan","deltaX","deltaY","PerspectiveCamera","targetDistance","clientHeight","OrthographicCamera","clientWidth","bottom","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","clientX","clientY","button","handleMouseDownRotate","handleMouseDownDolly","subVectors","handleMouseMoveRotate","handleMouseMoveDolly","spacePanStart","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDolly","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleKeyUp","EventDispatcher","defineProperties","center","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","relMouseCoords","currentElement","totalOffsetX","totalOffsetY","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","prepNode","nodeToAdd","exec","numYeast","random","tsize","make1x1Rect","rectShape","Shape","moveTo","lineTo","ShapeGeometry","make2x2Rect","volToRadius","volume","createNGraph","setupNgraphLayout","setupD3Layout","forceSimulation","forceManyBody","strength","forceY","forceX","velocityDecay","zIndex","setPixelRatio","devicePixelRatio","oldCoords","panToMousePosition","coordX","coordY","coefficient","Scene","Group","setupFancyEdges","setUpSimpleEdges","rect","setupSelectionBox","setupBoundaries","setupViewPort","edgeCount","LineBasicMaterial","linewidth","vertexColors","VertexColors","shading","FlatShading","line","LineSegments","frustumCulled","colors","directedArrows","arrowMaterial","MeshBasicMaterial","arrow","Mesh","arrowPositions","arrowColors","drawCount","selectBox","Line","boundaries","setBoundarySize","viewPort","setViewPortSize","computeBoundingSphere","setupMouseHandlers","callback","coords","mousePosition","unproject","normalize","isMouseCoordinatesOnMinimap","raycaster","Raycaster","pos","onRightClick","focus","onRightClickCoords","callMouseHandler","intersects","intersectObjects","nodeIndex","getNode","ctrlKey","mouseHandler","graphNode","drawNode","links","removeNode","removeGraphEdges","undrawEdges","undrawNode","nodeLinks","getLinks","removeLink","hidden","killed","drawEdge","highlightNode","toggle","setHex","highlightEdges","froms","tos","highlightNeighbors","colorNodeOpacity","colorNodeEdge","linkObjs","isHighlighted","setRGB","op","ctrl","leftMouseDown","lastHover","endTime","oldStartTime","clickDifference","doubleClicked","newNodeIds","emit","setUniformNodeSize","hsize","setNodeDataSize","dataValue","dataVal","setUniformNodeColor","hsvDegree","setNodeDataColor","mapNodeAttributes","val","mod","attr","changeLabelFontSize","changeLabelLength","changeNodes","changeNode","numChars","relativeSize","createHighlightMesh","texture","hshape","hgeometry","CircleGeometry","createHighlightDrawObject","getNodeSize","hmaterial","transparent","highlight","createNodeMesh","createNodeDrawObject","createPinMesh","pinMesh","createNodeLabel","wireframe","wireframeLinewidth","DoubleSide","PlaneGeometry","textMesh","createAndSetupLabelTextMesh","createAndSetupLabelDiv","createAndSetupTextHolder","bbox","Box3","createLabelDiv","createLabelDivElement","createTextNode","textElement","createLabelTextElement","textOverflow","setupNodeDrawObject","htexture","onTextureLoad","load","himage","image","hide","updateColorsAndPositions","v1pos","v2pos","v1color","v2color","setMouseMode","mouseMode","isMouseModeMove","pause","mapSelectedNodes","mapAllNodes","setLabelFontSize","toggleMiniMap","turnOnLabelCSSRenderer","updateNodesShowingLabels","toggleLabels","hideLabels","setCanvasSize","setAllNodesShape","setNodeShape","getNumSelected","getNodesCount","updateViewPortEdgeColor","getGraph","getNodeList","poses","getPinPositions","alias","toggleAlias","setLastNode","dragLastNode","lowerRes","toggleNeighborHighlight","removeSelected","getSelected","setDrawRange","total","arrowPosition","midPointX","midPointY","dX","dY","radianDegree","atan","tempXCorner","cos","tempYCorner","sin","degreeDifference","thisNode","step","oldNode","updateNode","forEachLink","link","getLink","newNode","childNodes","innerText"],"mappings":"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","file":"static/js/main.3af8d35b.chunk.js","sourcesContent":["import { observable, action } from \"mobx\";\nimport { requestLoadUserConfig, requestSaveUserConfig } from \"../ipc/client\";\nimport { IS_IFRAME_WIDGET } from \"../constants\";\n\nexport default class PreferencesStore {\n  @observable dialogOpen = false;\n\n  @observable openDialogOpen = false;\n  @observable openSnapshotDialogOpen = false;\n  @observable shareDialogOpen = false;\n  @observable statisticsDialogOpen = false;\n  @observable helpDialogOpen = false;\n  @observable neighborDialogOpen = false;\n  @observable dataSheetDialogOpen = false;\n  @observable isRenderOptionsCardHidden = IS_IFRAME_WIDGET;\n\n  // The following fields are asynchronously loaded.\n  // Any writes to these fields through saveUserConfig\n  // won't be active until the app exits and starts\n  // next time.\n\n  @observable darkMode = true;\n  @observable minimapShowing = !IS_IFRAME_WIDGET;\n  @observable isStatusBarShowing = !IS_IFRAME_WIDGET;\n  @observable isNavbarInMinimalMode = IS_IFRAME_WIDGET;\n  @observable isLegendShowing = !IS_IFRAME_WIDGET;\n\n  @observable workspacePath = '';\n\n  // This is called at the beginning of the app.\n  loadUserConfig() {\n    requestLoadUserConfig();\n  }\n\n  saveUserConfig() {\n    const userConfig = {\n      darkMode: this.darkMode,\n      workspace: this.workspacePath,\n    }\n\n    requestSaveUserConfig(userConfig);\n  }\n\n  turnOnMinimalMode() {\n    this.isRenderOptionsCardHidden = true;\n    this.minimapShowing = false;\n    this.isStatusBarShowing = false;\n    this.isNavbarInMinimalMode = true;\n    this.isLegendShowing = false;\n    if (appState.graph.frame) {\n      appState.graph.frame.hideMiniMap();\n    } else {\n      console.log(\"Frame not ready when trying to toggle minimap.\");\n    }\n    \n  }\n\n  turnOffMinimalMode() {\n    this.isRenderOptionsCardHidden = false;\n    this.minimapShowing = true;\n    this.isStatusBarShowing = true;\n    this.isNavbarInMinimalMode = false;\n    this.isLegendShowing = true;\n    if (appState.graph.frame) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      console.log(\"Frame not ready when trying to toggle minimap.\");\n    }\n  }\n}","const jsnx = require('jsnetworkx');\nconst jsgraphs = require('js-graph-algorithms');\n\n/**\n * Convert Argo-lite snapshot for use in the JSNetworkX library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJsnx(snapshot) {\n    const jsnxGraph = new jsnx.Graph();\n    jsnxGraph.addNodesFrom(snapshot.rawGraph.nodes.map(n => [n.id, n]));\n    jsnxGraph.addEdgesFrom(snapshot.rawGraph.edges.map(e => [e.source_id, e.target_id]));\n    return jsnxGraph;\n}\n\n/**\n * Convert Argo-lite snapshot for use in the ngraph library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToNGraph(snapshot) {\n    return null;\n}\n\n/**\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJSGraph(snapshot) {\n    var idDict = {};\n    var i;\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\n    }\n    var g = new jsgraphs.Graph(snapshot.rawGraph.nodes.length);\n    snapshot.rawGraph.edges.forEach(e => {\n        g.addEdge(idDict[e.source_id], idDict[e.target_id]);\n    });\n    return [g, idDict];\n}\n\n/**\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library (Weighted).\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJSGraphWeightedDi(snapshot) {\n    var idDict = {};\n    var i;\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\n    }\n    var g = new jsgraphs.WeightedDiGraph(snapshot.rawGraph.nodes.length);\n    snapshot.rawGraph.edges.forEach(e => {\n        g.addEdge(new jsgraphs.Edge(idDict[e.source_id], idDict[e.target_id], 1.0));\n    });\n    return [g, idDict];\n}\n\n/**\n * Convert Argo-lite snapshot to the GEXF format.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToGexf(snapshot) {\n    return null;\n}\n\n/**\n * Calculate the average clustering coefficient of the (undirected unweighted) graph.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function averageClusteringCoefficient(snapshot) {\n    const jsnxGraph = convertToJsnx(snapshot);\n    const result = jsnx.averageClustering(jsnxGraph);\n    console.log('Computing Clustering Coefficient');\n    return result;\n}\n\n/**\n * Calculate the number of connected components in a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function connectedComponents(snapshot) {\n    var cc = new jsgraphs.ConnectedComponents(convertToJSGraph(snapshot)[0]);\n    return cc.componentCount();\n}\n\n/**\n * Calculate the density of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function graphDensity(snapshot) {\n    const nodeCount = snapshot.rawGraph.nodes.length;\n    const edgeCount = snapshot.rawGraph.edges.length / 2;\n    return (2 * edgeCount) / ((nodeCount) * (nodeCount - 1));\n}\n\n/**\n * Calculate the average degree of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function averageDegree(snapshot) {\n    let sum = 0;\n    snapshot.rawGraph.nodes.forEach(e => {\n            sum += e.degree;\n        }\n    )\n    return sum / snapshot.rawGraph.nodes.length;\n}\n\n/**\n * Calculate the diameter of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function exactGraphDiameter(snapshot) {\n    let temp = convertToJSGraphWeightedDi(snapshot);\n    let jsg = temp[0];\n    let idDict = temp[1]\n    let dia = -1;\n    snapshot.rawGraph.nodes.forEach(e => {\n        let dijkstra = new jsgraphs.Dijkstra(jsg, idDict[e.id]);\n        snapshot.rawGraph.nodes.forEach(f => {\n            if(dijkstra.hasPathTo(idDict[f.id])){\n                let pathLength = dijkstra.pathTo(idDict[f.id]).length;\n                dia = Math.max(dia, pathLength);\n            }\n        })\n    });\n    return dia;\n}\n ","import { observable, computed, action, runInAction } from \"mobx\";\nimport createGraph from \"ngraph.graph\";\nimport { scales } from \"../constants/index\";\nimport uniq from \"lodash/uniq\";\nimport { averageClusteringCoefficient, connectedComponents, graphDensity, averageDegree, exactGraphDiameter } from \"../services/AlgorithmUtils\";\nimport { ContextMenu, MenuFactory, MenuItemFactory } from \"@blueprintjs/core\";\nimport { Frame } from \"../graph-frontend\";\n\nexport default class GraphStore {\n\n  initialGlobalConfig = {\n    nodes: {\n      colorBy: \"pagerank\",\n      color: {\n        scale: \"Linear Scale\",\n        from: \"#448AFF\",\n        to: \"#E91E63\"\n      },\n      sizeBy: \"pagerank\",\n      size: {\n        min: 2,\n        max: 10,\n        scale: \"Linear Scale\"\n      },\n      labelBy: \"node_id\",\n      shape: \"circle\",\n      labelSize: 1,\n      labelLength: 10\n    },\n    edges: {\n      color: \"#7f7f7f\"\n    }\n  }\n\n  @observable nodes = this.initialGlobalConfig.nodes;\n  @observable edges = this.initialGlobalConfig.edges\n\n  @observable enableDegree = true;\n  @observable enableDensity = true;\n  @observable enableDiameter = false;\n  @observable enableCoefficient = true;\n  @observable enableComponent = true;\n\n  //access to process.js \"self\"\n  @observable process = undefined;\n\n  // Updated by frame event\n  @observable selectedNodes = [];\n\n  // Currently hovered node\n  @observable currentlyHovered = undefined;\n\n\n  /**\n   * Stores data relevant to smart pause feature\n   */\n  @observable smartPause = {\n    defaultActive: { //data for when graph layout is resumed and smart pause is not in effect \n      isActive: true, //true when layout is resumed and smart pause is not in effect\n      startTime: Date.now(), //keeps track of most recent time graph was unpaused\n      duration: 10000, //duration of resumed layout\n    },\n    //lastUnpaused: undefined, //old code using lastUnpaused\n    smartPaused: false, //true when resumed, but graph layout is paused due to inactivity\n    interactingWithGraph: false, //true when node is clicked or dragged. TODO: refactor to more understandable name\n  }\n\n\n  // Directed or not\n  @observable directedOrNot = false;\n\n  // Cache the single node that's been selected last time\n  // and will not update unless exactly one node is selected again\n  // useful for NeighborDialog\n  _lastSelectedSingleNode = null;\n  @computed\n  get lastSelectedSingleNode() {\n    if (this.selectedNodes.length === 1) {\n      this._lastSelectedSingleNode = this.selectedNodes[0];\n    }\n    return this._lastSelectedSingleNode;\n  }\n  // Updated by frame event. Not being listened, only used to save label visibility.\n  nodesShowingLabels = [];\n  // Used by autorun during snapshot loading.\n  @observable initialNodesShowingLabels = [];\n\n  @observable\n  overrideConfig = {\n    color: \"#000\",\n    size: 5,\n    label: \"\",\n    shape: \"circle\"\n  };\n\n  @observable\n  rawGraph = {\n    nodes: [],\n    edges: []\n  };\n\n  //saved states from loaded graph snapshot\n  @observable savedStates = null;\n\n  @observable\n  metadata = {\n    fullNodes: 0,\n    fullEdges: 0,\n    nodeProperties: [],\n    nodeComputed: [\"pagerank\", \"degree\"],\n    edgeProperties: [],\n    snapshotName: \"loading...\" // Optional: for display in Argo-lite only\n  };\n\n  // used for listing all the properties, either original or computed\n  @computed\n  get allPropertiesKeyList() {\n    return uniq([\n      ...this.metadata.nodeProperties,\n      ...this.metadata.nodeComputed\n    ]).filter(k => k !== 'id'); // since node_id is already present\n  }\n\n  @observable.ref frame = null;\n  @observable.ref positions = null;\n  @observable pinnedNodes = null;\n\n  @observable overrides = new Map();\n  @observable searchOrder = \"degree\";\n\n  hasGraphLoaded = false;\n\n  @computed\n  get hasGraph() {\n    if (this.rawGraph.nodes.length > 0) {\n      this.hasGraphLoaded = true;\n    }\n    return this.hasGraphLoaded;\n  }\n\n  @computed\n  get minMax() {\n    const ret = {};\n    for (const p of [\n      ...this.metadata.nodeProperties,\n      ...this.metadata.nodeComputed\n    ]) {\n      let min = Number.MAX_VALUE;\n      let max = Number.MIN_VALUE;\n\n      for (const n of this.rawGraph.nodes) {\n        min = Math.max(Math.min(min, n[p]), 0.0000001);\n        max = Math.max(max, n[p]);\n      }\n\n      ret[p] = [min, max];\n    }\n    return ret;\n  }\n\n  @computed\n  get nodeSizeScale() {\n    return scales[this.nodes.size.scale]()\n      .domain(this.minMax[this.nodes.sizeBy])\n      .range([this.nodes.size.min, this.nodes.size.max]);\n  }\n\n  @computed\n  get nodeColorScale() {\n    return scales[this.nodes.color.scale]()\n      .domain(this.minMax[this.nodes.colorBy])\n      .range([this.nodes.color.from, this.nodes.color.to]);\n  }\n\n  // Return raw graph nodes that is neighbor with the selected node,\n  // excluding the node itself.\n  getNeighborNodesFromRawGraph(selectedNodeId) {\n    const setOfNeighborIds = new Set();\n    this.rawGraph.edges.forEach(e => {\n      const source = e.source_id.toString();\n      const target = e.target_id.toString();\n      if (source === selectedNodeId && target !== selectedNodeId) {\n        setOfNeighborIds.add(target);\n      }\n      if (target === selectedNodeId && source !== selectedNodeId) {\n        setOfNeighborIds.add(source);\n      }\n    });\n    return this.rawGraph.nodes.filter(node => setOfNeighborIds.has(node.id.toString()));\n  }\n\n  // Triggers autorun in stores/index.js to sent computedGraph to graph-frontend.\n  @computed\n  get computedGraph() {\n    const graph = createGraph();\n    this.rawGraph.nodes.forEach(n => {\n      // If isHidden flag is defined and true, ignore the node in graph-frontend.\n      if (n.isHidden) {\n        return;\n      }\n      const override = this.overrides.get(n.id.toString());\n      graph.addNode(n.id.toString(), {\n        label: (override && override.get(\"label\")) || n[this.nodes.labelBy],\n        size:\n          (override && override.get(\"size\")) ||\n          this.nodeSizeScale(n[this.nodes.sizeBy]),\n        color:\n          (override && override.get(\"color\")) ||\n          this.nodeColorScale(n[this.nodes.colorBy]),\n        shape: (override && override.get(\"shape\")) || n[this.nodes.shape],\n        ref: n\n      });\n    });\n\n    this.rawGraph.edges.forEach(e => {\n      // If isHidden flag is defined and true on an associated node,\n      // leave out its related edges.\n      if (graph.hasNode(e.source_id.toString()) && graph.hasNode(e.target_id.toString())) {\n        graph.addLink(e.source_id.toString(), e.target_id.toString());\n      }\n    });\n\n    return graph;\n  }\n\n  @computed\n  get numHiddenNodes() {\n    return this.rawGraph.nodes.filter(n => n.isHidden).length;\n  }\n\n  showNodes(nodeids) {\n    runInAction('show hidden nodes by ids', () => {\n      this.rawGraph.nodes = this.rawGraph.nodes.map(n => {\n        if (nodeids.includes(n.id)) {\n          return { ...n, isHidden: false };\n        }\n        return n;\n      });\n    });\n  }\n\n  hideNodes(nodeids) {\n    runInAction('hide nodes by ids', () => {\n      this.frame.removeNodesByIds(nodeids);\n      this.rawGraph.nodes = this.rawGraph.nodes.map(n => {\n        if (nodeids.includes(n.id)) {\n          return { ...n, isHidden: true };\n        }\n        return n;\n      });\n    });\n  }\n\n  removeNodes(nodeids) {\n    runInAction('remove nodes by ids', () => {\n      this.frame.removeNodesByIds(nodeids);\n      this.rawGraph.nodes = this.rawGraph.nodes.filter(\n        n => !nodeids.includes(n.id)\n      );\n      this.rawGraph.edges = this.rawGraph.edges.filter(\n        e => !nodeids.includes(e.source_id) && !nodeids.includes(e.target_id)\n      );\n    });\n  }\n\n  getSnapshot() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n      overrides: this.overrides,\n      nodesShowingLabels: this.nodesShowingLabels,\n      positions: this.frame.getPositions(),\n      pinnedNodes: Array.from(this.frame.getPinnedNodes()),\n      metadata: this.metadata,\n      global: {\n        nodes: this.nodes,\n        edges: this.edges,\n      },\n    };\n    return snapshot;\n  }\n\n  /**\n   * [Argo-lite] Saves graph snapshot as String\n   * \n   * Note that Argo-lite snapshot contains all graph data\n   * and metadata except nodes/edges deleted by users.\n   * This is different from Argo-electron snapshot.\n   */\n  saveImmediateStates(optionalConfig) {\n    const snapshot = this.getSnapshot();\n    // TODO: add corresponding options on frontend\n    // The optional options allows users to leave out\n    // certain app state when saving snapshot\n    if (optionalConfig) {\n      if (optionalConfig.noPosition) {\n        snapshot.positions = undefined;\n      }\n      if (optionalConfig.noGlobal) {\n        snapshot.global = undefined;\n      }\n      if (optionalConfig.noOverride) {\n        snapshot.overrides = undefined;\n      }\n    }\n    return JSON.stringify(snapshot);\n  }\n\n  @action\n  loadImmediateStates(savedStatesStr) {\n    const savedStates = JSON.parse(savedStatesStr);\n    this.savedStates = savedStates;\n    if (!savedStates) {\n      return;\n    }\n    const savedOverrides = new Map(\n      Object.entries(savedStates.overrides).map(([k, v]) => [\n        k,\n        new Map(Object.entries(v))\n      ])\n    );\n    this.overrides.clear();\n    this.overrides.merge(savedOverrides);\n\n    if (savedStates.metadata) {\n      this.metadata = savedStates.metadata;\n    }\n    if (savedStates.global) {\n      this.nodes = savedStates.global.nodes;\n      this.edges = savedStates.global.edges ? savedStates.global.edges : this.edges;\n    }\n    // The following lines trigger autoruns.\n    this.rawGraph = savedStates.rawGraph;\n    if (savedStates.positions) {\n      this.positions = savedStates.positions;\n    }\n    if (savedStates.nodesShowingLabels) {\n      this.initialNodesShowingLabels = savedStates.nodesShowingLabels;\n      this.nodesShowingLabels = savedStates.nodesShowingLabels;\n    }\n\n    //stores data pinned nodes in appState\n    if (savedStates.pinnedNodes) {\n      this.pinnedNodes = new Set(savedStates.pinnedNodes);\n    }\n\n\n    this.runActiveLayout();\n  }\n\n\n  //resumes graph layout for a set duration before smart-pausing\n  runActiveLayout() {\n    if(this.frame) {\n      this.frame.paused = false;\n    } \n    this.smartPause.defaultActive.isActive = true;\n    this.smartPause.defaultActive.startTime = Date.now();\n    this.smartPause.smartPaused = false;\n  }\n\n  //selects which nodes should be pinned based on saved state of loaded snapshot\n  pinNodes() {\n    if (this.pinnedNodes) {\n      let nodesToPin = [];\n      let that = this; //\"this\" will not work inside of forEach, so it needs to be stored\n      this.process.graph.forEachNode(function (n) {\n        if (that.pinnedNodes.has(n.id)) {\n          nodesToPin.push(n);\n        }\n      });\n      this.frame.setPinnedNodes(nodesToPin);\n    }\n  }\n\n  setUpFrame() {\n    const graphFrame = new Frame(this.computedGraph);\n    graphFrame.init();\n    graphFrame.display();\n    this.frame = graphFrame;\n    graphFrame.ee.on(\"select-nodes\", nodes => {\n      this.selectedNodes = nodes;\n    });\n    graphFrame.ee.on(\"show-node-label\", nodes => {\n      this.nodesShowingLabels = nodes;\n    });\n    graphFrame.ee.on(\"right-click\", data => {\n      const menu = MenuFactory({\n        children: [\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.toggleSelectedLabels();\n            },\n            text: 'Toggle Labels',\n            key: 'Toggle Labels'\n          }),\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.unpinSelectedNodes();\n            },\n            text: 'Unpin Selected',\n            key: 'Unpin Selected'\n          }),\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.pinSelectedNodes();\n            },\n            text: 'Pin Selected',\n            key: 'Pin Selected'\n          }),\n          this.frame.rightClickedNode && MenuItemFactory({\n            onClick: () => {\n              if (this.frame.rightClickedNode) {\n                const rightClickedNodeId = this.frame.rightClickedNode.data.ref.id.toString();\n                const neighbors = this.getNeighborNodesFromRawGraph(rightClickedNodeId);\n                neighbors.sort((n1, n2) => {\n                  if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n                    return n2[\"pagerank\"] - n1[\"pagerank\"];\n                  }\n                  return 0;\n                });\n                const ids = [];\n                for (let i = 0; i < 5 && i < neighbors.length; i++) {\n                  ids.push(neighbors[i].id);\n                }\n                this.showNodes(ids);\n              }\n            },\n            text: 'Show 5 Neighbors with Highest PageRank',\n            key: 'Show 5 Neighbors with Highest PageRank'\n          }),\n        ]\n      });\n      ContextMenu.show(menu, { left: data.pageX, top: data.pageY }, () => {\n        // onMenuClose\n        console.log(\"ContextMenu closed\");\n      });\n    });\n  }\n\n  /*\n   * Graph algorithms used in StatisticsDialog.\n   */\n\n  get averageClustering() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return averageClusteringCoefficient(snapshot);\n  }\n\n\n  get components() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return connectedComponents(snapshot);\n  }\n\n  @computed\n  get density() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return graphDensity(snapshot);\n  }\n\n  @computed\n  get degree() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return averageDegree(snapshot);\n  }\n\n  @computed\n  get diameter() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return exactGraphDiameter(snapshot);\n  }\n}","import { observable } from \"mobx\";\n\nexport default class ImportStore {\n  @observable graphFile = \"\";\n  @observable stateFile = \"\";\n\n  @observable dialogOpen = false;\n  @observable gexfDialogOpen = false;\n\n  @observable loading = false;\n\n  // Argo-lite specific: File object selected via the file input.\n  @observable selectedEdgeFileFromInput = null;\n  @observable selectedNodeFileFromInput = null;\n\n  @observable selectedGexfFileFromInput = null;\n\n  @observable\n  importConfig = {\n    nodeFile: {\n      path: \"\",\n      topN: [],\n      hasColumns: true,\n      ready: false, // whether the topN is ready to display\n      columns: [],\n      mapping: {\n        id: \"<UNK>\"\n      },\n      delimiter: \",\"\n    },\n    edgeFile: {\n      path: \"\",\n      ready: false,\n      hasColumns: true,\n      columns: [],\n      topN: [],\n      mapping: {\n        fromId: \"<UNK>\",\n        toId: \"<UNK>\"\n      },\n      createMissing: true,\n      delimiter: \",\"\n    }\n  };\n\n  /*\n    Post Import Filtering related options.\n  */\n\n  postImportFilteringOptions = {\n    \"top 10 nodes with highest PageRank scores\": (rawGraph) => {\n      const sortedList = [...rawGraph.nodes];\n      sortedList.sort((n1, n2) => {\n          if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n              return n2[\"pagerank\"] - n1[\"pagerank\"];\n          }\n          return 0;\n      });\n      const setIds = new Set();\n      for (let i = 0; i < 10 && i < sortedList.length; i++) {\n        setIds.add(sortedList[i].id);\n      }\n      rawGraph.nodes = rawGraph.nodes.map(n => {\n        if (setIds.has(n.id)) {\n          return {...n, isHidden: false};\n        }\n        return n;\n      });\n    },\n    \"All Nodes\": (rawGraph) => {\n      rawGraph.nodes = rawGraph.nodes.map(n => ({...n, isHidden: false}));\n    },\n  };\n\n  defaultPostImportFilteringOption = \"top 10 nodes with highest PageRank scores\";\n  \n  @observable selectedPostImportFilteringOption = this.defaultPostImportFilteringOption;\n\n  postImportFilter(rawGraph) {\n    // Hide all nodes by default, use filtering option to show them.\n    rawGraph.nodes = rawGraph.nodes.map(n => ({...n, isHidden: true}));\n    // Run the selected post import filtering option.\n    this.postImportFilteringOptions[this.selectedPostImportFilteringOption](rawGraph);\n  }\n\n\n}\n","import { observable } from \"mobx\";\n\nexport default class ProjectStore {\n \n  @observable projects = [];\n\n  /*\n   * Active project and snapshot\n   */\n  @observable currentProject = null;\n  // @observable currentProjectName = null;\n  // @observable currentProjectPath = null;\n  @observable currentSnapshotName = \"Quick Save\"; // TODO: If not loaded from snapshot, use this, otherwise use the name of the loaded snapshot\n\n  // [Argo-lite] for displaying snapshot file in textarea to be copied\n  @observable stringCopyOfSnapshot = 'Loading';\n  \n  /*\n   * Dialogs and UI\n   */\n  @observable isNewProjectDialogOpen = false;\n  @observable isProjectDetailDialogOpen = false;\n  @observable isSaveSnapshotDialogOpen = false;\n  @observable isRenameSnapshotDialogOpen = false;\n  // when the ipc returns the projects data for the first time\n  // turn off `isFetching` so that the spinner of WorkspaceView will be turned off\n  // Also used when refreshing WorkspaceView\n  @observable isFetching = true;\n\n  /*\n   * New project creation and import\n   */\n  @observable newProjectName = '';\n}\n","import { observable } from \"mobx\";\n\nexport default class SearchStore {\n  @observable searchStr = \"\";\n  @observable candidates = [];\n  @observable numCandidates = 0;\n  @observable panelOpen = false;\n}\n","import { autorun, runInAction } from \"mobx\";\nimport { Intent } from \"@blueprintjs/core\";\n\nimport PreferencesStore from \"./PreferencesStore\";\nimport GraphStore from \"./GraphStore\";\nimport ImportStore from \"./ImportStore\";\nimport ProjectStore from \"./ProjectStore\";\n// import { peakCSV } from \"../services/CSVUtils\";\nimport parse from \"csv-parse/lib/sync\";\nimport SearchStore from \"./SearchStore\";\nimport { runSearch } from \"../ipc/client\";\n\nimport { BACKEND_URL, SAMPLE_GRAPH_SNAPSHOTS} from \"../constants\";\nimport { toaster } from '../notifications/client';\n\nexport class AppState {\n  constructor() {\n    this.preferences = new PreferencesStore();\n    this.graph = new GraphStore();\n    this.import = new ImportStore();\n    this.search = new SearchStore();\n    this.project = new ProjectStore();\n  }\n}\n\nconst appState = new AppState();\n\nwindow.appState = appState;\n\nconst loadSnapshotFromURL = (url) => {\n  return fetch(url, {\n    method: 'GET',\n    mode: 'cors'\n  }).then(response => response.text()).catch(error => {\n    toaster.show({\n      message: 'Failed to fetch graph snapshot',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n    console.error(error);\n  });\n};\n\nconst loadSnapshotFromStrapi = (uuid) => {\n  const url = `${BACKEND_URL}/snapshots?uuid=${uuid}`;\n  return fetch(url, {\n    method: 'GET',\n    mode: 'cors'\n  }).then(response => response.json()).then(json => json[0].body).catch(error => {\n    toaster.show({\n      message: 'Failed to fetch graph snapshot',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n    console.error(error);\n  });\n};\n\nconst loadAndDisplaySnapshotFromURL = (url) => {\n  loadSnapshotFromURL(url).then(snapshotString => {\n    // use filename/last segment of URL as title in Navbar\n    appState.graph.metadata.snapshotName = url.split('/').pop() || url.split('/').pop().pop();\n    appState.graph.loadImmediateStates(snapshotString);\n  });\n};\n\nconst loadAndDisplaySnapshotFromStrapi = (uuid) => {\n  loadSnapshotFromStrapi(uuid).then(snapshotString => {\n    // TODO: use more sensible snapshot name\n    appState.graph.metadata.snapshotName = 'Shared';\n    appState.graph.loadImmediateStates(snapshotString);\n  });\n};\n\nwindow.loadAndDisplaySnapshotFromURL = loadAndDisplaySnapshotFromURL;\nwindow.loadAndDisplaySnapshotFromStrapi = loadAndDisplaySnapshotFromStrapi;\n\nwindow.loadInitialSampleGraph = async () => {\n  // default fallback url\n  let url = \"https://argo-graph-lite.s3.amazonaws.com/lesmiserables.json\";\n\n  // check url hash\n  if (window.location.hash) {\n    const hash = window.location.hash.substring(1);\n    // If the hash component begins with http.\n    if (hash.length >= 4 && hash.startsWith('http')) {\n      try {\n        url = decodeURIComponent(hash);\n      } catch (e) {\n        console.error(e);\n        alert('Provided URL is not valid.');\n      }\n    } else {\n      // If the hash component does not begin with http\n      // treat it as a uuid in strapi.\n      loadAndDisplaySnapshotFromStrapi(hash);\n      return;\n    }\n    \n  }\n  // loadAndDisplaySnapshotFromURL(url)\n  loadAndDisplaySnapshotFromStrapi(SAMPLE_GRAPH_SNAPSHOTS[0][1]);\n};\n\nwindow.saveSnapshotToString = () => {\n  const snapshotString = appState.graph.saveImmediateStates();\n  return snapshotString;\n};\n\n// Load initial sample graph when Argo Lite is ready\nwindow.addEventListener('load', (event) => {\n  window.loadInitialSampleGraph();\n});\n\nconst updateTimeout = null;\n\n// Load graph on frontend once the rawGraph has been returned from IPC\n// Once a graph has been loaded and displayed, even if nodes are all deleted, still consider it \"hasGraph\"\nautorun(() => {\n  if (!appState.graph.hasGraph && appState.graph.rawGraph.nodes.length > 0) {\n    appState.graph.hasGraph = true;\n  }\n}) \n\nautorun(() => {\n  if (appState.graph.frame) {\n    appState.graph.frame.updateGraph(appState.graph.computedGraph); //loads nodes on screen when snapshot loaded\n    appState.graph.frame.setAllNodesShapeWithOverride(appState.graph.nodes.shape, appState.graph.overrides);\n    appState.graph.frame.setLabelRelativeSize(appState.graph.nodes.labelSize);\n    appState.graph.frame.setLabelLength(appState.graph.nodes.labelLength);\n  }\n\n  //pins nodes only after nodes are loaded\n  appState.graph.pinNodes();\n});\n\nautorun(() => {\n  if (appState.graph.frame && appState.graph.positions) {\n    // If positions are saved in a snapshot, pause layout upon loading.\n    appState.graph.frame.updatePositions(appState.graph.positions);\n    appState.graph.positions = null;\n    console.log('[autorun] Positions updated.');\n\n  }\n  if (appState.graph.frame && appState.graph.initialNodesShowingLabels) {\n    appState.graph.frame.showLabels(appState.graph.initialNodesShowingLabels);\n    appState.graph.initialNodesShowingLabels = null;\n  }\n});\n\nautorun(() => {\n  const searchStr = appState.search.searchStr;\n  if (searchStr.length >= 3) {\n    runSearch(searchStr);\n  } else {\n    appState.search.panelOpen = false;\n    appState.search.candidates.splice(0, appState.search.candidates.length);\n    if (appState.graph.frame) {\n      appState.graph.frame.highlightNodeIds([], true);\n    }\n  }\n});\n\n// Argo-lite specific: extract CSV from File object and update related fields.\nautorun(() => {\n  const file = appState.import.selectedEdgeFileFromInput;\n  const hasHeader = appState.import.importConfig.edgeFile.hasColumns;\n  const delimiter = appState.import.importConfig.edgeFile.delimiter;\n\n  if (!file) {\n    return;\n  }\n  const reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onload = () => {\n    // Read entire CSV into memory as string\n    const fileAsString = reader.result;\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\n    const lines = fileAsString.split('\\n');\n    const lineNumber = lines.length;\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\n    console.log(topLinesAsString);\n\n    // Parse the top lines\n    try {\n      const it = hasHeader ? parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: hasHeader,\n        delimiter\n      }) : parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: undefined,\n        delimiter\n      });\n      runInAction(\"preview top N lines of edge file\", () => {\n        appState.import.importConfig.edgeFile.topN = it;\n        appState.import.importConfig.edgeFile.columns = Object.keys(it[0]).map(key => `${key}`);\n        appState.import.importConfig.edgeFile.mapping.fromId = appState.import.importConfig.edgeFile.columns[0];\n        appState.import.importConfig.edgeFile.mapping.toId = appState.import.importConfig.edgeFile.columns[1];\n        appState.import.importConfig.edgeFile.ready = true;\n      });\n    } catch {\n      toaster.show({\n        message: 'Error: Fails to parse file',\n        intent: Intent.DANGER,\n        timeout: -1\n      });\n    }\n  };\n\n  reader.onerror = () => {\n    console.error(reader.error);\n    toaster.show({\n      message: 'Error: Fails to open file',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n  };\n});\n\nautorun(() => {\n  const file = appState.import.selectedNodeFileFromInput;\n  const hasHeader = appState.import.importConfig.nodeFile.hasColumns;\n  const delimiter = appState.import.importConfig.nodeFile.delimiter;\n\n  if (!file) {\n    return;\n  }\n  const reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onload = () => {\n    // Read entire CSV into memory as string\n    const fileAsString = reader.result;\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\n    const lines = fileAsString.split('\\n');\n    const lineNumber = lines.length;\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\n    console.log(topLinesAsString);\n\n    // Parse the top lines\n    try {\n      const it = hasHeader ? parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: hasHeader,\n        delimiter\n      }) : parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: undefined,\n        delimiter\n      });\n\n      runInAction(\"preview top N lines of node file\", () => {\n        appState.import.importConfig.nodeFile.topN = it;\n        appState.import.importConfig.nodeFile.columns = Object.keys(it[0]).map(key => `${key}`);\n        appState.import.importConfig.nodeFile.mapping.id = appState.import.importConfig.nodeFile.columns[0];\n        appState.import.importConfig.nodeFile.ready = true;\n      });\n    } catch {\n      toaster.show({\n        message: 'Error: Fails to open file',\n        intent: Intent.DANGER,\n        timeout: -1\n      });\n    }\n  };\n\n  reader.onerror = () => {\n    console.error(reader.error);\n    toaster.show({\n      message: 'Error: Fails to open file',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n  };\n});\n\nexport default appState;\n","import React from \"react\";\nimport { Button, Classes, Dialog, Intent, Switch } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport { requestChangeWorkspace } from \"../ipc/client\";\n\n@observer\nclass PreferencesDialog extends React.Component {\n  render() {\n    return (\n      <Dialog\n        iconName=\"cog\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.dialogOpen}\n        onClose={() => {\n          appState.preferences.dialogOpen = false;\n        }}\n        title=\"Preferences\"\n      >\n        <div className=\"pt-dialog-body\">\n          <Switch\n            label=\"Dark Mode\"\n            checked={appState.preferences.darkMode}\n            onChange={() => {\n              appState.preferences.darkMode = !appState.preferences.darkMode;\n              appState.preferences.saveUserConfig();\n              if (appState.graph.frame) {\n                appState.graph.frame.toggleDark();\n              }\n            }}\n          />\n          \n          <Switch\n           label=\"Minimap\"\n           checked={appState.preferences.minimapShowing}\n           onChange={() => {\n            appState.preferences.minimapShowing = !appState.preferences.minimapShowing;\n            appState.preferences.saveUserConfig();\n            if (appState.graph.frame) {\n              if (appState.preferences.minimapShowing) {\n                appState.graph.frame.showMiniMap();\n              } else {\n                appState.graph.frame.hideMiniMap();\n              }\n            } else {\n              console.log(\"Frame not ready when trying to toggle minimap.\");\n            }\n           }}\n          />\n        </div>\n        <div className=\"pt-dialog-footer\">\n          <div className=\"pt-dialog-footer-actions\">\n            <Button\n              intent={Intent.PRIMARY}\n              onClick={() => {\n                appState.preferences.dialogOpen = false;\n              }}\n              text=\"Done\"\n            />\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default PreferencesDialog;","import React from \"react\";\nimport { Button, Classes, Collapse } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\n\nexport default ({ name, isOpen, onToggle, children }) => (\n  <div>\n    <Button\n      className={classnames(Classes.LARGE, Classes.FILL, Classes.MINIMAL, \"text-align-left\")}\n      rightIconName={isOpen ? \"chevron-up\" : \"chevron-down\"}\n      onClick={onToggle}\n    >\n      {name}\n    </Button>\n    <Collapse isOpen={isOpen}>{children}</Collapse>\n  </div>\n);\n","import React from \"react\";\nimport { Classes, MenuItem } from \"@blueprintjs/core\";\n\nexport default ({ handleClick, item, isActive }) => (\n  <MenuItem\n    className={isActive ? Classes.ACTIVE : \"\"}\n    key={item}\n    onClick={handleClick}\n    text={item}\n  />\n);\n","import React from \"react\";\nimport { Button, Classes } from \"@blueprintjs/core\";\nimport { Select } from \"@blueprintjs/labs\";\nimport CommonItemRenderer from \"./CommonItemRenderer\";\n\nexport default ({ items, onSelect, value, fill = false }) => (\n  <Select\n    items={items}\n    itemRenderer={CommonItemRenderer}\n    filterable={false}\n    onItemSelect={onSelect}\n  >\n    <Button className={fill ? Classes.FILL : null} text={value} />\n  </Select>\n);\n","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch,\n  FileInput\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass PostImportOptions extends React.Component {\n  render() {\n    return (\n      <div>\n            After import, show:\n            <SimpleSelect\n                items={Object.keys(appState.import.postImportFilteringOptions)}\n                value={appState.import.selectedPostImportFilteringOption}\n                onSelect={(selected) => {\n                    appState.import.selectedPostImportFilteringOption = selected;\n                }}\n            />\n      </div>\n    );\n  }\n}\n\nexport default PostImportOptions;","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { Cell, Column, Table } from \"@blueprintjs/table\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestChooseEdgeFile,\n  requestChooseNodeFile,\n  requestImportGraphFromCSV,\n  requestCreateNewProject\n} from \"../ipc/client\";\nimport Collapsable from \"./utils/Collapsable\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { NODE_AND_EDGE_FILE, ONLY_EDGE_FILE } from \"../constants/index\";\nimport PostImportOptions from './PostImportOptions';\n\n@observer\nclass PreviewTable extends React.Component {\n  render() {\n    const file = this.props.file;\n    return (\n      <Table\n        className=\"import-preview-table\"\n        numRows={file.topN.length}\n        selectedRegions={Object.values(file.mapping)\n          .map(it => file.columns.indexOf(it))\n          .map(it => ({ rows: null, cols: [it, it] }))}\n      >\n        {file.columns.map(it => (\n          <Column\n            key={it}\n            name={it}\n            renderCell={i => <Cell>{file.topN[i][it]}</Cell>}\n          />\n        ))}\n      </Table>\n    );\n  }\n}\n\n@observer\nclass ImportDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      available: ONLY_EDGE_FILE,\n      nodesOpen: true,\n      edgesOpen: true,\n      delimiter: ','\n    };\n  }\n\n  changeAvailable = targetValue => {\n    if (targetValue === ONLY_EDGE_FILE) {\n      appState.import.importConfig.edgeFile.createMissing = true;\n    }\n    this.setState({ available: targetValue });\n  };\n\n  canImport = () => {\n    if (this.state.available === NODE_AND_EDGE_FILE) {\n      return (\n        appState.import.importConfig.edgeFile.ready &&\n        appState.import.importConfig.nodeFile.ready\n      );\n    } else if (this.state.available === ONLY_EDGE_FILE) {\n      return appState.import.importConfig.edgeFile.ready;\n    }\n    return false;\n  };\n\n  renderNodesSelection = () => {\n    const nodeFile = appState.import.importConfig.nodeFile;\n    if (this.state.available === ONLY_EDGE_FILE) {\n      return null;\n    }\n    return (\n      <Collapsable\n        name=\"Nodes\"\n        isOpen={this.state.nodesOpen}\n        onToggle={() => this.setState({ nodesOpen: !this.state.nodesOpen })}\n      >\n        <div className={classnames(Classes.CONTROL_GROUP)}>\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n            <input\n              type=\"file\"\n              className={classnames(Classes.DISABLED)}\n              onChange={(event) => {\n                if (event.target.files.length < 1) {\n                  return;\n                }\n                appState.import.selectedNodeFileFromInput = event.target.files[0];\n              }}\n            />\n          </div>\n        </div>\n        <Switch\n          label=\"Has Headers\"\n          checked={nodeFile.hasColumns}\n          onChange={() => (nodeFile.hasColumns = !nodeFile.hasColumns)}\n        />\n        {nodeFile.ready && (\n          <div className=\"column-selection\">\n            <PreviewTable file={nodeFile} />\n            Column for Node ID:\n            <SimpleSelect\n              items={nodeFile.columns}\n              value={nodeFile.mapping.id}\n              onSelect={it => (nodeFile.mapping.id = it)}\n            />\n          </div>\n        )}\n      </Collapsable>\n    );\n  };\n\n  renderEdgesSelection = () => {\n    const edgeFile = appState.import.importConfig.edgeFile;\n    return (\n      <Collapsable\n        name=\"Edges\"\n        isOpen={this.state.edgesOpen}\n        onToggle={() => this.setState({ edgesOpen: !this.state.edgesOpen })}\n      >\n        <div className={classnames(Classes.CONTROL_GROUP)}>\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n            <input\n              type=\"file\"\n              className={classnames(Classes.DISABLED)}\n              onChange={(event) => {\n                if (event.target.files.length < 1) {\n                  return;\n                }\n                appState.import.selectedEdgeFileFromInput = event.target.files[0];\n              }}\n            />\n          </div>\n        </div>\n        <Switch\n          label=\"Has Headers\"\n          checked={edgeFile.hasColumns}\n          onChange={() => (edgeFile.hasColumns = !edgeFile.hasColumns)}\n        />\n        <Switch\n          label=\"Create Missing Nodes\"\n          checked={edgeFile.createMissing}\n          disabled={this.state.available === ONLY_EDGE_FILE}\n          onChange={() => (edgeFile.createMissing = !edgeFile.createMissing)}\n        />\n        {edgeFile.ready && (\n          <div className=\"column-selection\">\n            <PreviewTable file={edgeFile} />\n            Column for Source ID:\n            <SimpleSelect\n              items={edgeFile.columns}\n              value={edgeFile.mapping.fromId}\n              onSelect={it => (edgeFile.mapping.fromId = it)}\n            />{\" \"}\n            <br />\n            Column for Target ID:\n            <SimpleSelect\n              items={edgeFile.columns}\n              value={edgeFile.mapping.toId}\n              onSelect={it => (edgeFile.mapping.toId = it)}\n            />\n          </div>\n        )}\n      </Collapsable>\n    );\n  };\n\n  updateDelimiter (newDelimiter) {\n    this.setState({delimiter: newDelimiter});\n\n    if (newDelimiter == \"\\\\t\") {\n      newDelimiter = \"\\t\"\n    }\n\n    appState.import.importConfig.edgeFile.delimiter = newDelimiter\n    appState.import.importConfig.nodeFile.delimiter = newDelimiter\n  }\n\n  renderDelimiterSelection() {\n    return (\n      <div className=\"column-selection\">\n        Selected Delimiter\n        <SimpleSelect\n          items={[\",\", \"\\\\t\", \";\"]}\n          value={this.state.delimiter}\n          onSelect={it => { this.updateDelimiter(it) }}\n        />{\" \"}\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.import.dialogOpen}\n        onClose={() => {\n          appState.import.dialogOpen = false;\n        }}\n        title=\"Import CSV\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div>\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n              I have:\n              <SimpleSelect\n                items={[ONLY_EDGE_FILE, NODE_AND_EDGE_FILE]}\n                value={this.state.available}\n                onSelect={this.changeAvailable}\n              />\n              {this.renderNodesSelection()}\n              {this.renderEdgesSelection()}\n              {this.renderDelimiterSelection()}\n              <hr />\n              <PostImportOptions />\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.canImport()\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    // TODO: this might be unsafe, check if there's racing condition\n\n                    //active layout when new graph imported\n                    appState.graph.runActiveLayout();\n\n                    requestCreateNewProject({\n                      name: appState.project.newProjectName,\n                      createdDate: new Date().toLocaleString(),\n                    });\n                    requestImportGraphFromCSV( //edgefile.delimiter and nodefile.delimiter are the same\n                      this.state.available === NODE_AND_EDGE_FILE, appState.import.importConfig.edgeFile.delimiter, appState.project.newProjectName\n                    );\n\n                    // Importing a graph means no label would be shown by default,\n                    // thus turn off label CSSRenderer for better performance.\n                    appState.graph.frame.turnOffLabelCSSRenderer();\n                  }}\n                  text=\"Import\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default ImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestImportGraphFromGexf\n} from \"../ipc/client\";\nimport PostImportOptions from './PostImportOptions';\n\n@observer\nclass GEXFImportDialog extends React.Component {\n\n  renderImportButton() {\n    return (\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n          <Button\n            className={classnames({\n              [Classes.DISABLED]: appState.import.selectedGexfFileFromInput == null\n            })}\n            intent={Intent.PRIMARY}\n            onClick={() => {\n              // Temp\n              \n               //active layout when new graph imported\n               appState.graph.runActiveLayout();\n\n              appState.import.loading = true;\n              requestImportGraphFromGexf();\n            }}\n            text=\"Import\"\n          />\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.import.gexfDialogOpen}\n        onClose={() => {\n          appState.import.gexfDialogOpen = false;\n          appState.import.loading = false;\n        }}\n        title=\"Import GEXF\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n            <div>\n              <div className={classnames(Classes.CONTROL_GROUP)}>\n                <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n                <input\n                  type=\"file\"\n                  className={classnames(Classes.DISABLED)}\n                  onChange={(event) => {\n                    if (event.target.files.length < 1) {\n                      return;\n                    }\n                    appState.import.selectedGexfFileFromInput = event.target.files[0];\n                  }}\n                />\n              </div>\n            </div>\n            <hr />\n            <PostImportOptions />\n          </div>\n            {this.renderImportButton()}\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default GEXFImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\n\n/**\n * [Deprecated] This dialog is only used to open SQlite-based\n * graph file and optionally along with a snapshot file.\n * \n * For Argo-lite, which only has the JSON snapshot file,\n * use OpenSnapshotDialog.\n */\nimport React from \"react\";\nimport { Button, Classes, Dialog, Intent, Spinner } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestChooseGraphFile,\n  requestChooseStateFile,\n  requestOpen\n} from \"../ipc/client\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport {\n  GRAPH_AND_STATE_FILE,\n  ONLY_EDGE_FILE,\n  ONLY_GRAPH_FILE\n} from \"../constants\";\n\n@observer\nclass OpenDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      available: ONLY_GRAPH_FILE,\n      selectedGraph: null,\n      selectedState: null\n    };\n  }\n\n  canImport = () => {\n    if (this.state.available === GRAPH_AND_STATE_FILE) {\n      return appState.import.stateFile && appState.import.graphFile;\n    } else {\n      return appState.import.graphFile;\n    }\n    return false;\n  };\n\n  changeAvailable = targetValue => {\n    if (targetValue === ONLY_EDGE_FILE) {\n      appState.import.importConfig.edgeFile.createMissing = true;\n    }\n    this.setState({ available: targetValue });\n  };\n\n  renderSelectGraph = () => {\n    return (\n      <div className={classnames(Classes.CONTROL_GROUP)}>\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n          <input\n            type=\"text\"\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\n            placeholder=\"Select graph file\"\n            readOnly\n            value={appState.import.graphFile}\n          />\n        </div>\n        <Button intent={Intent.PRIMARY} onClick={requestChooseGraphFile}>\n          Choose File\n        </Button>\n      </div>\n    );\n  };\n\n  renderSelectState = () => {\n    return (\n      <div className={classnames(Classes.CONTROL_GROUP)}>\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n          <input\n            type=\"text\"\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\n            placeholder=\"Select snapshot file\"\n            readOnly\n            value={appState.import.stateFile}\n          />\n        </div>\n        <Button intent={Intent.PRIMARY} onClick={requestChooseStateFile}>\n          Choose File\n        </Button>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.openDialogOpen}\n        onClose={() => {\n          appState.preferences.openDialogOpen = false;\n        }}\n        title=\"Open File\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div>\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n              I have:\n              <SimpleSelect\n                items={[GRAPH_AND_STATE_FILE, ONLY_GRAPH_FILE]}\n                value={this.state.available}\n                onSelect={this.changeAvailable}\n              />\n              {this.renderSelectGraph()}\n              {this.state.available === GRAPH_AND_STATE_FILE &&\n                this.renderSelectState()}\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.canImport()\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    appState.preferences.openDialogOpen = false;\n                    requestOpen();\n                  }}\n                  text=\"Open\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default OpenDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass NewProjectDialog extends React.Component {\n  \n  render() {\n    const isNewProjectNameDuplicate = appState.project.projects.some(p => p.name === appState.project.newProjectName);\n    const isNewProjectNameEmpty = appState.project.newProjectName.trim() === '';\n    const isValidated = !(isNewProjectNameDuplicate || isNewProjectNameEmpty);\n  \n    return (\n      <Dialog\n        iconName=\"projects\"\n        isOpen={appState.project.isNewProjectDialogOpen}\n        onClose={() => {\n          appState.project.isNewProjectDialogOpen = false;\n        }}\n        title=\"Create New Project\"\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <label className=\"pt-label .modifier\">\n            Project Name\n            <span className=\"pt-text-muted\"> (required){isNewProjectNameDuplicate && ' (This name has already been taken!)'}</span>\n            <input\n              className=\"pt-input\"\n              type=\"text\"\n              placeholder=\"New Project\"\n              dir=\"auto\"\n              value={appState.project.newProjectName}\n              onChange={event => {\n                appState.project.newProjectName = event.target.value;\n              }}\n            />\n          </label>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <Button\n              className={classnames({\n                [Classes.DISABLED]: !isValidated\n              })}\n              intent={Intent.PRIMARY}\n              onClick={() => {\n                if (isValidated) {\n                  appState.project.isNewProjectDialogOpen = false;\n                  appState.import.dialogOpen = true;\n                }\n              }}\n              text=\"Next\"\n            />\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default NewProjectDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { requestOpen, requestDelete } from \"../ipc/client\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass ProjectDetailDialog extends React.Component {\n  render() {\n    return (\n      appState.project.currentProject && (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isProjectDetailDialogOpen}\n          onClose={() => {\n            appState.project.isProjectDetailDialogOpen = false;\n          }}\n          title={`Load ${appState.project.currentProject.name} Project`}\n        >\n          {appState.project.currentProject.hasGraphData ? (\n            <div className={Classes.DIALOG_BODY}>\n              <Card\n                interactive={true}\n                elevation={Card.ELEVATION_TWO}\n                onClick={() => {\n                  appState.import.graphFile =\n                    appState.project.currentProject.graphDataPath;\n                  appState.project.isProjectDetailDialogOpen = false;\n                  requestOpen();\n                }}\n              >\n                <Icon iconName=\"graph\" /> Start fresh from original graph\n              </Card>\n              <hr />\n              <div className=\"argo-menu-list-header\">Load recent snapshots</div>\n              <div>\n                {appState.project.currentProject.snapshotPaths.map(\n                  snapshotPath => {\n                    return (\n                      <div key={snapshotPath}>\n                        <Card\n                          interactive={false}\n                          elevation={Card.ELEVATION_TWO}\n                        >\n                          {/* <Icon iconName=\"layout\" /> */}\n                          <h5>\n                            {snapshotPath\n                              .replace(/^.*[\\\\\\/]/, \"\")\n                              .replace(/\\.[^/.]+$/, \"\")}\n                          </h5>\n                          <Button\n                            className={classnames([\n                              Classes.BUTTON,\n                              Classes.INTENT_PRIMARY\n                            ])}\n                            onClick={() => {\n                              appState.import.graphFile =\n                                appState.project.currentProject.graphDataPath;\n                              appState.import.stateFile = snapshotPath;\n                              appState.project.currentSnapshotName = snapshotPath\n                                .replace(/^.*[\\\\\\/]/, \"\")\n                                .replace(/\\.[^/.]+$/, \"\");\n                              appState.project.isProjectDetailDialogOpen = false;\n                              requestOpen();\n                            }}\n                          >\n                            Load Snapshot\n                          </Button>\n                          <Button\n                            className={classnames([Classes.BUTTON])}\n                            onClick={() => {\n                                requestDelete(snapshotPath);\n                                appState.project.currentProject.snapshotPaths = appState.project.currentProject.snapshotPaths.filter(\n                                  path => path !== snapshotPath\n                                );\n                            }}\n                          >\n                            Delete\n                          </Button>\n                        </Card>\n                      </div>\n                    );\n                  }\n                )}\n              </div>\n            </div>\n          ) : (\n            <div>\n              Error: Cannot find .argograph file in this project directory.\n            </div>\n          )}\n        </Dialog>\n      )\n    );\n  }\n}\n\nexport default ProjectDetailDialog;","/**\n * [Argo-lite Modified]\n * In electron Argo, snapshots are saved to the active project folder.\n * In Argo-lite, snapshots are saved as a file download.\n * Sometimes, it's tricky to let browser download something without a backend\n * hosting the file. Thus we also allow user to copy paste from\n * a text area containing our snapshot JSON.\n * \n * Remember to change appState.project.stringCopyOfSnapshot\n * before showing the dialog.\n */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { requestSaveSnapshot } from \"../ipc/client\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass SaveSnapshotDialog extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     name: \"Quick Save\",\n  //   };\n  // }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isSaveSnapshotDialogOpen}\n          onClose={() => {\n            appState.project.isSaveSnapshotDialogOpen = false;\n          }}\n          title={`Save Snapshot`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            {/* <label className=\"pt-label .modifier\">\n              Snapshot Name\n              <span className=\"pt-text-muted\"> (required)</span>\n              <input\n                className=\"pt-input\"\n                type=\"text\"\n                placeholder=\"My Snapshot\"\n                dir=\"auto\"\n                value={this.state.name}\n                onChange={event => this.setState({ name: event.target.value })}\n              />\n            </label> */}\n            <p>If your browser doesn't start downloading the file, you can manually copy the content below and save to a plain text file.</p>\n            <input id=\"snapshot-textarea\" type=\"textarea\" value={appState.project.stringCopyOfSnapshot} readOnly />\n            <button\n              onClick={() => {\n                document.getElementById('snapshot-textarea').select();\n                document.execCommand(\"copy\");\n              }}\n            >\n              Copy to Clipboard\n            </button>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                // className={classnames({\n                //   [Classes.DISABLED]: !this.state.name\n                // })}\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.project.isSaveSnapshotDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default SaveSnapshotDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass SaveSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n    };\n  }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isRenameSnapshotDialogOpen}\n          onClose={() => {\n            appState.project.isRenameSnapshotDialogOpen = false;\n          }}\n          title={`Rename Snapshot`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            <label className=\"pt-label .modifier\">\n              Snapshot Name\n              <span className=\"pt-text-muted\"> (required)</span>\n              <input\n                className=\"pt-input\"\n                type=\"text\"\n                placeholder=\"My Snapshot\"\n                dir=\"auto\"\n                value={this.state.name}\n                onChange={event => this.setState({ name: event.target.value })}\n              />\n            </label>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                className={classnames({\n                  [Classes.DISABLED]: !this.state.name\n                })}\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.graph.metadata.snapshotName = this.state.name;\n                  appState.project.isRenameSnapshotDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default SaveSnapshotDialog;","/**\n * [Argo-lite] Open the Argo-lite JSON graph snapshot file\n */\nimport React from \"react\";\nimport { Button, Classes, Dialog, Intent } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { toaster } from '../notifications/client';\n\n@observer\nclass OpenSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        selectedFile: null\n    };\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.openSnapshotDialogOpen}\n        onClose={() => {\n          appState.preferences.openSnapshotDialogOpen = false;\n        }}\n        title=\"Open File\"\n      >\n        <div>\n            <div className={classnames(Classes.DIALOG_BODY)}>\n                <div className={classnames(Classes.CONTROL_GROUP)}>\n                    <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n                        <input\n                            type=\"file\"\n                            className={classnames(Classes.DISABLED)}\n                            onChange={(event) => {\n                                if (event.target.files.length < 1) {\n                                    return;\n                                }\n                                this.setState({\n                                    selectedFile: event.target.files[0]\n                                });\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.state.selectedFile\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    // This dialog is closed when user is done selecting file\n                    appState.preferences.openSnapshotDialogOpen = false;\n\n                    // Show user a notification\n                    toaster.show({\n                        message: 'Loading Graph Snapshot. Please wait...',\n                        intent: Intent.NONE,\n                        timeout: 2000\n                    });\n                    \n                    // Read the file and load snapshot\n                    const reader = new FileReader();\n                    reader.readAsText(this.state.selectedFile);\n\n                    reader.onload = () => {\n                        const fileAsString = reader.result;\n                        appState.graph.loadImmediateStates(fileAsString);\n                    }\n                  }}\n                  text=\"Open\"\n                />\n              </div>\n            </div>\n          </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default OpenSnapshotDialog;","import React from \"react\";\nimport {\n    Button,\n    Classes,\n    Card,\n    Icon,\n    Dialog,\n    Intent,\n    Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport { toaster } from '../notifications/client';\nimport * as Blueprint from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport { BACKEND_URL } from \"../constants\";\n\nconst uuidv4 = require('uuid/v4');\n\n@observer\nclass ShareDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShared: false,\n            isFetching: false,\n            sharedURL: 'Error: Sharing failed',\n            selectedContinue: false,\n        };\n\n        this.handleRequest = this.handleRequest.bind(this);\n    }\n\n\n\n\n    async handleRequest(uuid) {\n        // return await new Promise(resolve => setTimeout(resolve, 2000));\n        const backendURL = `${BACKEND_URL}/snapshots`;\n        // TODO: add better error handling\n        return await fetch(backendURL, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-cache',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            referrer: 'no-referrer',\n            body: JSON.stringify({\n                uuid,\n                body: window.saveSnapshotToString()\n            }),\n        }).then(response => response.ok).catch(error => {\n            toaster.show({\n                message: 'Failed to publish to sharing server. Unexpected error.',\n                intent: Intent.DANGER,\n                timeout: -1\n            });\n        });\n    }\n\n    render() {\n\n\n\n        return (\n            <Dialog\n                iconName=\"projects\"\n                isOpen={appState.preferences.shareDialogOpen}\n                onClose={() => {\n                    appState.preferences.shareDialogOpen = false;\n                    this.setState({\n                        ...this.state,\n                        selectedContinue: false,\n                    });\n                }}\n                title={`Share Graph Snapshot`}\n                style={{ width: !this.state.selectedContinue ? 735 : 580 }}\n            >\n                <div className={classnames(Classes.DIALOG_BODY)}>\n                    {\n                        !this.state.selectedContinue && (\n                            <div>\n                                <p style={{ display: \"inline\", marginRight: \"20px\" }}>You can share your snapshot as\n                        <b> a public URL</b>, an <b> HTML iframe</b>, or a <b>Jupyter Notebook IFrame</b></p>\n                                {\n                                    !this.state.selectedContinue && (\n                                        <Button\n                                            className={classnames({\n                                                [Classes.DISABLED]: this.state.isFetching\n                                            })}\n                                            intent={Intent.PRIMARY}\n                                            onClick={async () => {\n                                                this.setState({ isFetching: true });\n                                                // Generate a random UUID\n                                                const uuid = uuidv4();\n                                                // Generate URL corresponding to the UUID\n                                                const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\n\n                                                // Wait for backend response\n                                                const requestSuccess = await this.handleRequest(uuid);\n                                                // Update local state\n                                                if (requestSuccess) {\n                                                    this.setState({ isFetching: false, isShared: true, sharedURL });\n                                                } else {\n                                                    // request fails, toast fires\n                                                    this.setState({ isFetching: false, isShared: false });\n                                                    toaster.show({\n                                                        message: 'Failed to publish to sharing server. Please try again later.',\n                                                        intent: Intent.DANGER,\n                                                        timeout: -1\n                                                    });\n                                                }\n                                                this.setState({\n                                                    ...this.state,\n                                                    selectedContinue: true,\n                                                });\n                                            }}\n                                            text=\"Continue\"\n                                        />\n                                    )\n                                }\n                                <hr />\n                                {/**pt-callout pt-intent-primary .modifier */}\n                                <div className=\"pt-callout pt-intent-warning\" style={{marginBottom: \"20px\",}}>\n                                    <p className=\"pt-callout-title\">This snapshot is “static”, like taking a photo of your visualization. This means that if your graph is changed in any ways (e.g., move nodes around) after creating a URL and you want to re-share those updates, you will need to create a new URL by selecting <b>Share Again to a new URL</b> in the next window.</p>\n                                </div>\n                                <div className=\"pt-callout pt-intent-danger\">\n                                    <p className=\"pt-callout-title \"><b>IMPORTANT!</b> This will make your graph snapshot public. If you are working with sensitive data (with custom access control), or large data (>400MB), please follow our guide on Github to easily deploy your own sharing server.</p>\n                                </div>\n                            </div>\n                        )\n                    }\n                    {\n                        this.state.isFetching && (\n                            <p style={{marginTop: \"10px\"}}><b>Sharing in progress. Please wait...</b></p>\n                        )\n                    }\n                    {\n                        this.state.selectedContinue && (\n                            <div>\n                                {/** graph URL */}\n                        Your current snapshot has been shared to\n                                <br />\n                                <input\n                                    id=\"snapshot-textarea\"\n                                    type=\"textarea\"\n                                    value={this.state.sharedURL}\n                                    readOnly\n                                    style={{\n                                        width: '400px',\n                                        marginTop: \"5px\"\n                                    }}\n                                />\n                                <button\n                                    onClick={() => {\n                                        document.getElementById('snapshot-textarea').select();\n                                        document.execCommand(\"copy\");\n                                    }}\n                                    className=\"copy-to-clipboard\"\n                                >\n                                    Copy to Clipboard\n                        </button>\n                                <br />\n                                <hr />\n\n                                {/** Embedding as HTML iframe */}\n                        Embed as an <b>HTML iframe</b>:\n                                <br />\n                                <input\n                                    id=\"iframe-html-textarea\"\n                                    type=\"textarea\"\n                                    value={`<iframe src=\"${this.state.sharedURL}\" width=\"850\" height=\"500\"></iframe>`}\n                                    style={{\n                                        width: '400px',\n                                        marginTop: \"5px\"\n                                    }}\n                                    readOnly\n                                />\n                                <button\n                                    onClick={() => {\n                                        document.getElementById('iframe-html-textarea').select();\n                                        document.execCommand(\"copy\");\n                                    }}\n                                    className=\"copy-to-clipboard\"\n                                >\n                                    Copy to Clipboard\n                        </button>\n                                <br />\n                                <hr />\n\n                                {/** Embedding as Jupyter Notebook IFrame */}\n                        Embed as a <b>Jupyter Notebook IFrame</b>:\n                                <br />\n                                <textarea\n                                    id=\"iframe-jupyter-textarea\"\n                                    rows=\"2\"\n                                    cols=\"60\"\n                                    style={{\n                                        overflow: \"hidden\",\n                                        marginTop: \"5px\",\n                                        width: \"400px\",\n                                        resize: \"none\"\n                                    }}\n                                    readonly=\"true\"\n                                    value={`from IPython.display import IFrame` + \"\\n\" + `IFrame(\"${this.state.sharedURL}\", width=700, height=350)`} />\n                                <button\n                                    onClick={() => {\n                                        document.getElementById('iframe-jupyter-textarea').select();\n                                        document.execCommand(\"copy\");\n                                    }}\n                                    className=\"copy-to-clipboard\"\n                                    style={{\n                                        position: \"absolute\",\n                                        marginTop: \"20px\",\n                                    }}\n                                >\n                                    Copy to Clipboard\n                        </button>\n                            </div>\n                        )\n                    }\n                </div>\n\n                <div className={Classes.DIALOG_FOOTER}>\n                    <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                        {\n                            this.state.selectedContinue && (\n\n\n                                <Button\n                                    className={classnames({\n                                        [Classes.DISABLED]: this.state.isFetching\n                                    })}\n                                    intent={Intent.PRIMARY}\n                                    onClick={async () => {\n                                        this.setState({ isFetching: true, isShared: false });\n                                        // Generate a random UUID\n                                        const uuid = uuidv4();\n                                        // Generate URL corresponding to the UUID\n                                        const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\n\n                                        // Wait for backend response\n                                        const requestSuccess = await this.handleRequest(uuid);\n                                        // Update local state\n                                        if (requestSuccess) {\n                                            this.setState({ isFetching: false, isShared: true, sharedURL });\n                                        } else {\n                                            // request fails, toast fires\n                                            this.setState({ isFetching: false, isShared: false });\n                                            toaster.show({\n                                                message: 'Failed to publish to sharing server. Please try again later.',\n                                                intent: Intent.DANGER,\n                                                timeout: -1\n                                            });\n                                        }\n\n                                    }}\n                                    text=\"Share Snapshot as New URL\"\n                                />\n                            )\n                        }\n\n                    </div>\n                </div>\n\n\n                <style dangerouslySetInnerHTML={{\n                    __html:\n                        `\n                    .copy-to-clipboard{\n                        margin-top: 5px;\n                        margin-left: 5px;\n                        border-style: solid;\n                    }\n                    \n            `}} />\n            </Dialog>\n        );\n    }\n}\n\nexport default ShareDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass StatisticsDialog extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.preferences.statisticsDialogOpen}\n          onClose={() => {\n            appState.preferences.statisticsDialogOpen = false;\n          }}\n          title={`Statistics`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            <table className={Classes.TABLE} style={{width: '100%'}}>\n                <thead>\n                    <tr>\n                        <th>Statistics</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td># Nodes</td>\n                        <td>{appState.graph.metadata.fullNodes}</td>\n                    </tr>\n                    <tr>\n                        <td># Edges</td>\n                        <td>{appState.graph.metadata.fullEdges}</td>\n                    </tr>\n                    <tr>\n                        <td>Average Degree</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.degree : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Graph Density</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.density : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Graph Diameter</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.diameter : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Clustering Coefficient</td>\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.averageClustering : 'loading graph'}</td>\n                    </tr>\n                    <tr>\n                        <td>Connected Component</td>\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.components : 'loading graph'}</td>\n\n                    </tr>\n                </tbody>\n            </table>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.statisticsDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default StatisticsDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass HelpDialog extends React.Component {\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"help\"\n          isOpen={appState.preferences.helpDialogOpen}\n          onClose={() => {\n            appState.preferences.helpDialogOpen = false;\n          }}\n          title={`Help`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            Argo supports both mouse/trackpad and touchscreen.\n            <div className=\"argo-table-container\">\n              <table className=\"argo-table-container__table pt-table pt-bordered pt-striped\">\n                <thead>\n                  <tr>\n                    <th>Basic Operation</th>\n                    <th>Mouse</th>\n                    <th>Touchscreen</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Zoom</td>\n                    <td>Mouse wheel</td>\n                    <td>2 finger zoom gesture</td>\n                  </tr>\n                  <tr>\n                    <td>Pan</td>\n                    <td>Drag with right mouse button down OR Move mouse with space key pressed</td>\n                    <td>Drag with 3 finger</td>\n                  </tr>\n                  <tr>\n                    <td>Select single node (view details)</td>\n                    <td>Single Click</td>\n                    <td>Tap with 1 finger</td>\n                  </tr>\n                  <tr>\n                    <td>Select multiple nodes</td>\n                    <td>Drag left mouse button from empty area</td>\n                    <td>Drag 1 finger from empty area</td>\n                  </tr>\n                  <tr>\n                    <td>Drag nodes</td>\n                    <td>Drag with left mouse button down</td>\n                    <td>Drag with 1 finger</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            \n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.helpDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default HelpDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Switch,\n  ButtonGroup\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass NodeTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortBy: 'pagerank',\n            sortOrder: 'descending', // or 'ascending'\n        };\n    }\n\n  render() {\n    let filteredNodes = this.props.nodes;\n    \n    filteredNodes.sort((n1, n2) => {\n        const n1val = n1[this.state.sortBy];\n        const n2val = n2[this.state.sortBy];\n        if (n1val && n2val) {\n            // Check if these are numerical fields, if so sort by number.\n            const n1valAsNum = Number(n1val);\n            const n2valAsNum = Number(n2val);\n            if (!Number.isNaN(n1valAsNum) && !Number.isNaN(n2valAsNum)) {\n                // both values are numeric, compare by their value.\n                if (this.state.sortOrder === 'descending') {\n                    return n2valAsNum - n1valAsNum;\n                }\n                return n1valAsNum - n2valAsNum;\n            } else {\n                // not all values are numeric, sort by string order.\n                const n1valAsString = n1val.toString();\n                const n2valAsString = n2val.toString();\n                return (this.state.sortOrder === 'descending' ? -1 : 1) * n1valAsString.localeCompare(n2valAsString);\n            }\n        }\n        return 0;\n    });\n\n    const nodeAttributesOrig = appState.graph.allPropertiesKeyList.filter((k) => k !== 'pagerank' && k !== 'degree');\n    \n    return (\n            <div className=\"argo-table-container\">\n                Sort By {' '}\n                <SimpleSelect\n                    items={['pagerank', 'degree', ...nodeAttributesOrig]}\n                    value={this.state.sortBy}\n                    onSelect={(selected) => {\n                        this.setState({sortBy: selected});\n                    }}\n                />\n                <SimpleSelect\n                    items={['descending', 'ascending']}\n                    value={this.state.sortOrder}\n                    onSelect={(selected) => {\n                        this.setState({sortOrder: selected});\n                    }}\n                />\n                <table className=\"argo-table-container__table pt-table pt-bordered pt-striped\">\n                    <thead>\n                        <tr>\n                            <th><b>Show</b></th>\n                            <th><b>Node ID</b></th>\n                            {\n                                appState.graph.allPropertiesKeyList.map((it, i) => {\n                                    if (it !== 'id') {\n                                        return <th key={`${it}-${i}`}>{it}</th>;\n                                    }\n                                    return null;\n                                })\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            filteredNodes.map((node) => (\n                                <tr key={node.id}>\n                                    <td>\n                                        <Switch\n                                            checked={!node.isHidden}\n                                            onChange={() => {\n                                                if (node.isHidden) {\n                                                    appState.graph.showNodes([node.id]);\n                                                } else {\n                                                    appState.graph.hideNodes([node.id]);\n                                                }\n                                            }}\n                                        />\n                                    </td>\n                                    <td>{node.id}</td>\n                                    {\n                                        appState.graph.allPropertiesKeyList.map((it, i) => {\n                                            if (it !== 'id') {\n                                                return <td key={`${it}-${i}`}>{node[it]}</td>\n                                            }\n                                        })\n                                    }\n                                </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n            </div>\n    );\n  }\n}\n\nexport default NodeTable;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  ButtonGroup,\n  NumericInput,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport NodeTable from './NodeTable';\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass NeighborDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMoreBy: 'pagerank',\n      showMoreNum: 5,\n    };\n  }\n\n  render() {\n    // Compare function for nodes used for sorting descendingly.\n    const compareByPageRank = (n1, n2) => {\n        if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n            return n2[\"pagerank\"] - n1[\"pagerank\"];\n        }\n        return 0;\n    };\n\n    let filteredNodes = [];\n    // When only one node is selected, show the neighbors of this selected node.\n    if (appState.graph.lastSelectedSingleNode) {\n        const selectedNodeId = appState.graph.lastSelectedSingleNode.data.ref.id.toString();\n        filteredNodes = appState.graph.getNeighborNodesFromRawGraph(selectedNodeId);\n\n        // Sort by pagerank if available.\n        filteredNodes.sort(compareByPageRank);\n    }\n\n    const showNMoreByAttribute = (numberToShow, attributeName) => {\n      const hiddenNodes = filteredNodes.filter(n => n.isHidden);\n      hiddenNodes.sort((n1, n2) => {\n        if (n1[attributeName] && n2[attributeName]) {\n            return n2[attributeName] - n1[attributeName];\n        }\n        return 0;\n      });\n      const ids = [];\n      for (let i = 0; i < numberToShow && i < hiddenNodes.length; i++) {\n          ids.push(hiddenNodes[i].id);\n      }\n      appState.graph.showNodes(ids);\n    };\n    \n    return (\n        <Dialog\n          iconName=\"graph\"\n          isOpen={appState.preferences.neighborDialogOpen}\n          onClose={() => {\n            appState.preferences.neighborDialogOpen = false;\n          }}\n          title='Neighbors'\n          style={{minWidth: '80vw'}}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n\n            <ButtonGroup>\n                <Button onClick={() => {appState.graph.showNodes(filteredNodes.map(n => n.id))}}>Show All</Button>\n                <Button onClick={() => {appState.graph.hideNodes(filteredNodes.map(n => n.id))}}>Hide All</Button>\n            </ButtonGroup>\n\n            <hr />\n\n            <div>\n              <Button\n              style={{display: 'inline'}}\n              intent={Intent.PRIMARY}\n              text='Show'\n              onClick={() => {\n                showNMoreByAttribute(this.state.showMoreNum, this.state.showMoreBy);\n              }} /> <NumericInput onValueChange={(valAsNumber, valAsString) => {this.setState({showMoreNum: Number(valAsString)})}} value={this.state.showMoreNum} style={{display: 'inline-flex', width: '30px'}} /> {' '}\n              more nodes with highest <SimpleSelect items={['pagerank', 'degree']} value={this.state.showMoreBy} onSelect={(selected) => {this.setState({showMoreBy: selected})}} />\n            </div>\n\n            <hr />\n\n            <NodeTable nodes={filteredNodes} />\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.neighborDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default NeighborDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  ButtonGroup,\n  NumericInput,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport NodeTable from './NodeTable';\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n\n@observer\nclass DataSheetDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMoreBy: 'pagerank',\n      showMoreNum: 5,\n    };\n  }\n\n  render() {\n    let filteredNodes = [...appState.graph.rawGraph.nodes];\n\n    const showNMoreByAttribute = (numberToShow, attributeName) => {\n      const hiddenNodes = filteredNodes.filter(n => n.isHidden);\n      hiddenNodes.sort((n1, n2) => {\n        if (n1[attributeName] && n2[attributeName]) {\n            return n2[attributeName] - n1[attributeName];\n        }\n        return 0;\n      });\n      const ids = [];\n      for (let i = 0; i < numberToShow && i < hiddenNodes.length; i++) {\n          ids.push(hiddenNodes[i].id);\n      }\n      appState.graph.showNodes(ids);\n    };\n    \n    return (\n        <Dialog\n          iconName=\"database\"\n          isOpen={appState.preferences.dataSheetDialogOpen}\n          onClose={() => {\n            appState.preferences.dataSheetDialogOpen = false;\n          }}\n          title='Data Sheet'\n          style={{minWidth: '80vw'}}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n\n            <ButtonGroup>\n                <Button onClick={() => {appState.graph.showNodes(filteredNodes.map(n => n.id))}}>Show All</Button>\n                <Button onClick={() => {appState.graph.hideNodes(filteredNodes.map(n => n.id))}}>Hide All</Button>\n            </ButtonGroup>\n\n            <hr />\n\n            <div>\n              <Button\n              style={{display: 'inline'}}\n              intent={Intent.PRIMARY}\n              text='Show'\n              onClick={() => {\n                showNMoreByAttribute(this.state.showMoreNum, this.state.showMoreBy);\n              }} /> <NumericInput onValueChange={(valAsNumber, valAsString) => {this.setState({showMoreNum: Number(valAsString)})}} value={this.state.showMoreNum} style={{display: 'inline-flex', width: '30px'}} /> {' '}\n              more nodes with highest <SimpleSelect items={['pagerank', 'degree']} value={this.state.showMoreBy} onSelect={(selected) => {this.setState({showMoreBy: selected})}} />\n            </div>\n\n            <hr />\n\n            <NodeTable nodes={filteredNodes} />\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.dataSheetDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default DataSheetDialog;","import React from \"react\";\nimport PreferencesDialog from \"./PreferencesDialog\";\nimport ImportDialog from \"./ImportDialog\";\nimport GEXFImportDialog from \"./GEXFImportDialog\"\nimport OpenDialog from \"./OpenDialog\";\nimport NewProjectDialog from \"./NewProjectDialog\";\nimport ProjectDetailDialog from \"./ProjectDetailDialog\";\nimport SaveSnapshotDialog from \"./SaveSnapshotDialog\";\nimport RenameSnapshotDialog from \"./RenameSnapshotDialog\";\nimport OpenSnapshotDialog from \"./OpenSnapshotDialog\";\nimport ShareDialog from './ShareDialog';\nimport StatisticsDialog from './StatisticsDialog';\nimport HelpDialog from './HelpDialog';\nimport NeighborDialog from './NeighborDialog';\nimport DataSheetDialog from './DataSheetDialog';\n\nexport default class Dialogs extends React.Component {\n  render() {\n    return (\n      <div style={{ display: \"none\" }}>\n        <PreferencesDialog />\n        <ImportDialog />\n        <GEXFImportDialog />\n        <OpenDialog />\n        <OpenSnapshotDialog />\n        <NewProjectDialog />\n        <ProjectDetailDialog />\n        <SaveSnapshotDialog />\n        <RenameSnapshotDialog />\n        <ShareDialog />\n        <StatisticsDialog />\n        <HelpDialog />\n        <NeighborDialog />\n        <DataSheetDialog />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Classes,\n  InputGroup,\n  Intent,\n  Position,\n  Tooltip,\n  Popover,\n  Menu,\n  MenuItem,\n  MenuDivider\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\n\nimport appState from \"../stores/index\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport argologo from '../images/argologo.png';\nimport { toaster } from '../notifications/client';\nimport { LOGO_URL, GITHUB_URL, SAMPLE_GRAPH_SNAPSHOTS } from '../constants';\n\n@observer\nclass RegularNavbar extends React.Component {\n  render() {\n    return (\n      <nav className={classnames([Classes.NAVBAR])}>\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\n          <a href={LOGO_URL} target=\"_blank\">\n            <img title=\"Argo Lite\" id=\"Argo logo\" src={argologo} width=\"35\" height=\"35\"></img>\n          </a>\n          <div className={classnames([Classes.NAVBAR_HEADING])}> &nbsp; Argo <small>Lite</small></div>\n          {/* <a\n            href=\"https://poloclub.github.io/argo-graph/\"\n            target='_blank'\n            style={{\n              padding: '6px 10px 6px 10px',\n              backgroundColor: 'pink',\n              color: 'white',\n              borderRadius: '4px',\n              textDecoration: 'none'\n            }}\n          >\n            Learn more about Argo\n          </a> */}\n          <Popover\n            content={\n              <Menu>\n                <MenuItem text=\"Load Sample\" iconName=\"graph\">\n                  {\n                    SAMPLE_GRAPH_SNAPSHOTS.map((sample) => {\n                      const sampleSnapshotTitle = sample[0];\n                      const sampleSnapshotStrapiUuid = sample[1];\n\n                      return (\n                        <MenuItem\n                          key={sampleSnapshotTitle}\n                          iconName=\"graph\"\n                          text={sampleSnapshotTitle}\n                          onClick={() => {\n                            window.loadAndDisplaySnapshotFromStrapi(sampleSnapshotStrapiUuid);\n                          }}\n                        />\n                      );\n                    })\n                  }\n\n                </MenuItem>\n                <MenuDivider />\n                <MenuItem\n                  iconName=\"import\"\n                  text=\"Import from CSV...\"\n                  onClick={() => (appState.import.dialogOpen = true)}\n                />\n                <MenuItem\n                  iconName=\"import\"\n                  text=\"Import from GEXF...\"\n                  onClick={() => (appState.import.gexfDialogOpen = true)}\n                />\n                <MenuItem\n                  iconName=\"pt-icon-document-open\"\n                  text=\"Open Snapshot\"\n                  onClick={() => { appState.preferences.openSnapshotDialogOpen = true }}\n                />\n                <MenuDivider />\n                <MenuItem\n                  iconName=\"download\"\n                  text=\"Save Snapshot\"\n                  onClick={() => {\n                    appState.project.stringCopyOfSnapshot = appState.graph.saveImmediateStates();\n                    appState.project.isSaveSnapshotDialogOpen = true\n                  }}\n                />\n                <MenuItem\n                  iconName=\"pt-icon-document-share\"\n                  text=\"Publish and Share Snapshot\"\n                  onClick={() => { appState.preferences.shareDialogOpen = true }}\n                />\n              </Menu>\n            }\n            position={Position.BOTTOM}\n          >\n            <Button\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n              iconName=\"document\"\n            >\n              Graph\n            </Button>\n          </Popover>\n          <Popover\n            content={\n              <Menu>\n                <MenuItem\n                  text=\"Data Sheet\"\n                  iconName=\"pt-icon-database\"\n                  onClick={() => {\n                    appState.graph.frame.pauseLayout();\n                    appState.preferences.dataSheetDialogOpen = true;\n                    this.forceUpdate();\n                  }}\n                />\n                <MenuItem\n                  text=\"Statistics\"\n                  iconName=\"pt-icon-timeline-bar-chart\"\n                  onClick={() => { appState.preferences.statisticsDialogOpen = true }}\n                />\n                <MenuItem text=\"Filters\" iconName=\"graph\">\n                  <MenuItem\n                    text=\"Show All Nodes\"\n                    onClick={() => {\n                      appState.graph.showNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Show only nodes with top 5 PageRank\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                      const sortedNodeList = [...appState.graph.rawGraph.nodes];\n                      sortedNodeList.sort((n1, n2) => {\n                        if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n                          return n2[\"pagerank\"] - n1[\"pagerank\"];\n                        }\n                        return 0;\n                      });\n                      const ids = [];\n                      for (let i = 0; i < 5 && i < sortedNodeList.length; i++) {\n                        ids.push(sortedNodeList[i].id);\n                      }\n                      appState.graph.showNodes(ids);\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Show only nodes with top 5 Degree\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                      const sortedNodeList = [...appState.graph.rawGraph.nodes];\n                      sortedNodeList.sort((n1, n2) => {\n                        if (n1[\"degree\"] && n2[\"degree\"]) {\n                          return n2[\"degree\"] - n1[\"degree\"];\n                        }\n                        return 0;\n                      });\n                      const ids = [];\n                      for (let i = 0; i < 5 && i < sortedNodeList.length; i++) {\n                        ids.push(sortedNodeList[i].id);\n                      }\n                      appState.graph.showNodes(ids);\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Hide All Nodes\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                    }}\n                  />\n                </MenuItem>\n              </Menu>\n            }\n            position={Position.BOTTOM}\n          >\n            <Button\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n              iconName=\"pt-icon-wrench\"\n            >\n              Tools\n            </Button>\n          </Popover>\n        </div>\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\n          <span className={Classes.NAVBAR_DIVIDER} />\n          {appState.graph.hasGraph && appState.graph.frame && (\n            <div style={{ display: \"inline\" }}>\n              \n              {/** Smart Pause functionality: pauses graph when no interaction */}\n              {(() => {\n              let self = this;\n              setInterval(function () {\n                  let timeNow = Date.now();\n                  /**stops initial default active layout*/\n                  if(appState.graph.smartPause.defaultActive.isActive) {\n                    if(timeNow - appState.graph.smartPause.defaultActive.startTime > appState.graph.smartPause.defaultActive.duration\n                      || appState.graph.smartPause.interactingWithGraph) {\n                      appState.graph.smartPause.defaultActive.isActive = false;\n                    }\n                  } else {\n                      /**smart pausing*/\n                    if(!appState.graph.frame.paused && \n                      !appState.graph.smartPause.interactingWithGraph){\n                        appState.graph.frame.pauseLayout();\n                        appState.graph.frame.paused = true;\n                        appState.graph.smartPause.smartPaused = true;\n                        self.forceUpdate();\n                    }\n                    /**old code using lastUnpaused:*/\n                    /**\n                     * if(!appState.graph.frame.paused && \n                      appState.graph.smartPause.lastUnpaused && \n                      !appState.graph.smartPause.interactingWithGraph && timeNow - appState.graph.smartPause.lastUnpaused > 300){\n                        appState.graph.frame.pauseLayout();\n                        appState.graph.frame.paused = true;\n                        appState.graph.smartPause.smartPaused = true;\n                        self.forceUpdate();\n                    }\n                     */\n\n                    /**un-smart pausing*/\n                    if(appState.graph.smartPause.smartPaused && appState.graph.smartPause.interactingWithGraph) {\n                        appState.graph.frame.resumeLayout();\n                        appState.graph.frame.paused = false;\n                        appState.graph.smartPause.smartPaused = false;\n                        self.forceUpdate();\n                    }\n                  }\n                }, 10)})()}\n\n             {<Tooltip\n                content={(appState.graph.frame.paused) ? \"Resume Layout Algorithm\" : \"Pause Layout Algorithm\"}\n                position={Position.BOTTOM}\n              >\n                <Button\n                  className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n                  iconName={(!appState.graph.smartPause.smartPaused && appState.graph.frame.paused) ? \"play\" : \"pause\"}\n                  text={(!appState.graph.smartPause.smartPaused && appState.graph.frame.paused) ? \"Resume Layout\" : \"Pause Layout\"}\n                  onClick={() => {\n                    if (appState.graph.frame.paused && !appState.graph.smartPause.smartPaused) {\n                      /**graph is going from \"pause layout\" mode to \"resume layout\"*/\n                      \n                      /** graph runs for default duration when unpaused */\n                      appState.graph.runActiveLayout();\n\n                      appState.graph.frame.resumeLayout();\n                      this.forceUpdate();\n                      /**appState.graph.smartPause.lastUnpaused = Date.now(); //old code using lastUnpaused*/\n                    } else if(appState.graph.smartPause.smartPaused) {\n                      /**graph is going from smart paused \"resume layout\" mode to \"pause layout\" mode*/\n                      appState.graph.frame.paused = true;\n                      appState.graph.smartPause.smartPaused = false;\n                    } else {\n                      /**graph is going from in \"resume layout\" mode to \"pause layout\" mode*/\n                      appState.graph.frame.pauseLayout();\n                      this.forceUpdate();\n                    }\n                  }}\n                />\n              </Tooltip>\n          }\n            </div>\n          )}\n        </div>\n        <div\n          className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_RIGHT])}\n        >\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"graph\"\n            onClick={() => {\n              appState.project.isRenameSnapshotDialogOpen = true;\n            }}\n          >\n            {appState.graph.metadata.snapshotName || \"Untitled Graph\"}\n          </Button>\n          <span className={Classes.NAVBAR_DIVIDER} />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"cog\"\n            onClick={() => {\n              appState.preferences.dialogOpen = true;\n            }}\n          />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"help\"\n            onClick={() => {\n              appState.preferences.helpDialogOpen = true;\n            }}\n          />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"minimize\"\n            onClick={() => {\n              appState.preferences.turnOnMinimalMode()\n            }}\n          />\n          <span className={Classes.NAVBAR_DIVIDER} />\n          <a\n            href={GITHUB_URL}\n            target='_blank'\n            style={{\n              color: appState.preferences.darkMode ? 'white' : 'black',\n              fontSize: '120%',\n              textDecoration: 'none'\n            }}\n          >\n            <FontAwesomeIcon icon={faGithub} />\n          </a>\n        </div>\n      </nav>\n    );\n  }\n}\n\n@observer\nclass MinimalNavbar extends React.Component {\n  render() {\n    return appState.graph.frame && (\n      <div>\n        <div\n          className={classnames(\"minimal-navbar-left\")}\n          style={{\n            backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n          }}\n        >\n          <div className=\"pt-button-group\">\n            <a\n              className={classnames(\"pt-button pt-icon-maximize\", appState.graph.frame.paused ? \"pt-icon-play\" : \"pt-icon-pause\")}\n              role=\"button\"\n              onClick={() => {\n                if (appState.graph.frame.paused) {\n                  appState.graph.frame.resumeLayout();\n                  this.forceUpdate();\n                } else {\n                  appState.graph.frame.pauseLayout();\n                  this.forceUpdate();\n                }\n              }}\n            />\n          </div>\n        </div>\n        <div\n          className={classnames(\"minimal-navbar-right\")}\n          style={{\n            backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n          }}\n        >\n          <div className=\"pt-button-group\">\n            <a className=\"pt-button pt-icon-maximize\" role=\"button\" onClick={() => appState.preferences.turnOffMinimalMode()}></a>\n            <a className=\"pt-button pt-icon-help\" role=\"button\" onClick={() => appState.preferences.helpDialogOpen = true}></a>\n            <a className=\"pt-button pt-icon-document-open\" role=\"button\" href={window.location} target=\"_blank\"></a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n@observer\nclass Navbar extends React.Component {\n  render() {\n    return appState.preferences.isNavbarInMinimalMode ? <MinimalNavbar /> : <RegularNavbar />;\n  }\n}\n\nexport default Navbar;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Icon,\n  Card,\n  Classes,\n  Spinner,\n  NonIdealState,\n  FocusStyleManager\n} from \"@blueprintjs/core\";\nimport appState from \"../stores/index\";\nimport { requestOpenWorkspaceFolder } from \"../ipc/client\";\n\n// Argo-lite: In lite, home screen is replaced by a loading screen\n// since there will always be a default graph showing.\n@observer\nclass WorkspaceView extends React.Component {\n  render() {\n    return (\n      <div className=\"workspace\">\n        {/* <Card\n          interactive={true}\n          elevation={Card.ELEVATION_TWO}\n          onClick={() => {\n            appState.project.isNewProjectDialogOpen = true;\n          }}\n        >\n          <Icon iconName=\"plus\" /> Create New Project\n        </Card>\n        <Card\n          interactive={true}\n          elevation={Card.ELEVATION_TWO}\n          onClick={() => {\n            requestOpenWorkspaceFolder();\n          }}\n        >\n          <Icon iconName=\"cog\" /> Manage Workspace\n        </Card>\n        <hr />\n        <div className=\"argo-menu-list-header\">My Projects</div>\n        <div style={{ paddingBottom: '100px' }}>\n          {appState.project.isFetching ? (\n            <div style={{ textAlign: \"center\" }}>\n              <Spinner />\n            </div>\n          ) : appState.project.projects.length > 0 ? (\n            appState.project.projects.map(project => {\n              return (\n                <div key={project.name}>\n                  <Card\n                    interactive={true}\n                    elevation={Card.ELEVATION_TWO}\n                    onClick={() => {\n                      appState.project.currentProject = project;\n                      appState.project.isProjectDetailDialogOpen = true;\n                    }}\n                  >\n                    <h5>{project.name}</h5>\n                    <p>Created: {project.createdDate || 'Unknown'}</p>\n                  </Card>\n                </div>\n              );\n            })\n          ) : (\n            <div style={{ textAlign: \"center\" }}>\n              Workspace is empty. Start by creating a new project.\n            </div>\n          )}\n        </div> */}\n        <div style={{ textAlign: \"center\", height: \"100vh\" }}>\n          <Spinner />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WorkspaceView;","import React from \"react\";\nimport appState from \"../stores\";\n\nexport default class ThreeJSVis extends React.Component {\n  componentDidMount() {\n    appState.graph.setUpFrame();\n  }\n\n  render() {\n    return (\n      <div\n        id=\"graph-container\"\n        style={{\n          width: \"100vw\",\n          height: \"90vh\",\n          flex: \"1\",\n          position: \"absolute\"\n        }}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Button, Classes, RangeSlider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport { runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport pluralize from \"pluralize\";\nimport appState from \"../../stores\";\nimport { scales } from \"../../constants/index\";\nimport Collapsable from \"../utils/Collapsable\";\nimport SimpleSelect from \"../utils/SimpleSelect\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass GlobalPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeOutRef: null,\n      sizeOptionOpen: false,\n      colorOptionOpen: false,\n      shapeOptionOpen: false\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Collapsable Option: Color */}\n        <Collapsable\n          name=\"Color\"\n          isOpen={this.state.colorOptionOpen}\n          onToggle={() =>\n            this.setState({\n              colorOptionOpen: !this.state.colorOptionOpen\n            })\n          }\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <div> \n                <p style={{display: \"inline\"}}>Color By: </p>\n                <span style={{float:\"right\"}}>\n                  <SimpleSelect  \n                    items={appState.graph.allPropertiesKeyList}\n                    onSelect={it => (appState.graph.nodes.colorBy = it)}\n                    value={appState.graph.nodes.colorBy}\n                  />\n                </span>\n              </div>\n            \n              <div style={{marginTop:\"10px\"}}> \n                <p style={{display: \"inline\"}}>Scale Type: </p>\n                <span style={{float:\"right\"}}>\n                  <SimpleSelect\n                    items={Object.keys(scales)}\n                    onSelect={it => (appState.graph.nodes.color.scale = it)}\n                    value={appState.graph.nodes.color.scale}\n                  />\n                </span>\n              </div>\n          \n            <div>\n              <div style={{marginTop:\"10px\"}}> \n                <p style={{display: \"inline\"}}>Gradient: &nbsp;</p>\n                <span style={{float:\"right\"}}>\n                    <Popover2\n                        placement=\"bottom\"\n                        modifiers={{\n                            preventOverflow: {\n                              enabled: false,\n                            },\n                          }}\n                    >\n                      <Button                  \n                        text=\"  \"\n                        style={{\n                          backgroundImage: \"inherit\",\n                          backgroundColor: appState.graph.nodes.color.from\n                        }}\n                      />\n                      <SketchPicker\n                        color={appState.graph.nodes.color.from}\n                        onChange={it => (appState.graph.nodes.color.from = it.hex)}\n                      />\n                    </Popover2>\n                    &nbsp; &#8594; &nbsp;\n                    <Popover2 \n                    placement=\"bottom\"\n                                modifiers={{\n                                    preventOverflow: {\n                                      enabled: false,\n                                    },\n                                  }}\n                                  >\n                    <Button\n                      text=\"  \"\n                      style={{\n                        backgroundImage: \"inherit\",\n                        backgroundColor: appState.graph.nodes.color.to\n                      }}\n                    />\n                    <SketchPicker\n                      color={appState.graph.nodes.color.to}\n                      onChange={it => (appState.graph.nodes.color.to = it.hex)}\n                    />\n                  </Popover2>\n                </span>\n              </div>\n            </div>\n            <div style={{marginTop:\"-1em\"}}>\n              <svg width=\"100%\" height=\"10\" className=\"gradient-preview\">\n              <defs>\n                <linearGradient\n                  x1=\"0%\"\n                  y1=\"50%\"\n                  x2=\"100%\"\n                  y2=\"50%\"\n                  id=\"theGradient\"\n                >\n                  <stop\n                    stopColor={appState.graph.nodes.color.from}\n                    stopOpacity=\"1\"\n                    offset=\"0%\"\n                  />\n                  <stop\n                    stopColor={appState.graph.nodes.color.to}\n                    stopOpacity=\"1\"\n                    offset=\"100%\"\n                  />\n                </linearGradient>\n              </defs>\n              <rect\n                x=\"0\"\n                y=\"0\"\n                width=\"100%\"\n                height=\"50\"\n                fill=\"url(#theGradient)\"\n              />\n            </svg>\n            </div>\n          </div>\n        </Collapsable>\n        \n        {/* Collapsable Option: Size */}\n        <Collapsable\n          name=\"Size\"\n          isOpen={this.state.sizeOptionOpen}\n          onToggle={() =>\n            this.setState({\n              sizeOptionOpen: !this.state.sizeOptionOpen\n            })\n          }\n        >\n         \n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <div> \n                <p style={{display: \"inline\"}}>Scale By:</p>\n                <span style={{float:\"right\"}}>\n                  <Select\n                    items={appState.graph.allPropertiesKeyList}\n                    itemRenderer={CommonItemRenderer}\n                    filterable={false}\n                    onItemSelect={it => (appState.graph.nodes.sizeBy = it)}\n                  >\n                    <Button text={appState.graph.nodes.sizeBy} />\n                  </Select>\n                </span>\n              \n            </div>\n            <div style={{marginTop:\"10px\"}}> \n                <p style={{display: \"inline\"}}>Scale Type:</p>\n                <span style={{float:\"right\"}}>\n                  <Select\n                  items={Object.keys(scales)}\n                  itemRenderer={CommonItemRenderer}\n                  filterable={false}\n                  onItemSelect={it => (appState.graph.nodes.size.scale = it)}\n                  >\n                    <Button text={appState.graph.nodes.size.scale} />\n                  </Select>\n                </span>\n            </div>\n         \n            <div style={{marginTop:\"10px\"}}> \n              <p style={{display: \"inline\"}}>Size Range:</p>\n            <br />\n            <RangeSlider\n              min={1}\n              max={20}\n              stepSize={0.1}\n              labelStepSize={5}\n              onChange={([a, b]) => {\n                runInAction(\"update scale\", () => {\n                  appState.graph.nodes.size.min = a;\n                  appState.graph.nodes.size.max = b;\n                });\n              }}\n              value={[\n                appState.graph.nodes.size.min,\n                appState.graph.nodes.size.max\n              ]}\n            />\n            </div>\n          </div>\n        </Collapsable>\n        \n        {/* Collapsable Option: Shape */}\n        <Collapsable\n          name=\"Shape\"\n          isOpen={this.state.shapeOptionOpen}\n          onToggle={() =>\n            this.setState({\n              shapeOptionOpen: !this.state.shapeOptionOpen\n            })\n          }\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n          <div>\n          <p style={{display: \"inline\"}}>Node Shape:</p>\n          <span style={{float:\"right\"}}>\n            <Select\n                items={[\n                  \"circle\",\n                  \"square\",\n                  \"triangle\",\n                  \"pentagon\",\n                  \"hexagon\",\n                  \"octagon\"\n                ]}\n                itemRenderer={CommonItemRenderer}\n                filterable={false}\n                onItemSelect={it => (appState.graph.nodes.shape = it)}\n              >\n                <Button  text={appState.graph.nodes.shape} />\n              </Select>\n              </span>\n            </div>        \n          </div>\n        </Collapsable>\n        <br/>\n        <small>\n          \n          {pluralize(\"node\", appState.graph.overrides.size, true)}<span> </span>\n          have override styles.  &nbsp;  \n          <Button className={\"pt-small\"} text=\"Clear\" onClick={() => (appState.graph.overrides = new Map())} />\n        </small>\n      </div>\n    );\n  }\n}\n\nexport default GlobalPanel;","import React from \"react\";\nimport { Classes, Collapse, Switch } from \"@blueprintjs/core\";\n\nexport default ({ name, isOpen, onToggle, children }) => (\n  <div>\n    <Switch\n      label={name}\n      checked={isOpen}\n      onChange={onToggle}\n      className={Classes.ALIGN_RIGHT}\n    />\n    <Collapse isOpen={isOpen}>{children}</Collapse>\n  </div>\n);\n","import React from \"react\";\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport { runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport SwitchCollapsable from \"../utils/SwitchCollapsable\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass SelectionPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shapeOptionOpen: false,\n      sizeOptionOpen: false,\n      colorOptionOpen: false,\n      labelOptionOpen: false\n    };\n  }\n\n  twoLayerUpdate = (nodeId, key, value) => {\n    if (!appState.graph.overrides.has(nodeId)) {\n      appState.graph.overrides.set(nodeId, new Map());\n    }\n    const nodeAttrs = appState.graph.overrides.get(nodeId);\n    if (value !== null) {\n      nodeAttrs.set(key, value);\n    } else {\n      nodeAttrs.delete(key);\n      if (nodeAttrs.size === 0) {\n        appState.graph.overrides.delete(nodeId);\n      }\n    }\n  };\n\n  batchTwoLayerUpdate = (nodes, key, value) => {\n    runInAction(\"update entire selection\", () => {\n      nodes.forEach(n => this.twoLayerUpdate(n.data.ref.id, key, value));\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Size\"\n          isOpen={this.state.sizeOptionOpen}\n          onToggle={() => {\n            if (this.state.sizeOptionOpen) {\n              this.setState(\n                {\n                  sizeOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"size\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  sizeOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"size\",\n                    appState.graph.overrideConfig.size\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <Slider\n              min={1}\n              max={20}\n              stepSize={0.1}\n              labelStepSize={5}\n              onChange={it => {\n                appState.graph.overrideConfig.size = it;\n                this.batchTwoLayerUpdate(\n                  appState.graph.selectedNodes,\n                  \"size\",\n                  it\n                );\n              }}\n              value={appState.graph.overrideConfig.size}\n            />\n          </div>\n        </SwitchCollapsable>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Color\"\n          isOpen={this.state.colorOptionOpen}\n          onToggle={() => {\n            if (this.state.colorOptionOpen) {\n              this.setState(\n                {\n                  colorOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  colorOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    appState.graph.overrideConfig.color\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <div>\n              <p style={{display: \"inline\"}}>Choose Color:</p>\n              <span style={{float:\"right\"}}>\n            <Popover2\n              placement=\"bottom\"\n              modifiers={{\n                preventOverflow: {\n                  enabled: false,\n                },\n              }}>\n              <Button\n                text=\"  \"\n                style={{\n                  backgroundImage: \"inherit\",\n                  backgroundColor: appState.graph.overrideConfig.color\n                }}\n              />\n              <SketchPicker\n                color={appState.graph.overrideConfig.color}\n                onChange={it => {\n                  appState.graph.overrideConfig.color = it.hex;\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    it.hex\n                  );\n                }}\n              />\n            </Popover2>\n            </span>\n            </div>\n          </div>\n        </SwitchCollapsable>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Label\"\n          isOpen={this.state.labelOptionOpen}\n          onToggle={() => {\n            if (this.state.labelOptionOpen) {\n              this.setState(\n                {\n                  labelOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"label\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  labelOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"label\",\n                    appState.graph.overrideConfig.label\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <p style={{display: \"inline\"}}>Custom Label:</p>\n            <input\n              value={appState.graph.overrideConfig.label}\n              onChange={it => {\n                appState.graph.overrideConfig.label = it.target.value;\n                this.batchTwoLayerUpdate(\n                  appState.graph.selectedNodes,\n                  \"label\",\n                  it.target.value\n                );\n              }}\n            />\n          </div>\n        </SwitchCollapsable>\n        <br/>\n        <SwitchCollapsable\n          name=\"Override Shape\"\n          isOpen={this.state.shapeOptionOpen}\n          onToggle={() => {\n            if (this.state.shapeOptionOpen) {\n              this.setState(\n                {\n                  shapeOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"shape\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  shapeOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"shape\",\n                    appState.graph.overrideConfig.shape\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <div> \n              <p style={{display: \"inline\"}}>Node Shape:</p>\n              <span style={{float:\"right\"}}>\n                <Select\n                items={[\n                  \"circle\",\n                  \"square\",\n                  \"triangle\",\n                  \"pentagon\",\n                  \"hexagon\",\n                  \"octagon\"\n                ]}\n                itemRenderer={CommonItemRenderer}\n                filterable={false}\n                onItemSelect={it => {\n                  appState.graph.overrideConfig.shape = it;\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"shape\",\n                    it\n                  );\n                }}\n              >\n                <Button text={appState.graph.overrideConfig.shape} />\n              </Select>\n              </span>        \n            </div>\n          </div>\n        </SwitchCollapsable>\n      </div>\n    );\n  }\n}\n\nexport default SelectionPanel;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport pluralize from \"pluralize\";\nimport appState from \"../../stores\";\nimport GlobalPanel from \"./GlobalPanel\";\nimport SelectionPanel from \"./SelectionPanel\";\n\n@observer\nclass NodesPanel extends React.Component {\n  getRenderedNodes = () => {\n    if (appState.graph.selectedNodes.length === 0) {\n      return (\n        <div>\n          <p>Modifying All Nodes</p>\n        </div>\n      );\n    }\n    return (\n      <p>{`Modifying ${pluralize(\n        \"Node\",\n        appState.graph.selectedNodes.length,\n        true\n      )}`}</p>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.getRenderedNodes()}\n        {appState.graph.selectedNodes.length === 0 ? (\n          <GlobalPanel />\n        ) : (\n          <SelectionPanel />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default NodesPanel;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport { Button, Classes, RangeSlider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport Collapsable from \"../utils/Collapsable\";\nimport SimpleSelect from \"../utils/SimpleSelect\";\nimport mouse from \"../../graph-frontend/src/select\";\n\n@observer\nclass EdgesPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          timeOutRef: null,\n          sizeOptionOpen: false,\n          thicknessOptionOpen: false,\n        };\n      }\n\n    render() {\n        let graph = appState.graph.graph;\n        return (\n            <div>\n                <p>{`Modifying All Edges`}</p>\n\n\n                {/* Collapsable Option: Color */}\n                <Collapsable\n                    name=\"Color\"\n                    isOpen={this.state.colorOptionOpen}\n                    onToggle={() =>\n                        this.setState({\n                        colorOptionOpen: !this.state.colorOptionOpen\n                        })\n                    }\n                    >\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\n                        <div> \n                            <p style={{display: \"inline\"}}>Select Edge Color: </p>\n                            <span style={{float:\"right\"}}>\n                                <Popover2 \n                                placement=\"bottom\"\n                                modifiers={{\n                                    preventOverflow: {\n                                      enabled: false,\n                                    },\n                                  }}>\n                                    <Button\n                                    text=\"  \"\n                                    style={{\n                                        backgroundImage: \"inherit\",\n                                        backgroundColor: appState.graph.edges.color\n                                    }}\n                                    />\n                                    <SketchPicker\n                                    color={appState.graph.edges.color}\n                                    onChange={(it) => {\n                                        appState.graph.process.graph.forEachNode(n => {\n                                             \n                                             let red = new THREE.Color(appState.graph.edges.color).r;\n                                             let blue = new THREE.Color(appState.graph.edges.color).g;\n                                             let green = new THREE.Color(appState.graph.edges.color).b;\n                                             n.renderData.linecolor.r = red;\n                                             n.renderData.linecolor.g = blue;\n                                             n.renderData.linecolor.b = green;\n                                           });\n                                        (appState.graph.edges.color = it.hex);\n                                        /**update edge color in real time*/\n                                        appState.graph.process.onHover(); \n                                    }}\n                                    />\n                                </Popover2>\n                            </span>\n                            </div>\n                        \n                    </div>\n                </Collapsable>\n\n                <div>\n                     <section style = {{marginTop: \"15px\"}}>\n                         <p style={{display: \"inline\"}}>Show Edge Direction: </p>\n                         <div style={{display: \"inline\", float: \"right\"}}>\n                               <input \n                                 type=\"checkbox\"\n                                 onChange={it => {\n                                     console.log(appState.graph.directedOrNot);\n                                     appState.graph.directedOrNot = !appState.graph.directedOrNot;\n                                 }\n                                 }\n                               />\n                         </div>\n                     </section>\n                 </div>\n\n                {/* Collapsable Option: Thickness */}\n                {/* <Collapsable\n                    name=\"Thickness\"\n                    isOpen={this.state.thicknessOptionOpen}\n                    onToggle={() =>\n                        this.setState({\n                            thicknessOptionOpen: !this.state.thicknessOptionOpen\n                        })\n                    }\n                    >\n                    <div className={classnames(Classes.CARD, \"sub-option\")}>\n                        <section>\n                            <p>Select Edge Thickness: </p>\n                            <div style={{display: \"inline\", float: \"right\"}}>\n                               \n                            </div>\n                        </section>\n                    </div>\n                </Collapsable> */}\n            </div>\n        );\n    }\n}\n\nexport default EdgesPanel;","import React from \"react\";\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\nimport { Select } from \"@blueprintjs/labs\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass LabelsPanel extends React.Component {\n  render() {\n    return (\n      <div>\n        <span style={{display: \"inline-block\"}}>\n        <Button\n          style={{width:\"100px\"}}\n          id=\"hideAll\"\n          iconName=\"eye-off\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.hideAllLabels()}\n        >\n          Hide All\n        </Button>\n        <Button\n          style={{width:\"100px\",display:\"none\"}}\n          id=\"showAll\"\n          iconName=\"eye-on\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.showAllLabels()}\n        >\n          Show All\n        </Button>\n        <Button\n          style={{width:\"140px\",marginLeft:\"10px\"}}\n          id=\"hideSelected\"\n          iconName=\"eye-off\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.hideSelectedLabels()}\n        >\n          Hide Selected\n        </Button>\n        <Button\n          style={{width:\"140px\",marginLeft:\"10px\",display:\"none\"}}\n          id=\"showSelected\"\n          iconName=\"eye-on\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.showSelectedLabels()}\n        >\n          Show Selected\n        </Button>\n        </span>\n        <div style={{height: '20px'}} />\n        <h6>Label Size</h6>\n        <Slider\n          min={0.5}\n          max={3}\n          stepSize={0.1}\n          onChange={value => {\n            appState.graph.nodes.labelSize = value;\n          }}\n          value={appState.graph.nodes.labelSize}\n        />\n        <div style={{height: '20px'}} />\n        <h6>Label Length</h6>\n        <Slider\n          min={1}\n          max={32}\n          stepSize={0.1}\n          labelStepSize={5}\n          onChange={value => {\n            appState.graph.nodes.labelLength = value;\n          }}\n          value={appState.graph.nodes.labelLength}\n        />\n        <div style={{height: '20px'}} />\n        <h6>Label By</h6> \n        <Select\n          items={appState.graph.allPropertiesKeyList}\n          itemRenderer={CommonItemRenderer}\n          filterable={false}\n          onItemSelect={it => (appState.graph.nodes.labelBy = it)}\n        >\n          <Button text={appState.graph.nodes.labelBy} />\n        </Select>\n      </div>\n    );\n  }\n}\n\nexport default LabelsPanel;","import React from \"react\";\nimport classnames from \"classnames\";\nimport uniq from \"lodash/uniq\";\nimport { Classes } from \"@blueprintjs/core\";\nimport appState from \"../../stores\";\nimport { observer } from \"mobx-react/index\";\n\n@observer\nclass NodeDetail extends React.Component {\n  render() {\n    // If input is number,\n    // currently format number between 0-1 (eg. pagerank)\n    // to show no more than 3 significant digits.\n    const formatLongFloat = (nodeAttributeValue) => {\n      const num = Number(nodeAttributeValue);\n      if (Number.isNaN(num) || num > 1 || num < 0) {\n        // Do not format just return original\n        return nodeAttributeValue;\n      }\n      // Format to no more than 3 significant digit.\n      return Number.parseFloat(num).toPrecision(3);\n    };\n\n    return (\n      <div\n        className={classnames(\n          // 'overlay-card',\n          \"right-overlay-card\",\n          \"transparent-frame\"\n        )}\n      >\n        <div className={classnames(Classes.CARD, \"node-details-table\")}>\n          <table\n            className={classnames(Classes.TABLE, Classes.TABLE_STRIPED)}\n            style={{\n              width: \"100%\",\n              padding: '0',\n            }}\n          >\n            \n            <thead>\n              <tr>\n                <th>Property</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {appState.graph.allPropertiesKeyList.map((it, i) => (\n                <tr key={`${it}-${i}`}>\n                  <td style={{ padding: '5px 10px' }}>{it}</td>\n                  <td style={{ padding: '5px 10px', whiteSpace: 'normal' }}>{formatLongFloat(this.props.node[it])}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NodeDetail;","import React from \"react\";\n\nimport { format } from \"d3-format\";\nimport { LegendLinear, LegendSize } from \"@vx/vx\";\nimport appState from \"../stores\";\nimport { observer } from \"mobx-react\";\n\nfunction Legends() {\n  return (\n    <div className=\"legends\" style={{visibility: appState.preferences.isLegendShowing ? 'visible' : 'hidden'}}>\n      <LegendSize\n        className=\"scale-legend\"\n        direction=\"row\"\n        itemDirection=\"column\"\n        itemMargin=\"0\"\n        shapeMargin=\"5px 0\"\n        labelFormat={format(\".4f\")}\n        scale={appState.graph.nodeSizeScale}\n        shape={props => {\n          const { size } = props;\n          return (\n            <svg width={size} height={size}>\n              <circle {...props} r={size / 2} cx={size / 2} cy={size / 2} />\n            </svg>\n          );\n        }}\n      />\n      <LegendLinear\n        direction=\"row\"\n        itemDirection=\"column\"\n        shape=\"circle\"\n        scale={appState.graph.nodeColorScale}\n        labelFormat={format(\".4f\")}\n      />\n    </div>\n  );\n}\n\nexport default observer(Legends);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores\";\n\n@observer\nclass StatusBar extends React.Component {\n    render() {\n        return (\n            <div\n                className={classnames(\"bottom-status-bar\")}\n                style={{\n                    backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n                    visibility: appState.preferences.isStatusBarShowing? \"visible\" : \"hidden\"\n                }}\n            >\n                <div className={classnames(\"bottom-status-bar__left\")}>{appState.graph.metadata.fullNodes && appState.graph.metadata.fullEdges && `Total Nodes: ${appState.graph.metadata.fullNodes}, Total Edges: ${appState.graph.metadata.fullEdges},`} Hidden Nodes: {appState.graph.numHiddenNodes}</div>\n                <div className={classnames(\"bottom-status-bar__right\")}>Color by: {appState.graph.nodes.colorBy} ({appState.graph.nodes.color.scale}), Size by: {appState.graph.nodes.sizeBy} ({appState.graph.nodes.size.scale})</div>\n            </div>\n        );\n    }\n}\n\nexport default StatusBar;","import React from \"react\";\nimport { Button, Classes, Tooltip, Intent, Position } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\n\n@observer\nclass SelectionActionPanel extends React.Component {\n  render() {\n      // Only relevant when there's exact 1 node selected.\n      // To display number of hidden nodes if exists\n      let numHiddenNeighbor = 0;\n      if (appState.graph.selectedNodes.length === 1) {\n        if (appState.graph.lastSelectedSingleNode) {\n            const selectedNodeId = appState.graph.lastSelectedSingleNode.data.ref.id.toString();\n            numHiddenNeighbor = appState.graph.getNeighborNodesFromRawGraph(selectedNodeId).filter(n => n.isHidden).length;\n        }\n      }\n\n      return (\n        <div\n            className=\"argo-selection-action-panel\"\n            style={{\n                backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n            }}\n        >\n            <Tooltip\n                content=\"Pin Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"pin\"\n                    text=\"Pin\"\n                    intent={Intent.PRIMARY}\n                    onClick={() => {\n                    appState.graph.frame.pinSelectedNodes();\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            <Tooltip\n                content=\"Unpin Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"unpin\"\n                    text=\"Unpin\"\n                    intent={Intent.WARNING}\n                    onClick={() => {\n                    appState.graph.frame.unpinSelectedNodes();\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            <Tooltip\n                content=\"Hide Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"delete\"\n                    text=\"Hide\"\n                    intent={Intent.DANGER}\n                    onClick={() => {\n                    appState.graph.hideNodes(\n                        appState.graph.frame.getSelectedIds()\n                    );\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            {// This menu only shows when there's exactly 1 node selected\n              appState.graph.selectedNodes.length === 1 && (\n                <div style={{ display: \"inline\" }}>\n                  <Tooltip\n                    content=\"Open Neighbor Dialog\"\n                    position={Position.BOTTOM}\n                  >\n                    <Button\n                      className={classnames([\n                        Classes.BUTTON,\n                        Classes.MINIMAL\n                      ])}\n                      iconName=\"graph\"\n                      text={`Neighbors (${numHiddenNeighbor} hidden)`}\n                      intent={Intent.PRIMARY}\n                      onClick={() => {\n                        appState.graph.frame.pauseLayout();\n                        appState.preferences.neighborDialogOpen = true;\n                        this.forceUpdate();\n                      }}\n                    />\n                  </Tooltip>\n                </div>\n            )}\n        </div>\n      );\n  }\n}\n\nexport default SelectionActionPanel;","import React from \"react\";\nimport { Classes, Tab2, Tabs2 } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../stores\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { addNode } from \"../ipc/client\";\nimport NodesPanel from \"./panels/NodesPanel\";\nimport EdgesPanel from \"./panels/EdgesPanel\";\nimport LabelsPanel from \"./panels/LabelsPanel\";\nimport NodeDetail from \"./panels/NodeDetailPanel\";\nimport Legends from \"./Legends\";\nimport StatusBar from './StatusBar';\nimport SelectionActionPanel from \"./panels/SelectionActionPanel\";\n\n// TODO: migrate to simple select\n\n@observer\nclass RenderOptionsCard extends React.Component {\n  render() {\n    return (\n      <div>\n        <h4>Graph Options</h4>\n        <Tabs2 animate id=\"graph-options\">\n          <Tab2 id=\"nodes\" title=\"Nodes\" panel={<NodesPanel />} />\n          <Tab2 id=\"edges\" title=\"Edges\" panel={<EdgesPanel />} />\n          <Tab2 id=\"labels\" title=\"Labels\" panel={<LabelsPanel />} />\n          {/* <Tab2 id=\"layout\" title=\"Layout\" panel={<LayoutPanel />} /> */}\n          <Tabs2.Expander />\n        </Tabs2>\n      </div>\n    );\n  }\n}\n\n//\n\n@observer\nclass FloatingCards extends React.Component {\n  optionsVisible = {\n    left: '0em'\n  }\n  optionsInvisible = {\n    left: '-22em'\n  }\n  sideButtonVis = {\n    marginLeft: '50px'\n  }\n  sideButtonInv = {\n    marginLeft: '-15px'\n  }\n  toggleOptions = () => {\n    appState.preferences.isRenderOptionsCardHidden = !appState.preferences.isRenderOptionsCardHidden;\n  };\n  render() {\n    return (\n      <div className=\"floating-overlay\">\n        <div className=\"left-cards\">\n          {appState.search.panelOpen && (\n            <div\n              className={classnames(\n                Classes.CARD,\n                Classes.ELEVATION_2,\n                \"overlay-card\",\n                \"left-overlay-card\"\n              )}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"left\",\n                  alignItems: \"left\"\n                }}\n              >\n                <h4 style={{ width: 140 }}>\n                  {appState.search.numCandidates} results\n                </h4>\n                <div style={{ width: 20 }} />\n                <h4>Order</h4>\n                <div style={{ width: 5 }} />\n                <SimpleSelect\n                  style={{ \"margin-bottom\": 10 }}\n                  items={[...appState.graph.metadata.nodeComputed, \"node_id\"]}\n                  onSelect={it => (appState.graph.searchOrder = it)}\n                  value={appState.graph.searchOrder}\n                />\n              </div>\n              <table\n                className={classnames(\n                  Classes.TABLE,\n                  Classes.TABLE_STRIPED,\n                  Classes.INTERACTIVE\n                )}\n                style={{\n                  width: \"100%\",\n                  userSelect: \"none\"\n                }}\n              >\n                <tbody>\n                  {appState.search.candidates.map((node, i) => (\n                    <tr\n                      key={i}\n                      onMouseOver={() =>\n                        appState.graph.frame.highlightNodeIds(\n                          [node.node_id],\n                          true\n                        )\n                      }\n                      onMouseDown={() => addNode(node.node_id)}\n                      onMouseLeave={() =>\n                        appState.graph.frame.highlightNodeIds(\n                          [node.node_id],\n                          false\n                        )\n                      }\n                    >\n                      <td>{node[appState.graph.nodes.labelBy]}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <center>\n                <a\n                  onMouseDown={() => {\n                    if (appState.search.pageNum > 0) {\n                      appState.search.pageNum -= 1;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }\n                  }}\n                >\n                  Prev&nbsp;\n                </a>\n                &nbsp;\n                {appState.search.pageNum !== 0 ? (\n                  <a\n                    onMouseDown={() => {\n                      appState.search.pageNum = 0;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }}\n                  >\n                    1&nbsp;\n                  </a>\n                ) : (\n                    <a\n                      style={{\n                        color: \"#111111\",\n                        pointerEvents: \"none\",\n                        cursor: \"default\"\n                      }}\n                    >\n                      {appState.search.pageNum + 1}&nbsp;\n                    </a>\n                  )}\n                ...<b>&nbsp;</b>\n                {appState.search.pages.map(i => {\n                  if (\n                    i != 0 &&\n                    i != appState.search.maxPage &&\n                    i == appState.search.pageNum\n                  ) {\n                    return (\n                      <a\n                        key={i}\n                        style={{\n                          color: \"#111111\",\n                          pointerEvents: \"none\",\n                          cursor: \"default\"\n                        }}\n                      >\n                        {appState.search.pageNum + 1}&nbsp;\n                      </a>\n                    );\n                  } else if (\n                    i != 0 &&\n                    i != appState.search.maxPage &&\n                    ((i > appState.search.pageNum - 4 &&\n                      i < appState.search.pageNum + 4) ||\n                      (appState.search.pageNum < 4 && i < 8) ||\n                      (appState.search.pageNum > appState.search.maxPage - 4 &&\n                        i > appState.search.maxPage - 8))\n                  ) {\n                    return (\n                      <a\n                        key={i}\n                        onMouseDown={() => {\n                          appState.search.pageNum = i;\n                          appState.search.candidates = appState.search.allCands.slice(\n                            appState.search.pageNum * appState.search.nPerPage,\n                            (appState.search.pageNum + 1) *\n                            appState.search.nPerPage\n                          );\n                        }}\n                      >\n                        {i + 1}&nbsp;\n                      </a>\n                    );\n                  }\n                })}\n                ...&nbsp;\n                {appState.search.pageNum !== appState.search.maxPage ? (\n                  <a\n                    onMouseDown={() => {\n                      appState.search.pageNum = appState.search.maxPage;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }}\n                  >\n                    {appState.search.maxPage + 1}&nbsp;\n                  </a>\n                ) : (\n                    <a\n                      style={{\n                        color: \"#111111\",\n                        pointerEvents: \"none\",\n                        cursor: \"default\"\n                      }}\n                    >\n                      {appState.search.pageNum + 1}\n                    </a>\n                  )}\n                &nbsp;\n                <a\n                  onMouseDown={() => {\n                    if (appState.search.pageNum < appState.search.maxPage) {\n                      appState.search.pageNum += 1;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }\n                  }}\n                >\n                  Next\n                </a>\n                <br />\n                <br />\n                <h5>Page {appState.search.pageNum + 1}</h5>\n              </center>\n            </div>\n          )}\n          <div\n            className={classnames(\n              Classes.CARD,\n              Classes.ELEVATION_2,\n              \"overlay-card\",\n              \"left-overlay-card\",\n              \"transparent-frame\",\n              \"left-cards\"\n            )}\n            style={appState.preferences.isRenderOptionsCardHidden ? this.optionsInvisible : this.optionsVisible}\n          >\n            <button className=\"openbtn2\" onClick={this.toggleOptions}> &#8249;\n            </button>\n            <br />\n            <RenderOptionsCard />\n          </div>\n          <div className={classnames(Classes.CARD, Classes.ELEVATION_2, \"overlay-card\",\n            \"transparent-frame\")} style={{ width: \"1em\", paddingTop: \"1em\", paddingRight: \"0.7em\", paddingBottom: \"0.5em\", marginLeft: \"-5.4em\" }}>\n            <button className=\"openbtn\" onClick={this.toggleOptions} style={appState.preferences.isRenderOptionsCardHidden ? this.sideButtonVis : this.sideButtonInv}>\n              &#9776;\n              </button>\n          </div>\n        </div>\n        {appState.graph.selectedNodes.length === 1 && (\n          <NodeDetail node={appState.graph.selectedNodes[0].data.ref} />\n        )}\n\n        {appState.graph.selectedNodes.length !== 1 && appState.graph.currentlyHovered && (\n          <NodeDetail node={appState.graph.currentlyHovered.data.ref} />\n        )}\n\n        <Legends />\n        <StatusBar />\n        {// This menu only shows when there are nodes selected\n          appState.graph.selectedNodes.length > 0 && !appState.preferences.isNavbarInMinimalMode && <SelectionActionPanel />\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default FloatingCards;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Classes,\n  FocusStyleManager,\n  NonIdealState\n} from \"@blueprintjs/core\";\nimport Dialogs from \"./components/Dialogs\";\nimport Navbar from \"./components/Navbar\";\nimport WorkspaceView from \"./components/WorkspaceView\";\nimport appState from \"./stores/index\";\nimport ThreeJSVis from \"./visualizers/ThreeJSVis\";\nimport FloatingCards from \"./components/FloatingCards\";\nimport registerIPC from \"./ipc/client\";\nimport { fetchWorkspaceProjects } from \"./ipc/client\";\nimport { MOBILE_WIDTH_CUTOFF, MOBILE_HEIGHT_CUTOFF } from \"./constants\";\n\nimport keydown, { Keys } from \"react-keydown\";\n\nregisterIPC();\nFocusStyleManager.onlyShowFocusOnTabs();\n\nfetchWorkspaceProjects();\n\nappState.preferences.loadUserConfig();\n\nconst { DELETE, BACKSPACE, P, U } = Keys;\n\n// Respond to window resize, also triggered after frame is loaded.\nfunction respondToResize() {\n  if (!appState.graph.frame) {\n    window.setTimeout(respondToResize, 1000);\n    return;\n  }\n  if (window.innerWidth < MOBILE_WIDTH_CUTOFF || window.innerHeight < MOBILE_HEIGHT_CUTOFF) {\n    appState.preferences.turnOnMinimalMode();\n  }\n}\n\nrespondToResize();\n\nwindow.addEventListener('resize', respondToResize);\n\n@keydown\n@observer\nclass App extends React.Component {\n  componentWillReceiveProps({ keydown }) {\n    if (keydown.event) {\n      if (keydown.event.which === DELETE || keydown.event.which === BACKSPACE) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.hideNodes(appState.graph.frame.getSelectedIds());\n          this.forceUpdate();\n        }\n      } else if (keydown.event.which === P) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.frame.pinSelectedNodes();\n        }\n      } else if (keydown.event.which === U) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.frame.unpinSelectedNodes();\n        }\n      }\n    }\n  }\n  render() {\n    return (\n      <div\n        className={classnames({\n          \"app-wrapper\": true,\n          [Classes.DARK]: appState.preferences.darkMode\n        })}>\n        <Navbar />\n        <main className=\"main\">\n          {appState.graph.hasGraph ? (\n            <ThreeJSVis />\n          ) : (\n              <WorkspaceView />\n            )}\n        </main>\n        {appState.graph.hasGraph && <FloatingCards />}\n        <Dialogs />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/dist/blueprint.css';\nimport '@blueprintjs/table/dist/table.css';\nimport './styles/index.css';\n\nconst render = () => {\n    ReactDOM.render(<App/>, document.getElementById('root'));\n};\n\nrender();","import * as scale from \"d3-scale\";\n\n// Argo-lite Iframe widget mode\n// Build the app separately and host it on a different URL\n// If set to true, the app will begin in widget mode\n// hiding certain panels, logo, and minimap\n// and show a minimalist Navbar.\nexport const IS_IFRAME_WIDGET = window.location !== window.parent.location;\n\nexport const FRONTEND_URL = \"https://poloclub.github.io/argo-graph-lite\";\nexport const LOGO_URL = \"https://github.com/poloclub/argo-graph-lite\";\nexport const GITHUB_URL = \"https://github.com/poloclub/argo-graph-lite\";\n// Argo-lite Graph Sharing backend Strapi Server:\nexport const BACKEND_URL = \"https://argo-share.herokuapp.com\"; // for production\n// export const BACKEND_URL = \"https://sleepy-brushlands-57948.herokuapp.com\"; // for free heroku\n// export const BACKEND_URL = \"http://localhost:1337\"; // for local strapi development\nexport const SAMPLE_GRAPH_SNAPSHOTS = [\n  [\"Les Miserables\", \"31d8fb5a-b540-4db6-a2df-9c0158e152f0\"],\n  [\"CORD-19 Citation Graph 06-02\", \"4bf882d3-8966-4f41-a590-acafeb998d2a\"]\n];\n\n// When resizing window or running on mobile,\n// used to determine whether screen\n// is considered small.\nexport const MOBILE_WIDTH_CUTOFF = 800;\nexport const MOBILE_HEIGHT_CUTOFF = 480;\n\nexport const SCALE_LINEAR = \"Linear Scale\";\nexport const SCALE_LOG = \"Log Scale\";\n\nexport const scales = {\n  [SCALE_LINEAR]: scale.scaleLinear,\n  [SCALE_LOG]: scale.scaleLog\n};\n\nexport const LOAD_USER_CONFIG = \"load-user-config\";\nexport const LOADED_USER_CONFIG = \"loaded-user-config\";\nexport const SAVE_USER_CONFIG = \"save-user-config\";\nexport const SAVED_USER_CONFIG = \"saved-user-config\";\n\nexport const FETCH_WORKSPACE_PROJECTS = \"fetch-workspace-projects\";\nexport const FETCHED_WORKSPACE_PROJECTS = \"fetched-workspace-projects\";\nexport const MENU_NEW_PROJECT = \"menu-new-project\";\nexport const CREATE_NEW_PROJECT = \"create-new-project\";\nexport const CREATED_NEW_PROJECT = \"created-new-project\";\n\nexport const DELETE_FILE = \"delete-file\";\nexport const RENAME_FILE = \"rename-file\";\n\nexport const LOAD_GRAPH_JSON = \"load-graph-json\";\nexport const LOAD_GRAPH_SQLITE = \"load-graph-sqlite\";\nexport const LOADED_GRAPH_JSON = \"loaded-graph-json\";\nexport const LOAD_TOAST_KEY = \"load-toast-key\";\n\nexport const SAVE_GRAPH_JSON = \"save-graph-json\";\nexport const SAVE_GRAPH_SQLITE = \"save-graph-sqlite\";\nexport const SAVED_GRAPH_JSON = \"saved-graph-json\";\nexport const SAVE_TOAST_KEY = \"save-const-key\";\n\nexport const MENU_LOAD = \"menu-load\";\nexport const MENU_IMPORT_CSV = \"menu-import-csv\";\nexport const MENU_SAVE_GRAPH_STATE = \"menu-save-graph-state\";\nexport const MENU_SAVE_GRAPH_STATE_TO_PROJECT =\n  \"menu-save-graph-state-to-project\";\nexport const MENU_SAVE_GRAPH_SQLITE = \"menu-save-graph-sqlite\";\nexport const SAVE_GRAPH_STATE = \"save-graph-state\";\nexport const SAVED_GRAPH_STATE = \"saved-graph-state\";\nexport const SAVE_GRAPH_STATE_TO_PROJECT = \"save-graph-state-to-project\";\nexport const SAVED_GRAPH_STATE_TO_PROJECT = \"saved-graph-state-to-project\";\nexport const LOAD_GRAPH_STATE = \"load-graph-state\";\nexport const LOADED_GRAPH_STATE = \"loaded-graph-state\";\n\nexport const SHOW_ITEM_IN_FOLDER = \"show-item-in-folder\";\nexport const SHOW_WORKSPACE_FOLDER = 'show-workspace-folder';\nexport const CHANGE_WORKSPACE_FOLDER = 'change-workspace-folder';\nexport const CHANGED_WORKSPACE_FOLDER = 'changed-workspace-folder';\n\nexport const CHOOSE_EDGE_FILE = \"choose-edge-file\";\nexport const CHOSEN_EDGE_FILE = \"chosen-edge-file\";\nexport const CHOOSE_NODE_FILE = \"choose-node-file\";\nexport const PEAKED_NODE_FILE = \"peaked-node-file\";\nexport const CHOSEN_NODE_FILE = \"chosen-node-file\";\n\nexport const CHOOSE_GRAPH_FILE = \"choose-graph-file\";\nexport const CHOSEN_GRAPH_FILE = \"chosen-graph-file\";\nexport const CHOOSE_STATE_FILE = \"choose-state-file\";\nexport const CHOSEN_STATE_FILE = \"chosen-state-file\";\n\nexport const NODE_AND_EDGE_FILE = \"both nodes and edges file\";\nexport const ONLY_EDGE_FILE = \"only edges file\";\n\nexport const GRAPH_AND_STATE_FILE = \"both graph and snapshot file\";\nexport const ONLY_GRAPH_FILE = \"only graph file\";\nexport const IMPORT_GRAPH = \"import-graph\";\nexport const IMPORTED_GRAPH = \"imported-graph\";\nexport const OPEN_GRAPH = \"open-graph\";\nexport const OPENED_GRAPH = \"opened-graph\";\n\nexport const SEARCH_REQUEST = \"search-request\";\nexport const SEARCH_RESPONSE = \"search-response\";\n\nexport const ADD_NODES = \"add-nodes\";\nexport const ADD_SELECT_NODE = \"add-select-node\";\nexport const ADD_NODE = \"add-node\";\nexport const GET_NEIGHBORS = \"get-neighbors\";\n","import { runInAction, toJS } from 'mobx';\nimport { Intent } from '@blueprintjs/core';\nimport { demapify } from 'es6-mapify';\n\nimport appState from '../stores/index';\nimport {\n  ADD_NODE,\n  ADD_NODES,\n  ADD_SELECT_NODE,\n  CHOOSE_EDGE_FILE,\n  CHOOSE_GRAPH_FILE,\n  CHOOSE_NODE_FILE,\n  CHOOSE_STATE_FILE,\n  CHOSEN_EDGE_FILE,\n  CHOSEN_GRAPH_FILE,\n  CHOSEN_NODE_FILE,\n  CHOSEN_STATE_FILE,\n  GET_NEIGHBORS,\n  IMPORT_GRAPH,\n  IMPORTED_GRAPH,\n  LOAD_GRAPH_SQLITE,\n  LOADED_GRAPH_SQLITE,\n  LOADED_GRAPH_STATE,\n  MENU_IMPORT_CSV,\n  MENU_LOAD,\n  MENU_NEW_PROJECT,\n  MENU_SAVE_GRAPH_SQLITE,\n  MENU_SAVE_GRAPH_STATE,\n  CREATE_NEW_PROJECT,\n  CREATED_NEW_PROJECT,\n  OPEN_GRAPH,\n  OPENED_GRAPH,\n  FETCH_WORKSPACE_PROJECTS,\n  FETCHED_WORKSPACE_PROJECTS,\n  SAVE_GRAPH_SQLITE,\n  SAVE_GRAPH_STATE,\n  SAVED_GRAPH_JSON,\n  SAVED_GRAPH_STATE,\n  SEARCH_REQUEST,\n  SEARCH_RESPONSE,\n  SHOW_ITEM_IN_FOLDER,\n  SAVED_GRAPH_STATE_TO_PROJECT,\n  MENU_SAVE_GRAPH_STATE_TO_PROJECT,\n  SAVE_GRAPH_STATE_TO_PROJECT,\n  DELETE_FILE,\n  RENAME_FILE,\n  SHOW_WORKSPACE_FOLDER,\n  LOAD_USER_CONFIG,\n  LOADED_USER_CONFIG,\n  SAVED_USER_CONFIG,\n  SAVE_USER_CONFIG,\n  CHANGE_WORKSPACE_FOLDER,\n  CHANGED_WORKSPACE_FOLDER,\n} from '../constants/index';\nimport { toaster } from '../notifications/client';\n\nimport createGraph from 'ngraph.graph';\nimport pageRank from 'ngraph.pagerank';\nimport parse from \"csv-parse/lib/sync\";\n// import worker from './worker';\n\n// TODO: Register web worker used by Argo-lite.\n\n// Argo-lite replacement for electron ipc.\nconst ipcRenderer = {\n  send: (eventString) => {\n    console.log(`ipcRenderer.send(${eventString}, ...)`);\n  }\n}\n\nexport default function registerIPC() {\n  // ipcRenderer.on(LOADED_USER_CONFIG, (event, loadedObject) => {\n  //   // Overwrite PreferenceStore values according to user config values,\n  //   // if present.\n  //   if (loadedObject.darkMode) {\n  //     appState.preferences.darkMode = true;\n  //   }\n  //   if (loadedObject.workspace && loadedObject.workspace != '') {\n  //     appState.preferences.workspacePath = loadedObject.workspace;\n  //   }\n  // });\n\n  // ipcRenderer.on(SAVED_USER_CONFIG, (event) => {\n  //   toaster.show({\n  //     message: \"User configuration saved\",\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //   });\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_SQLITE, (event, loadedObject) => {\n  //   runInAction('load saved graph', () => {\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\n  //     appState.graph.metadata = loadedObject.metadata;\n  //   });\n  // });\n\n  // ipcRenderer.on(OPENED_GRAPH, (event, loadedObject) => {\n  //   runInAction('load saved graph and state', () => {\n  //     console.log(loadedObject);\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\n  //     appState.graph.metadata = loadedObject.metadata;\n  //     if (loadedObject.state) {\n  //       appState.graph.loadImmediateStates(loadedObject.state);\n  //     }\n  //   });\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, loadedObject) => {\n  //   appState.graph.loadImmediateStates(loadedObject);\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_STATE, (event, savedFilePath) => {\n  //   toaster.show({\n  //     message: `Saved graph snapshot file to ${savedFilePath}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //     action: {\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\n  //       text: 'Show in Folder',\n  //     },\n  //   });\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_STATE_TO_PROJECT, (event, snapshotName) => {\n  //   toaster.show({\n  //     message: `Saved to snapshot ${snapshotName}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //   });\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_JSON, (event, savedFilePath) => {\n  //   toaster.show({\n  //     message: `Saved graph file to ${savedFilePath}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //     action: {\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\n  //       text: 'Show in Folder',\n  //     },\n  //   });\n  // });\n\n  // ipcRenderer.on(CHOSEN_NODE_FILE, (event, path) => {\n  //   appState.import.importConfig.nodeFile.path = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_EDGE_FILE, (event, path) => {\n  //   appState.import.importConfig.edgeFile.path = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_GRAPH_FILE, (event, path) => {\n  //   appState.import.graphFile = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_STATE_FILE, (event, path) => {\n  //   appState.import.stateFile = path;\n  // });\n\n  // ipcRenderer.on(IMPORTED_GRAPH, (event) => {\n  //   appState.import.loading = false;\n  //   appState.import.dialogOpen = false;\n  //   appState.project.isFetching = true;\n  //   fetchWorkspaceProjects();\n  // });\n\n  // ipcRenderer.on(ADD_NODES, (event, toAdd) => {\n  //   runInAction('add nodes and edges to graph', () => {\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\n  //       toAdd.nodes,\n  //     );\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\n  //       toAdd.edges,\n  //     );\n  //   });\n  // });\n\n  // ipcRenderer.on(ADD_SELECT_NODE, (event, toAdd) => {\n  //   runInAction('add nodes and edges to graph', () => {\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\n  //       toAdd.nodes,\n  //     );\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\n  //       toAdd.edges,\n  //     );\n  //   });\n\n  //   appState.graph.frame.setLastNode(toAdd.nodes[0].node_id);\n  //   appState.graph.frame.dragLastNode();\n  // });\n\n  // ipcRenderer.on(SEARCH_RESPONSE, (event, candidates) => {\n  //   var cands = JSON.parse(candidates);\n  //   var ckeys = cands.map(x => x.node_id);\n  //   appState.search.allCands = Object.values(cands);\n  //   appState.search.pageNum = 0;\n  //   appState.search.nPerPage = 10;\n  //   appState.search.numCandidates = appState.search.allCands.length;\n  //   appState.search.maxPage = parseInt(\n  //     appState.search.allCands.length / appState.search.nPerPage,\n  //   );\n  //   appState.search.pages = [...Array(appState.search.maxPage).keys()];\n  //   appState.search.candidates = appState.search.allCands.slice(0, 10);\n  //   appState.search.panelOpen = true;\n  //   if (appState.graph.frame) {\n  //     appState.graph.frame.highlightNodeIds(ckeys, true);\n  //   }\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, stateStr) => {\n  //   appState.graph.loadImmediateStates(stateStr);\n  // });\n\n  // ipcRenderer.on(CREATED_NEW_PROJECT, () => {\n  //   fetchWorkspaceProjects();\n  // });\n\n  // ipcRenderer.on(FETCHED_WORKSPACE_PROJECTS, (event, projects) => {\n  //   appState.project.isFetching = false;\n  //   appState.project.projects = projects;\n  //   // Update mobx state on projects, useful for updating the components after deleting/renaming etc.\n  //   if (appState.project.currentProject !== null) {\n  //     // There is a project currently selected (showing in a ProjectDetailDialog etc.)\n  //     // This fetch needs to update the dialog also\n  //     const temp = appState.project.projects.filter((project) => {\n  //       return project.projectPath === appState.project.currentProject.projectPath;\n  //     });\n  //     if (temp.length === 1) {\n  //       appState.project.currentProject = temp[0];\n  //     } else {\n  //       appState.project.currentProject = null;\n  //     }\n      \n  //   }\n  // });\n\n  // ipcRenderer.on(CHANGED_WORKSPACE_FOLDER, (events, newWorkspaceDirectory) => {\n  //   appState.preferences.workspacePath = newWorkspaceDirectory;\n  //   appState.preferences.saveUserConfig();\n  // });\n\n  // ipcRenderer.on(MENU_NEW_PROJECT, () => {\n  //   appState.project.isNewProjectDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_LOAD, () => {\n  //   appState.preferences.openDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_IMPORT_CSV, () => {\n  //   appState.import.dialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE, () => {\n  //   // Original implementation for opening a traditional system-level save file dialog\n  //   // ipcRenderer.send(SAVE_GRAPH_STATE, appState.graph.saveImmediateStates());\n    \n  //   // New implementation opening a dialog that saves snapshot to project\n  //   appState.project.isSaveSnapshotDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE_TO_PROJECT, () => {\n  //   requestSaveSnapshot();\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_SQLITE, requestSaveSQLite);\n}\n\nexport function requestLoadSQLite() {\n  ipcRenderer.send(LOAD_GRAPH_SQLITE);\n}\n\nexport function addNode(node_id) {\n  ipcRenderer.send(ADD_NODE, node_id);\n}\n\nexport function requestNeighbors(\n  node_id,\n  attr = 'degree',\n  num = '10',\n  order = 'desc',\n) {\n  ipcRenderer.send(GET_NEIGHBORS, node_id, attr, num, order);\n}\n\nfunction requestSaveSQLite() {\n  ipcRenderer.send(\n    SAVE_GRAPH_SQLITE,\n    JSON.stringify({\n      graph: toJS(appState.graph.rawGraph),\n      metadata: toJS(appState.graph.metadata),\n      nodes: toJS(appState.graph.nodes),\n      overrides: toJS(demapify(appState.graph.overrides)),\n      nodePositions: appState.graph.frame.getPositions(),\n    }),\n  );\n}\n\nexport function requestChooseNodeFile(hasHeader) {\n  ipcRenderer.send(CHOOSE_NODE_FILE, hasHeader);\n}\n\nexport function requestChooseEdgeFile(hasHeader) {\n  ipcRenderer.send(CHOOSE_EDGE_FILE, hasHeader);\n}\n\nexport function requestChooseGraphFile() {\n  ipcRenderer.send(CHOOSE_GRAPH_FILE);\n}\n\nexport function requestChooseStateFile() {\n  ipcRenderer.send(CHOOSE_STATE_FILE);\n}\n\nexport function requestOpen() {\n  ipcRenderer.send(\n    OPEN_GRAPH,\n    appState.import.graphFile,\n    appState.import.stateFile,\n  );\n}\n\n// Request to delete a file specified at filePath\nexport function requestDelete(filePath) {\n  ipcRenderer.send(DELETE_FILE, filePath);\n}\n\n/**\n * Request to rename a file specified at filePath\n * @param filePath where the file to be renamed is located\n * @param newName new file name with extension\n */\nexport function requestRename(filePath, newName) {\n  ipcRenderer.send(RENAME_FILE, filePath, newName);\n}\n\nexport function requestSaveSnapshot(snapshotName) {\n  if (!snapshotName) {\n    // Default: Use the currently opened snapshot name (if no snapshot opened, the default name in the ProjectStore will be used)\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, appState.project.currentSnapshotName);\n  } else {\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, snapshotName);\n  }\n}\n\nexport function requestImportGraphFromCSV(hasNodeFile, delimiter, newProjectName) {\n  if (!newProjectName) {\n    newProjectName = 'Test Project';\n  }\n  appState.import.loading = true;\n  const importConfig = {\n    hasNodeFile,\n    nodes: {\n      path: appState.import.importConfig.nodeFile.path,\n      hasColumns: appState.import.importConfig.nodeFile.hasColumns,\n      columns: toJS(appState.import.importConfig.nodeFile.columns),\n      mapping: toJS(appState.import.importConfig.nodeFile.mapping),\n    },\n    edges: {\n      path: appState.import.importConfig.edgeFile.path,\n      hasColumns: appState.import.importConfig.edgeFile.hasColumns,\n      columns: toJS(appState.import.importConfig.edgeFile.columns),\n      mapping: toJS(appState.import.importConfig.edgeFile.mapping),\n      createMissing: appState.import.importConfig.edgeFile.createMissing,\n    },\n    delimiter,\n    newProjectName\n  };\n  ipcRenderer.send(IMPORT_GRAPH, importConfig);\n\n  // TODO: Potentially separate this out to web worker.\n  importGraphFromCSV(importConfig).then(graph => {\n    // Run post import filters\n    appState.import.postImportFilter(graph.rawGraph);\n\n    runInAction('load imported graph', () => {\n      appState.graph.rawGraph = graph.rawGraph;\n      appState.graph.metadata = graph.metadata;\n      appState.graph.setUpFrame();\n    });\n    // Reinitialize global configs\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\n    appState.graph.overrides = new Map();\n    appState.import.loading = false;\n    appState.import.dialogOpen = false;\n    // Sync preference store with graph-frontend frame\n    if (!appState.preferences.darkMode) { // assume frame defaults to dark\n      appState.graph.frame.toggleDark();\n    }\n    if (appState.preferences.minimapShowing) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      appState.graph.frame.hideMiniMap();\n    }\n    // Newly imported graph shouldn't have label showing\n    appState.graph.frame.turnOffLabelCSSRenderer();\n  });\n}\n\nexport function requestImportGraphFromGexf() {\n  importGraphFromGexf().then(graph => {\n    // Run post import filters\n    appState.import.postImportFilter(graph.rawGraph);\n\n    runInAction('load imported graph', () => {\n      appState.graph.rawGraph = graph.rawGraph;\n      appState.graph.metadata = graph.metadata;\n      appState.graph.setUpFrame();\n    });\n    // Reinitialize global configs\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\n    appState.graph.overrides = new Map();\n    appState.import.loading = false;\n    appState.import.gexfDialogOpen = false;\n    // Sync preference store with graph-frontend frame\n    if (!appState.preferences.darkMode) { // assume frame defaults to dark\n      appState.graph.frame.toggleDark();\n    }\n    if (appState.preferences.minimapShowing) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      appState.graph.frame.hideMiniMap();\n    }\n    // Newly imported graph shouldn't have label showing\n    appState.graph.frame.turnOffLabelCSSRenderer();\n  });\n}\n\nasync function readCSV(fileObject, hasHeader, delimiter) {\n  const file = fileObject;\n  const reader = new FileReader();\n  reader.readAsText(file);\n  return new Promise((resolve, reject) => {\n    reader.onload = () => {\n      const content = reader.result;\n      try {\n        if (hasHeader) {\n          resolve(parse(content, {\n            comment: \"#\",\n            trim: true,\n            auto_parse: true,\n            skip_empty_lines: true,\n            columns: hasHeader,\n            delimiter\n          }));\n        }\n        resolve(parse(content, {\n          comment: \"#\",\n          trim: true,\n          auto_parse: true,\n          skip_empty_lines: true,\n          columns: undefined,\n          delimiter\n        }));\n      } catch(err) {\n        let msg =  err.message\n        let mismatch = msg.indexOf(\"Invalid Record Length:\") == 0\n        if (mismatch) {\n          msg = msg.replace(\"is\", \"set to\")\n          msg = msg.replace(\"got\", \"but detected\")\n        } \n        toaster.show({\n          message: \"Error: \" + msg,\n          intent: Intent.DANGER,\n          timeout: -1\n      });\n        appState.import.loading = false;\n      }\n    }\n  });\n}\n\nasync function parseGEXF(content) {\n  const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(content,\"text/xml\");\n      const xmlEdges = xmlDoc.getElementsByTagName('edge');\n      const xmlNodes = xmlDoc.getElementsByTagName('node');\n      const xmlAttri = xmlDoc.getElementsByTagName('attributes')\n      \n      let nodeAttri = [];\n      let edgeAttri = [];\n      const edgesArr = [];\n      const nodesArr = [];\n      const nodeAttriOrdered = {};\n      \n      for (let i = 0, l = xmlAttri.length; i < l; i++) {\n        const curr = xmlAttri[i];\n        if (curr.getAttribute('class') === 'node') {\n          nodeAttri = curr.getElementsByTagName('attribute');\n        }\n        else if (curr.getAttribute('class') === 'edge') {\n          edgeAttri = curr.getElementsByTagName('attribute');\n        }\n      }\n      \n      for (let i = 0, l = nodeAttri.length; i < l; i++) {\n        const curr = nodeAttri[i];\n        nodeAttriOrdered[curr.getAttribute(\"id\")] = curr.getAttribute(\"title\");\n      }\n\n      for (let i = 0, l = xmlEdges.length; i < l; i++) {\n        const currEdge = xmlEdges[i];\n        const s = currEdge.getAttribute('source').toString();\n        const t = currEdge.getAttribute('target').toString();\n        edgesArr.push({\n          source_id: s,\n          target_id: t,\n        });\n      }\n      for (let i = 0, l = xmlNodes.length; i < l; i++) {\n        const currNode = xmlNodes[i];\n        const id = currNode.getAttribute('id').toString();\n        const nodeAttvalues = currNode.getElementsByTagName(\"attvalues\");\n        const nodeAttvalue = [];\n        if (nodeAttvalues.length != 0) {\n          nodeAttvalue = nodeAttvalues[0].getElementsByTagName(\"attvalue\");\n        }\n        let node = { id: id, degree: 0, pagerank: 0, node_id: id};\n        for (let j = 0; j < nodeAttvalue.length; j++){\n          const value = nodeAttvalue[j].attributes[\"value\"].value;\n          const attributeIdElementAttribute = nodeAttvalue[j].attributes[\"for\"] || nodeAttvalue[j].attributes[\"id\"];\n          const attributeId = attributeIdElementAttribute.value;\n          node[nodeAttriOrdered[attributeId]] = value;\n        }\n        for (let j = 0; j < currNode.attributes.length; j++) {\n          const currAttri = currNode.attributes[j];\n            node[currAttri.name] = currAttri.value;\n        }\n        node[\"id\"] = id;\n        node[\"node_id\"] = id;\n        nodesArr.push(node);\n      }\n      return [nodesArr, edgesArr];\n}\n\nasync function readGEXF(fileObject) {\n  const file = fileObject;\n  const reader = new FileReader();\n  reader.readAsText(file);\n  \n  return new Promise((resolve, reject) => {\n      reader.onload = () => {\n      const content = reader.result;\n      resolve(parseGEXF(content));\n    }\n  });\n}\n\nasync function importGraphFromCSV(config) {\n  // Since the CSV lib we use uses int index when there's not header/column names specified\n  // but the frontend selector always convert int to string values, we need to\n  // manually convert the user-selected fromId and toId values back to int.\n  // Note that this should only be done when there's no header provided on the CSV (hasColumns == false).\n  const fromId = config.nodes.hasColumns ? config.edges.mapping.fromId : parseInt(config.edges.mapping.fromId);\n  const toId = config.nodes.hasColumns ? config.edges.mapping.toId : parseInt(config.edges.mapping.toId);\n\n  // Create temporary data structures.\n  let nodesArr = [];\n  const graph = createGraph();\n  const degreeDict = {};\n  if (config.hasNodeFile) {\n    nodesArr = await readCSV(appState.import.selectedNodeFileFromInput, config.nodes.hasColumns, config.delimiter);\n    nodesArr.forEach(node => graph.addNode(node[config.nodes.mapping.id].toString(),\n      { id: node[config.nodes.mapping.id].toString(), degree: 0, ...node }));\n    nodesArr =\n      nodesArr.map(\n        n => ({ ...n, id: n[config.nodes.mapping.id].toString(), degree: 0, pagerank: 0 }));\n    nodesArr.forEach(n => degreeDict[n.id] = 0);\n  }\n  const edges = await readCSV(appState.import.selectedEdgeFileFromInput, config.edges.hasColumns, config.delimiter);\n  if (config.edges.createMissing) {\n    edges.forEach((it) => {\n      const from = it[fromId].toString();\n      const to = it[toId].toString();\n      if (!graph.hasNode(from)) {\n        graph.addNode(from, { id: from, degree: 0 });\n        nodesArr.push({ id: from, degree: 0, pagerank: 0 });\n        degreeDict[from] = 0;\n      }\n      if (!graph.hasNode(to)) {\n        graph.addNode(to, { id: to, degree: 0 });\n        nodesArr.push({ id: to, degree: 0, pagerank: 0 });\n        degreeDict[to] = 0;\n      }\n    });\n  }\n\n  const edgesSet = new Set();\n  \n  const edgesArr = [];\n\n  const addEdge = (from, to) => {\n    const edgeKey = `${from}👉${to}`;\n    if (edgesSet.has(edgeKey)) {\n      return;\n    }\n    edgesSet.add(edgeKey);\n    graph.addLink(from, to);\n    degreeDict[from] += 1;\n    degreeDict[to] += 1;\n    edgesArr.push({\n      source_id: from,\n      target_id: to,\n    });\n  };\n  \n  edges.forEach(it => {\n    const from = it[fromId].toString();\n    const to = it[toId].toString();\n    // Argo currently works with undirected graph\n    addEdge(from, to);\n    // addEdge(to, from);\n  });\n\n  const rank = pageRank(graph);\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id] }));\n  return {\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\n    metadata: {\n      snapshotName: 'Untitled Graph',\n      fullNodes: nodesArr.length,\n      fullEdges: edgesArr.length, //Math.floor(edgesArr.length / 2), // Counting undirected edges\n      nodeProperties: Object.keys(nodesArr[0]),\n      nodeComputed: ['pagerank', 'degree'],\n      edgeProperties: ['source_id', 'target_id'],\n    },\n  }\n}\n\nexport async function importGraphFromGexf() {\n  const gexfParsed = await readGEXF(appState.import.selectedGexfFileFromInput);\n  let nodesArr = gexfParsed[0];\n  const edges = gexfParsed[1];\n  const graph = createGraph();\n  const degreeDict = {};\n\n  nodesArr.forEach((it) => {\n    const currNode = it[\"id\"].toString();\n    if (!graph.hasNode(currNode)) {\n      graph.addNode(currNode, it);\n      degreeDict[currNode] = 0;\n    }\n  });\n\n  const edgesSet = new Set();\n  \n  const edgesArr = [];\n\n  const addEdge = (from, to) => {\n    const edgeKey = `${from}👉${to}`;\n    if (edgesSet.has(edgeKey)) {\n      return;\n    }\n    edgesSet.add(edgeKey);\n    graph.addLink(from, to);\n    degreeDict[from] += 1;\n    degreeDict[to] += 1;\n    edgesArr.push({\n      source_id: from,\n      target_id: to,\n    });\n  };\n  \n  edges.forEach(it => {\n    const from = it[\"source_id\"].toString();\n    const to = it[\"target_id\"].toString();\n\n    // Argo currently works with undirected graph\n    addEdge(from, to);\n    // addEdge(to, from);\n  });\n\n  const rank = pageRank(graph);\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id] }));\n  return {\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\n    metadata: {\n      snapshotName: 'Untitled Graph',\n      fullNodes: nodesArr.length,\n      fullEdges: edgesArr.length, //Math.floor(edgesArr.length / 2), // Counting undirected edges\n      nodeProperties: Object.keys(nodesArr[0]),\n      nodeComputed: ['pagerank', 'degree'],\n      edgeProperties: ['source_id', 'target_id'],\n    },\n  }\n}\n\nexport function runSearch(searchStr) {\n  ipcRenderer.send(SEARCH_REQUEST, searchStr, appState.graph.searchOrder);\n}\n\nexport function fetchWorkspaceProjects() {\n  ipcRenderer.send(FETCH_WORKSPACE_PROJECTS);\n}\n\nexport function requestCreateNewProject(projectMetadata) {\n  ipcRenderer.send(CREATE_NEW_PROJECT, projectMetadata);\n}\n\nexport function requestOpenWorkspaceFolder() {\n  ipcRenderer.send(SHOW_WORKSPACE_FOLDER);\n}\n\nexport function requestLoadUserConfig() {\n  ipcRenderer.send(LOAD_USER_CONFIG);\n}\n\nexport function requestSaveUserConfig(userConfig) {\n  ipcRenderer.send(SAVE_USER_CONFIG, userConfig);\n}\n\nexport function requestChangeWorkspace() {\n  ipcRenderer.send(CHANGE_WORKSPACE_FOLDER);\n}","var $ = require(\"jquery\");\nfunction Edge(source, target) {\n  this.source = source;\n  this.target = target;\n  this.renderData = {};\n}\n\nfunction Node(id, size = 0.5) {\n  this.id = id;\n  this.index = id;\n  this.in = [];\n  this.out = [];\n  this.size = size;\n  this.renderData = {};\n  this.domainData = {};\n  this.x = 1;\n  this.y = 1;\n  this.vx = 1;\n  this.vy = 1;\n\n  /**\n   * Tells if a node is connected to a node of a certain id\n   */\n  this.connectedTo = function(id) {\n    outNodeIds = this.out.map(function(outNode) {\n      return outNode.id;\n    });\n    return $.inArray(id, outNodeIds) >= 0;\n  };\n}\n\nNode.prototype.connectNode = function(node) {\n  if (!this.connectedTo(node.id)) {\n    this.out.push(node);\n    return true;\n  }\n  return false;\n};\n\nexports.Edge = Edge;\nexports.Node = Node;\n","var THREE = require(\"three\");\n\nTHREE.MeshLine = function() {\n  this.positions = [];\n\n  this.previous = [];\n  this.next = [];\n  this.side = [];\n  this.width = [];\n  this.indices_array = [];\n  this.uvs = [];\n  this.counters = [];\n  this.geometry = new THREE.BufferGeometry();\n\n  this.widthCallback = null;\n};\n\nTHREE.MeshLine.prototype.setGeometry = function(g, c) {\n  this.widthCallback = c;\n\n  this.positions = [];\n  this.counters = [];\n\n  if (g instanceof THREE.Geometry) {\n    for (var j = 0; j < g.vertices.length; j++) {\n      var v = g.vertices[j];\n      var c = j / g.vertices.length;\n      this.positions.push(v.x, v.y, v.z);\n      this.positions.push(v.x, v.y, v.z);\n      this.counters.push(c);\n      this.counters.push(c);\n    }\n  }\n\n  if (g instanceof THREE.BufferGeometry) {\n    // read attribute positions ?\n  }\n\n  if (g instanceof Float32Array || g instanceof Array) {\n    for (var j = 0; j < g.length; j += 3) {\n      var c = j / g.length;\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\n      this.counters.push(c);\n      this.counters.push(c);\n    }\n  }\n\n  this.process();\n};\n\nTHREE.MeshLine.prototype.compareV3 = function(a, b) {\n  var aa = a * 6;\n  var ab = b * 6;\n  return (\n    this.positions[aa] === this.positions[ab] &&\n    this.positions[aa + 1] === this.positions[ab + 1] &&\n    this.positions[aa + 2] === this.positions[ab + 2]\n  );\n};\n\nTHREE.MeshLine.prototype.copyV3 = function(a) {\n  var aa = a * 6;\n  return [this.positions[aa], this.positions[aa + 1], this.positions[aa + 2]];\n};\n\nTHREE.MeshLine.prototype.process = function() {\n  var l = this.positions.length / 6;\n\n  this.previous = [];\n  this.next = [];\n  this.side = [];\n  this.width = [];\n  this.indices_array = [];\n  this.uvs = [];\n\n  for (var j = 0; j < l; j++) {\n    this.side.push(1);\n    this.side.push(-1);\n  }\n\n  var w;\n  for (var j = 0; j < l; j++) {\n    if (this.widthCallback) w = this.widthCallback(j / (l - 1));\n    else w = 1;\n    this.width.push(w);\n    this.width.push(w);\n  }\n\n  for (var j = 0; j < l; j++) {\n    this.uvs.push(j / (l - 1), 0);\n    this.uvs.push(j / (l - 1), 1);\n  }\n\n  var v;\n\n  if (this.compareV3(0, l - 1)) {\n    v = this.copyV3(l - 2);\n  } else {\n    v = this.copyV3(0);\n  }\n  this.previous.push(v[0], v[1], v[2]);\n  this.previous.push(v[0], v[1], v[2]);\n  for (var j = 0; j < l - 1; j++) {\n    v = this.copyV3(j);\n    this.previous.push(v[0], v[1], v[2]);\n    this.previous.push(v[0], v[1], v[2]);\n  }\n\n  for (var j = 1; j < l; j++) {\n    v = this.copyV3(j);\n    this.next.push(v[0], v[1], v[2]);\n    this.next.push(v[0], v[1], v[2]);\n  }\n\n  if (this.compareV3(l - 1, 0)) {\n    v = this.copyV3(1);\n  } else {\n    v = this.copyV3(l - 1);\n  }\n  this.next.push(v[0], v[1], v[2]);\n  this.next.push(v[0], v[1], v[2]);\n\n  for (var j = 0; j < l - 1; j++) {\n    var n = j * 2;\n    this.indices_array.push(n, n + 1, n + 2);\n    this.indices_array.push(n + 2, n + 1, n + 3);\n  }\n\n  if (!this.attributes) {\n    this.attributes = {\n      position: new THREE.BufferAttribute(new Float32Array(this.positions), 3),\n      previous: new THREE.BufferAttribute(new Float32Array(this.previous), 3),\n      next: new THREE.BufferAttribute(new Float32Array(this.next), 3),\n      side: new THREE.BufferAttribute(new Float32Array(this.side), 1),\n      width: new THREE.BufferAttribute(new Float32Array(this.width), 1),\n      uv: new THREE.BufferAttribute(new Float32Array(this.uvs), 2),\n      index: new THREE.BufferAttribute(new Uint16Array(this.indices_array), 1),\n      counters: new THREE.BufferAttribute(new Float32Array(this.counters), 1)\n    };\n  } else {\n    this.attributes.position.copyArray(new Float32Array(this.positions));\n    this.attributes.position.needsUpdate = true;\n    this.attributes.previous.copyArray(new Float32Array(this.previous));\n    this.attributes.previous.needsUpdate = true;\n    this.attributes.next.copyArray(new Float32Array(this.next));\n    this.attributes.next.needsUpdate = true;\n    this.attributes.side.copyArray(new Float32Array(this.side));\n    this.attributes.side.needsUpdate = true;\n    this.attributes.width.copyArray(new Float32Array(this.width));\n    this.attributes.width.needsUpdate = true;\n    this.attributes.uv.copyArray(new Float32Array(this.uvs));\n    this.attributes.uv.needsUpdate = true;\n    this.attributes.index.copyArray(new Uint16Array(this.indices_array));\n    this.attributes.index.needsUpdate = true;\n  }\n\n  this.geometry.addAttribute(\"position\", this.attributes.position);\n  this.geometry.addAttribute(\"previous\", this.attributes.previous);\n  this.geometry.addAttribute(\"next\", this.attributes.next);\n  this.geometry.addAttribute(\"side\", this.attributes.side);\n  this.geometry.addAttribute(\"width\", this.attributes.width);\n  this.geometry.addAttribute(\"uv\", this.attributes.uv);\n  this.geometry.addAttribute(\"counters\", this.attributes.counters);\n\n  this.geometry.setIndex(this.attributes.index);\n};\n\nfunction memcpy(src, srcOffset, dst, dstOffset, length) {\n  var i;\n\n  src = src.subarray || src.slice ? src : src.buffer;\n  dst = dst.subarray || dst.slice ? dst : dst.buffer;\n\n  src = srcOffset\n    ? src.subarray\n      ? src.subarray(srcOffset, length && srcOffset + length)\n      : src.slice(srcOffset, length && srcOffset + length)\n    : src;\n\n  if (dst.set) {\n    dst.set(src, dstOffset);\n  } else {\n    for (i = 0; i < src.length; i++) {\n      dst[i + dstOffset] = src[i];\n    }\n  }\n\n  return dst;\n}\n\n/**\n * Fast method to advance the line by one position.  The oldest position is removed.\n * @param position\n */\nTHREE.MeshLine.prototype.advance = function(position) {\n  var positions = this.attributes.position.array;\n  var previous = this.attributes.previous.array;\n  var next = this.attributes.next.array;\n  var l = positions.length;\n\n  // PREVIOUS\n  memcpy(positions, 0, previous, 0, l);\n\n  // POSITIONS\n  memcpy(positions, 6, positions, 0, l - 6);\n\n  positions[l - 6] = position.x;\n  positions[l - 5] = position.y;\n  positions[l - 4] = position.z;\n  positions[l - 3] = position.x;\n  positions[l - 2] = position.y;\n  positions[l - 1] = position.z;\n\n  // NEXT\n  memcpy(positions, 6, next, 0, l - 6);\n\n  next[l - 6] = position.x;\n  next[l - 5] = position.y;\n  next[l - 4] = position.z;\n  next[l - 3] = position.x;\n  next[l - 2] = position.y;\n  next[l - 1] = position.z;\n\n  this.attributes.position.needsUpdate = true;\n  this.attributes.previous.needsUpdate = true;\n  this.attributes.next.needsUpdate = true;\n};\n\nTHREE.MeshLineMaterial = function(parameters) {\n  var vertexShaderSource = [\n    \"precision highp float;\",\n    \"\",\n    \"attribute vec3 position;\",\n    \"attribute vec3 previous;\",\n    \"attribute vec3 next;\",\n    \"attribute float side;\",\n    \"attribute float width;\",\n    \"attribute vec2 uv;\",\n    \"attribute float counters;\",\n    \"\",\n    \"uniform mat4 projectionMatrix;\",\n    \"uniform mat4 modelViewMatrix;\",\n    \"uniform vec2 resolution;\",\n    \"uniform float lineWidth;\",\n    \"uniform vec3 color;\",\n    \"uniform float opacity;\",\n    \"uniform float near;\",\n    \"uniform float far;\",\n    \"uniform float sizeAttenuation;\",\n    \"\",\n    \"varying vec2 vUV;\",\n    \"varying vec4 vColor;\",\n    \"varying vec3 vPosition;\",\n    \"varying float vCounters;\",\n    \"\",\n    \"vec2 fix( vec4 i, float aspect ) {\",\n    \"\",\n    \"    vec2 res = i.xy / i.w;\",\n    \"    res.x *= aspect;\",\n    \"\t vCounters = counters;\",\n    \"    return res;\",\n    \"\",\n    \"}\",\n    \"\",\n    \"void main() {\",\n    \"\",\n    \"    float aspect = resolution.x / resolution.y;\",\n    \"\t float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);\",\n    \"\",\n    \"    vColor = vec4( color, opacity );\",\n    \"    vUV = uv;\",\n    \"\",\n    \"    mat4 m = projectionMatrix * modelViewMatrix;\",\n    \"    vec4 finalPosition = m * vec4( position, 1.0 );\",\n    \"    vec4 prevPos = m * vec4( previous, 1.0 );\",\n    \"    vec4 nextPos = m * vec4( next, 1.0 );\",\n    \"\",\n    \"    vec2 currentP = fix( finalPosition, aspect );\",\n    \"    vec2 prevP = fix( prevPos, aspect );\",\n    \"    vec2 nextP = fix( nextPos, aspect );\",\n    \"\",\n    \"\t float pixelWidth = finalPosition.w * pixelWidthRatio;\",\n    \"    float w = 1.8 * pixelWidth * lineWidth * width;\",\n    \"\",\n    \"    if( sizeAttenuation == 1. ) {\",\n    \"        w = 1.8 * lineWidth * width;\",\n    \"    }\",\n    \"\",\n    \"    vec2 dir;\",\n    \"    if( nextP == currentP ) dir = normalize( currentP - prevP );\",\n    \"    else if( prevP == currentP ) dir = normalize( nextP - currentP );\",\n    \"    else {\",\n    \"        vec2 dir1 = normalize( currentP - prevP );\",\n    \"        vec2 dir2 = normalize( nextP - currentP );\",\n    \"        dir = normalize( dir1 + dir2 );\",\n    \"\",\n    \"        vec2 perp = vec2( -dir1.y, dir1.x );\",\n    \"        vec2 miter = vec2( -dir.y, dir.x );\",\n    \"        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );\",\n    \"\",\n    \"    }\",\n    \"\",\n    \"    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;\",\n    \"    vec2 normal = vec2( -dir.y, dir.x );\",\n    \"    normal.x /= aspect;\",\n    \"    normal *= .5 * w;\",\n    \"\",\n    \"    vec4 offset = vec4( normal * side, 0.0, 1.0 );\",\n    \"    finalPosition.xy += offset.xy;\",\n    \"\",\n    \"\t vPosition = ( modelViewMatrix * vec4( position, 1. ) ).xyz;\",\n    \"    gl_Position = finalPosition;\",\n    \"\",\n    \"}\"\n  ];\n\n  var fragmentShaderSource = [\n    \"#extension GL_OES_standard_derivatives : enable\",\n    \"precision mediump float;\",\n    \"\",\n    \"uniform sampler2D map;\",\n    \"uniform float useMap;\",\n    \"uniform float useDash;\",\n    \"uniform vec2 dashArray;\",\n    \"uniform float visibility;\",\n    \"uniform float alphaTest;\",\n    \"\",\n    \"varying vec2 vUV;\",\n    \"varying vec4 vColor;\",\n    \"varying vec3 vPosition;\",\n    \"varying float vCounters;\",\n    \"\",\n    \"void main() {\",\n    \"\",\n    \"    vec4 c = vColor;\",\n    \"\t if( c.a < alphaTest ) discard;\",\n    \"    if( useMap == 1. ) c *= texture2D( map, vUV );\",\n    \"\t if( useDash == 1. ){\",\n    \"\t \t \",\n    \"\t }\",\n    \"    gl_FragColor = c;\",\n    \"\t gl_FragColor.a *= step(vCounters,visibility);\",\n    \"}\"\n  ];\n\n  function check(v, d) {\n    if (v === undefined) return d;\n    return v;\n  }\n\n  THREE.Material.call(this);\n\n  parameters = parameters || {};\n\n  this.lineWidth = check(parameters.lineWidth, 1);\n  this.map = check(parameters.map, null);\n  this.useMap = check(parameters.useMap, 0);\n  this.color = check(parameters.color, new THREE.Color(0xffffff));\n  this.opacity = check(parameters.opacity, 1);\n  this.resolution = check(parameters.resolution, new THREE.Vector2(1, 1));\n  this.sizeAttenuation = check(parameters.sizeAttenuation, 1);\n  this.near = check(parameters.near, 1);\n  this.far = check(parameters.far, 1);\n  this.dashArray = check(parameters.dashArray, []);\n  this.useDash = this.dashArray !== [] ? 1 : 0;\n  this.visibility = check(parameters.visibility, 1);\n  this.alphaTest = check(parameters.alphaTest, 0);\n\n  var material = new THREE.RawShaderMaterial({\n    uniforms: {\n      lineWidth: { type: \"f\", value: this.lineWidth },\n      map: { type: \"t\", value: this.map },\n      useMap: { type: \"f\", value: this.useMap },\n      color: { type: \"c\", value: this.color },\n      opacity: { type: \"f\", value: this.opacity },\n      resolution: { type: \"v2\", value: this.resolution },\n      sizeAttenuation: { type: \"f\", value: this.sizeAttenuation },\n      near: { type: \"f\", value: this.near },\n      far: { type: \"f\", value: this.far },\n      dashArray: {\n        type: \"v2\",\n        value: new THREE.Vector2(this.dashArray[0], this.dashArray[1])\n      },\n      useDash: { type: \"f\", value: this.useDash },\n      visibility: { type: \"f\", value: this.visibility },\n      alphaTest: { type: \"f\", value: this.alphaTest }\n    },\n    vertexShader: vertexShaderSource.join(\"\\r\\n\"),\n    fragmentShader: fragmentShaderSource.join(\"\\r\\n\")\n  });\n\n  delete parameters.lineWidth;\n  delete parameters.map;\n  delete parameters.useMap;\n  delete parameters.color;\n  delete parameters.opacity;\n  delete parameters.resolution;\n  delete parameters.sizeAttenuation;\n  delete parameters.near;\n  delete parameters.far;\n  delete parameters.dashArray;\n  delete parameters.visibility;\n  delete parameters.alphaTest;\n\n  material.type = \"MeshLineMaterial\";\n\n  material.setValues(parameters);\n\n  return material;\n};\n\nTHREE.MeshLineMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshLineMaterial.prototype.constructor = THREE.MeshLineMaterial;\n\nTHREE.MeshLineMaterial.prototype.copy = function(source) {\n  THREE.Material.prototype.copy.call(this, source);\n\n  this.lineWidth = source.lineWidth;\n  this.map = source.map;\n  this.useMap = source.useMap;\n  this.color.copy(source.color);\n  this.opacity = source.opacity;\n  this.resolution.copy(source.resolution);\n  this.sizeAttenuation = source.sizeAttenuation;\n  this.near = source.near;\n  this.far = source.far;\n\n  return this;\n};\n\nexports.MeshLine = THREE.MeshLine;\nexports.MeshLineMaterial = THREE.MeshLineMaterial;\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\n\nmodule.exports = function(self) {\n  self.selectNode = function(node) {\n    self.dragging = node;\n    self.selection = [node];\n    node.renderData.isSelected = true;\n    self.updateSelection(self.mouseX, self.mouseY);\n  };\n\n  /**\n   * Deselect nodes in selection list\n   */\n  self.clearSelection = function() {\n    for (var i = 0; i < self.selection.length; i++) {\n      self.selection[i].renderData.isSelected = false;\n      if (!def.NODE_NO_HIGHLIGHT) {\n        self.selection[i].renderData.draw_object.children[0].visible = false;\n      } else {\n        self.selection[i].renderData.draw_object.material.color.set(\n          new THREE.Color(self.selection[i].renderData.color)\n        );\n      }\n      self.selection[i].renderData.textHolder.children[0].element.hideme = true;\n    }\n    self.selection = [];\n  };\n\n  /**\n   *  Update positions of all objects in self.selection\n   *  based on diff between mouse position and self.dragging position\n   */\n  self.updateSelection = function(mouseX, mouseY, selection) {\n    if (self.dragging) {\n      var diffx = mouseX - self.dragging.x;\n      var diffy = mouseY - self.dragging.y;\n    }\n\n    //'selection' only passed if a single node is double clicked\n    let clickedNode = selection;\n    //if not already pinned, then pin the node upon double-click\n    if(clickedNode && !clickedNode.pinnedx) {\n      clickedNode.pinnedx = true;\n      clickedNode.pinnedy = true;\n    } else if (clickedNode && clickedNode.pinnedx) {\n      //if already pinned, then unpin upon double-click\n      clickedNode.pinnedx = false;\n      clickedNode.pinnedy = false;\n    }\n    \n    for (var i = 0; i < self.selection.length; i++) {\n      if (self.dragging) {\n        self.selection[i].x += diffx;\n        self.selection[i].y += diffy;\n        self.selection[i].fx = self.selection[i].x;\n        self.selection[i].fy = self.selection[i].y;\n        //pins multiple nodes when dragging\n        if(!clickedNode) {\n          self.selection[i].pinnedx = true;\n          self.selection[i].pinnedy = true;\n        }\n      }\n      if (!def.NODE_NO_HIGHLIGHT) {\n        self.selection[i].renderData.draw_object.children[0].visible = true;\n      } else {\n        self.selection[i].renderData.draw_object.material.color.set(\n          new THREE.Color(self.selection[i].renderData.hcolor)\n        );\n      }\n      self.selection[\n        i\n      ].renderData.textHolder.children[0].element.hideme = false;\n    }\n  };\n\n  /**\n   *  Find any objects within the current box selection and add it to self.selection\n   */\n  self.checkSelection = function(mouseX, mouseY) {\n    if (!self.dragging) {\n      self.mouseEnd = new THREE.Vector3(mouseX, mouseY, 0);\n      if (self.mouseStart.x < self.mouseEnd.x) {\n        var left = self.mouseStart;\n        var right = self.mouseEnd;\n      } else {\n        var left = self.mouseEnd;\n        var right = self.mouseStart;\n      }\n\n      self.graph.forEachNode(function(node) {\n        let npos;\n        if (self.options.layout == \"ngraph\") {\n          npos = self.force.getNodePosition(node.id);\n        } else if (self.options.layout == \"d3\") {\n          npos = node;\n        }\n        if (self.insideBox(left, right, npos.x, npos.y)) {\n          self.selection.push(node);\n          //indicates nodes were in selection box \n          //when mouse is lifted\n          //self.multNodesHighlighted = true;\n        }\n      });\n    }\n  };\n\n  /**\n   *  returns true if pos is in box with top left l and bottom right r\n   */\n  self.insideBox = function(l, r, posx, posy) {\n    return (\n      posx < r.x &&\n      posx > l.x &&\n      ((posy > r.y && posy < l.y) || (posy < r.y && posy > l.y))\n    );\n  };\n};","var Frame = require(\"./src/process\").Frame;\n\nexports.Frame = Frame;\n\nvar graph = require(\"ngraph.generators\").balancedBinTree(5);\n\nexports.graph = graph;\n\nif (window) {\n  window.Argo = exports;\n}\n","module.exports = __webpack_public_path__ + \"static/media/argologo.560a589f.png\";","import { Position, Toaster } from \"@blueprintjs/core\";\n\nexport const toaster = Toaster.create({\n  position: Position.TOP\n});\n\nexport default toaster;\n","var THREE = require(\"three\");\nvar STATS = require(\"stats.js\");\nwindow.THREE = THREE;\nrequire(\"../include/QuickHull\");\nrequire(\"../include/ConvexGeometry\");\nrequire(\"../include/CSS3DRenderer\");\nvar Edge = require(\"./structure/node\").Edge;\nvar Node = require(\"./structure/node\").Node;\nvar OrbitControls = require(\"../include/OrbitControls\")(THREE); //'three-orbit-controls')(THREE);\nTHREE.MeshLine = require(\"../include/THREE.MeshLine\").MeshLine;\nTHREE.MeshLineMaterial = require(\"../include/THREE.MeshLine\").MeshLineMaterial;\nvar d3 = require(\"d3\");\nvar ee = require(\"event-emitter\");\nvar IS_IFRAME_WIDGET = require(\"../../constants\").IS_IFRAME_WIDGET;\n\nexports.default = {\n  THREE: THREE,\n  STATS: STATS, // stats.js panel for showing fps and other stats.\n  STATS_SHOW: false,\n  Edge: Edge,\n  Node: Node,\n  OrbitControls: OrbitControls,\n  d3: d3,\n  ee: ee,\n  NODE_COLOR: 0x0055aa,\n  NODE_HIGHLIGHT: 0x3498db,\n  ADJACENT_HIGHLIGHT: 0x95a5a6,\n  SEARCH_HIGHLIGHT: 0xe67e22,\n  NODE_HTEXTURE: \"http://i.imgur.com/xzkxSIw.png\",\n  NODE_TEXTURE: \"http://i.imgur.com/reTXqiM.png\",\n  NODE_NO_HTEX: true,\n  NODE_NO_TEX: true,\n  NODE_NO_HCOLOR: false,\n  NODE_NO_COLOR: false,\n  NODE_NO_HIGHLIGHT: false,\n  NODE_NEIGHBOR_HIGHLIGHT: true,\n  NODE_SHAPE: \"square\",\n  NODE_HSHAPE: \"square\",\n  NODE_SIZE: 5,\n  HIGHLIGHT_SIZE: 1.0,\n  LAYOUT: \"d3\",\n  LINES: \"notfancy\",\n  MAP: !IS_IFRAME_WIDGET,\n  MAP_RENDER_PER_NUMBER_OF_FRAME: 10,\n  TEXT_SCALE: true,\n  TEXT_SIZE: 0.07,\n  TEXT_X_OFFSET: 0.52,\n  TEXT_Y_OFFSET: 0.35,\n  TEXT_BACK_COLOR: \"rgba(100, 100, 200, 0)\",\n  TEXT_OPACITY: \"1\",\n  TEXT_WIREFRAME: false,\n  PIN_COLOR: 0xffffff\n};\n","var def = require(\"./imports\").default;\nconst spawn = require(\"threads\").spawn;\nvar THREE = def.THREE;\nvar STATS = def.STATS;\nvar STATS_SHOW = def.STATS_SHOW;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nvar Frame = function(graph, options) {\n  // Needed to reference \"this\" in functions\n  var self = this;\n  appState.graph.process = this;\n  // Options\n  this.inGraph = graph;\n  this.options = options || {\n    layout: def.LAYOUT\n  };\n  this.layout_options = this.options.graphLayout || {};\n\n  this.lineObjects = [];\n  this.lineIndices = [];\n  this.MAX_LINES = 100000;\n  this.textureLoader = new THREE.TextureLoader();\n  this.textureLoader.crossOrigin = true;\n  this.oldIntersect = -1;\n  this.selection = [];\n  this.fov = 60;\n  this.near = 1;\n  this.far = 5000;\n  this.mouseStart = new THREE.Vector3(0, 0, 0);\n  this.mouseEnd = new THREE.Vector3(0, 0, 0);\n  this.dragging = null;\n  this.showBox = false;\n  this.renderWidth = 1000;\n  this.renderHeight = 1000;\n  this.maxZoom = 1000;\n  this.paused = false;\n  this.mouseDown = false;\n  this.ee = ee({});\n  this.layoutInit = true;\n  this.labelSize = 6;\n  this.relativeFontSize = 1;\n  this.mapShowing = def.MAP;\n  this.mapRenderPerNumberOfFrame = def.MAP_RENDER_PER_NUMBER_OF_FRAME;\n  this.darkMode = true;\n  this.lastNode = null;\n  this.rightClickedNode = null;\n  this.doHighlightNeighbors = def.NODE_NEIGHBOR_HIGHLIGHT;\n  this.prevHighlights = [];\n  this.hull = null;\n\n  require(\"./utils/utils\")(this);\n  require(\"./setup\")(this);\n  require(\"./addremove\")(this);\n  require(\"./highlighting\")(this);\n  require(\"./select\")(this);\n  require(\"./mouse\")(this);\n  require(\"./modify\")(this);\n  require(\"./draw\")(this);\n  require(\"./api\")(this);\n  require(\"./update\")(this);\n\n  /**\n   *  Starting point, run once to create scene\n   */\n  let stats = new STATS();\n  this.display = function() {\n    if (STATS_SHOW) {\n      stats.showPanel(0); // show fps panel\n      document.body.appendChild(stats.dom);\n    }\n    this.animate();\n  };\n\n  /**\n   *  Creates loop called on every animation frame\n   */\n  \n  let fps = 30;\n  // let now;\n  // let then = Date.now();\n  // let interval = 1000 / fps;\n  // let delta;\n  this.animate = function() {\n    if (STATS_SHOW) {\n      stats.begin(); // Begin stats.js panel timing\n    }\n    \n    self.controls.update();\n    self.render();\n\n    if (STATS_SHOW) {\n      stats.end(); // End stats.js panel timing\n    }\n    \n    // now = Date.now();\n    // delta = now - then;\n    // if (delta > interval) {\n    //   then = now;\n    //   self.controls.update();\n    //   self.render();\n    // }\n    requestAnimationFrame(self.animate);\n  };\n\n  /**\n   *  Set initial properties\n   */\n  this.init = function(aa = true) {\n    self.renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: aa,\n      preserveDrawingBuffer: true,\n    });\n    self.minimapRenderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: aa,\n      preserveDrawingBuffer: true,\n    });\n    //self.renderer.setPixelRatio(window.devicePixelRatio);\n    //self.renderer.setPixelRatio(0.1);\n    self.setDisplayParams();\n    self.setRendererParams();\n\n    self.setupCamera();\n    self.setupMinimap();\n    self.setupGeometry();\n    self.setupSelect();\n\n    // Make sure to clear children before setting up new frame.\n    self.element.innerHTML = \"\";\n    self.element.appendChild(self.renderer.domElement);\n    self.element.appendChild(self.cssRenderer.domElement);\n    self.element.appendChild(self.minimapRenderer.domElement);\n\n    self.setupLayout();\n\n    self.setupGraph();\n\n    window.addEventListener(\n      \"resize\",\n      function(e) {\n        e.preventDefault();\n        self.onWindowResize();\n      },\n      false\n    );\n  };\n\n  /**\n   * Change camera on window resize\n   */\n  self.onWindowResize = function() {\n    self.clientRect = self.element.getBoundingClientRect();\n    self.width = self.clientRect.width;\n    self.height = self.clientRect.height;\n    self.minimap.width = 0.2 * self.height;\n    self.minimap.height = 0.2 * self.height;\n    self.aspect = self.width / self.height;\n    self.ccamera.aspect = self.aspect;\n    self.ccamera.updateProjectionMatrix();\n\n    self.renderer.setSize(self.width, self.height);\n    self.cssRenderer.setSize(self.width, self.height);\n    self.minimapRenderer.setSize(0.2 * self.height, 0.2 * self.height);\n  };\n\n  /**\n   *  Draws graphics\n   */\n  var stage = 0;\n  var numberOfFrameSinceMiniMapRerender = 1;\n  this.render = function() {\n    self.updateCamera();\n    self.updateNodes();\n    if (stage == 1) {\n      self.updateLabels();\n      self.updateEdges();\n      stage = 0;\n    }\n    stage += 1;\n    numberOfFrameSinceMiniMapRerender += 1;\n    if (self.options.layout == \"d3\") {\n      if (self.layoutInit == true) {\n        var nodes = [];\n        self.graph.forEachNode(function(node) {\n          nodes.push(node);\n        });\n        self.force.nodes(nodes);\n        self.force.force(\"link\", d3.forceLink(self.lineIndices));\n        self.force.restart();\n        self.force.stop();\n        if (self.tickToStatic && !self.paused) {\n          // We don't tick and pause for now\n          for (\n            var i = 0,\n              n = Math.ceil(\n                Math.log(self.force.alphaMin()) /\n                  Math.log(1 - self.force.alphaDecay())\n              );\n            i < n;\n            ++i\n          ) {\n            self.force.tick();\n          }\n          //self.pauseLayout();\n        }\n        self.layoutInit = false;\n      }\n    }\n    self.renderer.setViewport(0, 0, self.width, self.height);\n    self.renderer.setScissor(0, 0, self.width, self.height);\n    self.renderer.setScissorTest(true);\n    self.renderer.render(self.scene, self.ccamera);\n    self.cssRenderer.render(self.scene, self.ccamera);\n\n    // Render MiniMap at a lower framerate.\n    if (numberOfFrameSinceMiniMapRerender >= this.mapRenderPerNumberOfFrame) {\n      numberOfFrameSinceMiniMapRerender = 0;\n\n      if (self.mapShowing) {\n        self.minimap.width = 0.2 * self.height;\n        self.minimap.height = 0.2 * self.height;\n        self.minimapRenderer.setViewport(0, 0, self.minimap.width, self.minimap.height);\n        self.minimapRenderer.setScissor(0, 0, self.minimap.width, self.minimap.height);\n        self.minimapRenderer.setScissorTest(true);\n        self.minimapRenderer.render(self.scene, self.minimap.camera);\n      }\n    }\n  };\n};\n\nexports.Frame = Frame;\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\n *\n */\n\n(function() {\n  var Visible = 0;\n  var Deleted = 1;\n\n  function QuickHull() {\n    this.tolerance = -1;\n\n    this.faces = []; // the generated faces of the convex hull\n    this.newFaces = []; // this array holds the faces that are generated within a single iteration\n\n    // the vertex lists work as follows:\n    //\n    // let 'a' and 'b' be 'Face' instances\n    // let 'v' be points wrapped as instance of 'Vertex'\n    //\n    //     [v, v, ..., v, v, v, ...]\n    //      ^             ^\n    //      |             |\n    //  a.outside     b.outside\n    //\n    this.assigned = new VertexList();\n    this.unassigned = new VertexList();\n\n    this.vertices = []; // vertices of the hull (internal representation of given geometry data)\n  }\n\n  Object.assign(QuickHull.prototype, {\n    setFromPoints: function(points) {\n      if (Array.isArray(points) !== true) {\n        console.error(\"THREE.QuickHull: Points parameter is not an array.\");\n      }\n\n      if (points.length < 4) {\n        console.error(\n          \"THREE.QuickHull: The algorithm needs at least four points.\"\n        );\n      }\n\n      this.makeEmpty();\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        this.vertices.push(new VertexNode(points[i]));\n      }\n\n      this.compute();\n\n      return this;\n    },\n\n    setFromObject: function(object) {\n      var points = [];\n\n      object.updateMatrixWorld(true);\n\n      object.traverse(function(node) {\n        var i, l, point;\n\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry.isGeometry) {\n            var vertices = geometry.vertices;\n\n            for (i = 0, l = vertices.length; i < l; i++) {\n              point = vertices[i].clone();\n              point.applyMatrix4(node.matrixWorld);\n\n              points.push(point);\n            }\n          } else if (geometry.isBufferGeometry) {\n            var attribute = geometry.attributes.position;\n\n            if (attribute !== undefined) {\n              for (i = 0, l = attribute.count; i < l; i++) {\n                point = new THREE.Vector3();\n\n                point\n                  .fromBufferAttribute(attribute, i)\n                  .applyMatrix4(node.matrixWorld);\n\n                points.push(point);\n              }\n            }\n          }\n        }\n      });\n\n      return this.setFromPoints(points);\n    },\n\n    makeEmpty: function() {\n      this.faces = [];\n      this.vertices = [];\n\n      return this;\n    },\n\n    // Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\n\n    addVertexToFace: function(vertex, face) {\n      vertex.face = face;\n\n      if (face.outside === null) {\n        this.assigned.append(vertex);\n      } else {\n        this.assigned.insertBefore(face.outside, vertex);\n      }\n\n      face.outside = vertex;\n\n      return this;\n    },\n\n    // Removes a vertex from the 'assigned' list of vertices and from the given face\n\n    removeVertexFromFace: function(vertex, face) {\n      if (vertex === face.outside) {\n        // fix face.outside link\n\n        if (vertex.next !== null && vertex.next.face === face) {\n          // face has at least 2 outside vertices, move the 'outside' reference\n\n          face.outside = vertex.next;\n        } else {\n          // vertex was the only outside vertex that face had\n\n          face.outside = null;\n        }\n      }\n\n      this.assigned.remove(vertex);\n\n      return this;\n    },\n\n    // Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list\n\n    removeAllVerticesFromFace: function(face) {\n      if (face.outside !== null) {\n        // reference to the first and last vertex of this face\n\n        var start = face.outside;\n        var end = face.outside;\n\n        while (end.next !== null && end.next.face === face) {\n          end = end.next;\n        }\n\n        this.assigned.removeSubList(start, end);\n\n        // fix references\n\n        start.prev = end.next = null;\n        face.outside = null;\n\n        return start;\n      }\n    },\n\n    // Removes all the visible vertices that 'face' is able to see\n\n    deleteFaceVertices: function(face, absorbingFace) {\n      var faceVertices = this.removeAllVerticesFromFace(face);\n\n      if (faceVertices !== undefined) {\n        if (absorbingFace === undefined) {\n          // mark the vertices to be reassigned to some other face\n\n          this.unassigned.appendChain(faceVertices);\n        } else {\n          // if there's an absorbing face try to assign as many vertices as possible to it\n\n          var vertex = faceVertices;\n\n          do {\n            // we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\n            // will be changed by upcoming method calls\n\n            var nextVertex = vertex.next;\n\n            var distance = absorbingFace.distanceToPoint(vertex.point);\n\n            // check if 'vertex' is able to see 'absorbingFace'\n\n            if (distance > this.tolerance) {\n              this.addVertexToFace(vertex, absorbingFace);\n            } else {\n              this.unassigned.append(vertex);\n            }\n\n            // now assign next vertex\n\n            vertex = nextVertex;\n          } while (vertex !== null);\n        }\n      }\n\n      return this;\n    },\n\n    // Reassigns as many vertices as possible from the unassigned list to the new faces\n\n    resolveUnassignedPoints: function(newFaces) {\n      if (this.unassigned.isEmpty() === false) {\n        var vertex = this.unassigned.first();\n\n        do {\n          // buffer 'next' reference, see .deleteFaceVertices()\n\n          var nextVertex = vertex.next;\n\n          var maxDistance = this.tolerance;\n\n          var maxFace = null;\n\n          for (var i = 0; i < newFaces.length; i++) {\n            var face = newFaces[i];\n\n            if (face.mark === Visible) {\n              var distance = face.distanceToPoint(vertex.point);\n\n              if (distance > maxDistance) {\n                maxDistance = distance;\n                maxFace = face;\n              }\n\n              if (maxDistance > 1000 * this.tolerance) break;\n            }\n          }\n\n          // 'maxFace' can be null e.g. if there are identical vertices\n\n          if (maxFace !== null) {\n            this.addVertexToFace(vertex, maxFace);\n          }\n\n          vertex = nextVertex;\n        } while (vertex !== null);\n      }\n\n      return this;\n    },\n\n    // Computes the extremes of a simplex which will be the initial hull\n\n    computeExtremes: function() {\n      var min = new THREE.Vector3();\n      var max = new THREE.Vector3();\n\n      var minVertices = [];\n      var maxVertices = [];\n\n      var i, l, j;\n\n      // initially assume that the first vertex is the min/max\n\n      for (i = 0; i < 3; i++) {\n        minVertices[i] = maxVertices[i] = this.vertices[0];\n      }\n\n      min.copy(this.vertices[0].point);\n      max.copy(this.vertices[0].point);\n\n      // compute the min/max vertex on all six directions\n\n      for (i = 0, l = this.vertices.length; i < l; i++) {\n        var vertex = this.vertices[i];\n        var point = vertex.point;\n\n        // update the min coordinates\n\n        for (j = 0; j < 3; j++) {\n          if (point.getComponent(j) < min.getComponent(j)) {\n            min.setComponent(j, point.getComponent(j));\n            minVertices[j] = vertex;\n          }\n        }\n\n        // update the max coordinates\n\n        for (j = 0; j < 3; j++) {\n          if (point.getComponent(j) > max.getComponent(j)) {\n            max.setComponent(j, point.getComponent(j));\n            maxVertices[j] = vertex;\n          }\n        }\n      }\n\n      // use min/max vectors to compute an optimal epsilon\n\n      this.tolerance =\n        3 *\n        Number.EPSILON *\n        (Math.max(Math.abs(min.x), Math.abs(max.x)) +\n          Math.max(Math.abs(min.y), Math.abs(max.y)) +\n          Math.max(Math.abs(min.z), Math.abs(max.z)));\n\n      return { min: minVertices, max: maxVertices };\n    },\n\n    // Computes the initial simplex assigning to its faces all the points\n    // that are candidates to form part of the hull\n\n    computeInitialHull: (function() {\n      var line3, plane, closestPoint;\n\n      return function computeInitialHull() {\n        if (line3 === undefined) {\n          line3 = new THREE.Line3();\n          plane = new THREE.Plane();\n          closestPoint = new THREE.Vector3();\n        }\n\n        var vertex,\n          vertices = this.vertices;\n        var extremes = this.computeExtremes();\n        var min = extremes.min;\n        var max = extremes.max;\n\n        var v0, v1, v2, v3;\n        var i, l, j;\n\n        // 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\n        // (max.x - min.x)\n        // (max.y - min.y)\n        // (max.z - min.z)\n\n        var distance,\n          maxDistance = 0;\n        var index = 0;\n\n        for (i = 0; i < 3; i++) {\n          distance =\n            max[i].point.getComponent(i) - min[i].point.getComponent(i);\n\n          if (distance > maxDistance) {\n            maxDistance = distance;\n            index = i;\n          }\n        }\n\n        v0 = min[index];\n        v1 = max[index];\n\n        // 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\n\n        maxDistance = 0;\n        line3.set(v0.point, v1.point);\n\n        for (i = 0, l = this.vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (vertex !== v0 && vertex !== v1) {\n            line3.closestPointToPoint(vertex.point, true, closestPoint);\n\n            distance = closestPoint.distanceToSquared(vertex.point);\n\n            if (distance > maxDistance) {\n              maxDistance = distance;\n              v2 = vertex;\n            }\n          }\n        }\n\n        // 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\n\n        maxDistance = 0;\n        plane.setFromCoplanarPoints(v0.point, v1.point, v2.point);\n\n        for (i = 0, l = this.vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (vertex !== v0 && vertex !== v1 && vertex !== v2) {\n            distance = Math.abs(plane.distanceToPoint(vertex.point));\n\n            if (distance > maxDistance) {\n              maxDistance = distance;\n              v3 = vertex;\n            }\n          }\n        }\n\n        var faces = [];\n\n        if (plane.distanceToPoint(v3.point) < 0) {\n          // the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\n\n          faces.push(\n            Face.create(v0, v1, v2),\n            Face.create(v3, v1, v0),\n            Face.create(v3, v2, v1),\n            Face.create(v3, v0, v2)\n          );\n\n          // set the twin edge\n\n          for (i = 0; i < 3; i++) {\n            j = (i + 1) % 3;\n\n            // join face[ i ] i > 0, with the first face\n\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge(j));\n\n            // join face[ i ] with face[ i + 1 ], 1 <= i <= 3\n\n            faces[i + 1].getEdge(1).setTwin(faces[j + 1].getEdge(0));\n          }\n        } else {\n          // the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\n\n          faces.push(\n            Face.create(v0, v2, v1),\n            Face.create(v3, v0, v1),\n            Face.create(v3, v1, v2),\n            Face.create(v3, v2, v0)\n          );\n\n          // set the twin edge\n\n          for (i = 0; i < 3; i++) {\n            j = (i + 1) % 3;\n\n            // join face[ i ] i > 0, with the first face\n\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge((3 - i) % 3));\n\n            // join face[ i ] with face[ i + 1 ]\n\n            faces[i + 1].getEdge(0).setTwin(faces[j + 1].getEdge(1));\n          }\n        }\n\n        // the initial hull is the tetrahedron\n\n        for (i = 0; i < 4; i++) {\n          this.faces.push(faces[i]);\n        }\n\n        // initial assignment of vertices to the faces of the tetrahedron\n\n        for (i = 0, l = vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (\n            vertex !== v0 &&\n            vertex !== v1 &&\n            vertex !== v2 &&\n            vertex !== v3\n          ) {\n            maxDistance = this.tolerance;\n            var maxFace = null;\n\n            for (j = 0; j < 4; j++) {\n              distance = this.faces[j].distanceToPoint(vertex.point);\n\n              if (distance > maxDistance) {\n                maxDistance = distance;\n                maxFace = this.faces[j];\n              }\n            }\n\n            if (maxFace !== null) {\n              this.addVertexToFace(vertex, maxFace);\n            }\n          }\n        }\n\n        return this;\n      };\n    })(),\n\n    // Removes inactive faces\n\n    reindexFaces: function() {\n      var activeFaces = [];\n\n      for (var i = 0; i < this.faces.length; i++) {\n        var face = this.faces[i];\n\n        if (face.mark === Visible) {\n          activeFaces.push(face);\n        }\n      }\n\n      this.faces = activeFaces;\n\n      return this;\n    },\n\n    // Finds the next vertex to create faces with the current hull\n\n    nextVertexToAdd: function() {\n      // if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\n\n      if (this.assigned.isEmpty() === false) {\n        var eyeVertex,\n          maxDistance = 0;\n\n        // grap the first available face and start with the first visible vertex of that face\n\n        var eyeFace = this.assigned.first().face;\n        var vertex = eyeFace.outside;\n\n        // now calculate the farthest vertex that face can see\n\n        do {\n          var distance = eyeFace.distanceToPoint(vertex.point);\n\n          if (distance > maxDistance) {\n            maxDistance = distance;\n            eyeVertex = vertex;\n          }\n\n          vertex = vertex.next;\n        } while (vertex !== null && vertex.face === eyeFace);\n\n        return eyeVertex;\n      }\n    },\n\n    // Computes a chain of half edges in CCW order called the 'horizon'.\n    // For an edge to be part of the horizon it must join a face that can see\n    // 'eyePoint' and a face that cannot see 'eyePoint'.\n\n    computeHorizon: function(eyePoint, crossEdge, face, horizon) {\n      // moves face's vertices to the 'unassigned' vertex list\n\n      this.deleteFaceVertices(face);\n\n      face.mark = Deleted;\n\n      var edge;\n\n      if (crossEdge === null) {\n        edge = crossEdge = face.getEdge(0);\n      } else {\n        // start from the next edge since 'crossEdge' was already analyzed\n        // (actually 'crossEdge.twin' was the edge who called this method recursively)\n\n        edge = crossEdge.next;\n      }\n\n      do {\n        var twinEdge = edge.twin;\n        var oppositeFace = twinEdge.face;\n\n        if (oppositeFace.mark === Visible) {\n          if (oppositeFace.distanceToPoint(eyePoint) > this.tolerance) {\n            // the opposite face can see the vertex, so proceed with next edge\n\n            this.computeHorizon(eyePoint, twinEdge, oppositeFace, horizon);\n          } else {\n            // the opposite face can't see the vertex, so this edge is part of the horizon\n\n            horizon.push(edge);\n          }\n        }\n\n        edge = edge.next;\n      } while (edge !== crossEdge);\n\n      return this;\n    },\n\n    // Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\n\n    addAdjoiningFace: function(eyeVertex, horizonEdge) {\n      // all the half edges are created in ccw order thus the face is always pointing outside the hull\n\n      var face = Face.create(eyeVertex, horizonEdge.tail(), horizonEdge.head());\n\n      this.faces.push(face);\n\n      // join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\n\n      face.getEdge(-1).setTwin(horizonEdge.twin);\n\n      return face.getEdge(0); // the half edge whose vertex is the eyeVertex\n    },\n\n    //  Adds 'horizon.length' faces to the hull, each face will be linked with the\n    //  horizon opposite face and the face on the left/right\n\n    addNewFaces: function(eyeVertex, horizon) {\n      this.newFaces = [];\n\n      var firstSideEdge = null;\n      var previousSideEdge = null;\n\n      for (var i = 0; i < horizon.length; i++) {\n        var horizonEdge = horizon[i];\n\n        // returns the right side edge\n\n        var sideEdge = this.addAdjoiningFace(eyeVertex, horizonEdge);\n\n        if (firstSideEdge === null) {\n          firstSideEdge = sideEdge;\n        } else {\n          // joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\n\n          sideEdge.next.setTwin(previousSideEdge);\n        }\n\n        this.newFaces.push(sideEdge.face);\n        previousSideEdge = sideEdge;\n      }\n\n      // perform final join of new faces\n\n      firstSideEdge.next.setTwin(previousSideEdge);\n\n      return this;\n    },\n\n    // Adds a vertex to the hull\n\n    addVertexToHull: function(eyeVertex) {\n      var horizon = [];\n      var i, face;\n\n      this.unassigned.clear();\n\n      // remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\n\n      this.removeVertexFromFace(eyeVertex, eyeVertex.face);\n\n      this.computeHorizon(eyeVertex.point, null, eyeVertex.face, horizon);\n\n      this.addNewFaces(eyeVertex, horizon);\n\n      // reassign 'unassigned' vertices to the new faces\n\n      this.resolveUnassignedPoints(this.newFaces);\n\n      return this;\n    },\n\n    cleanup: function() {\n      this.assigned.clear();\n      this.unassigned.clear();\n      this.newFaces = [];\n\n      return this;\n    },\n\n    compute: function() {\n      var vertex;\n\n      this.computeInitialHull();\n\n      // add all available vertices gradually to the hull\n\n      while ((vertex = this.nextVertexToAdd()) !== undefined) {\n        this.addVertexToHull(vertex);\n      }\n\n      this.reindexFaces();\n\n      this.cleanup();\n\n      return this;\n    }\n  });\n\n  //\n\n  function Face() {\n    this.normal = new THREE.Vector3();\n    this.midpoint = new THREE.Vector3();\n    this.area = 0;\n\n    this.constant = 0; // signed distance from face to the origin\n    this.outside = null; // reference to a vertex in a vertex list this face can see\n    this.mark = Visible;\n    this.edge = null;\n  }\n\n  Object.assign(Face, {\n    create: function(a, b, c) {\n      var face = new Face();\n\n      var e0 = new HalfEdge(a, face);\n      var e1 = new HalfEdge(b, face);\n      var e2 = new HalfEdge(c, face);\n\n      // join edges\n\n      e0.next = e2.prev = e1;\n      e1.next = e0.prev = e2;\n      e2.next = e1.prev = e0;\n\n      // main half edge reference\n\n      face.edge = e0;\n\n      return face.compute();\n    }\n  });\n\n  Object.assign(Face.prototype, {\n    getEdge: function(i) {\n      var edge = this.edge;\n\n      while (i > 0) {\n        edge = edge.next;\n        i--;\n      }\n\n      while (i < 0) {\n        edge = edge.prev;\n        i++;\n      }\n\n      return edge;\n    },\n\n    compute: (function() {\n      var triangle;\n\n      return function compute() {\n        if (triangle === undefined) triangle = new THREE.Triangle();\n\n        var a = this.edge.tail();\n        var b = this.edge.head();\n        var c = this.edge.next.head();\n\n        triangle.set(a.point, b.point, c.point);\n\n        triangle.normal(this.normal);\n        triangle.midpoint(this.midpoint);\n        this.area = triangle.area();\n\n        this.constant = this.normal.dot(this.midpoint);\n\n        return this;\n      };\n    })(),\n\n    distanceToPoint: function(point) {\n      return this.normal.dot(point) - this.constant;\n    }\n  });\n\n  // Entity for a Doubly-Connected Edge List (DCEL).\n\n  function HalfEdge(vertex, face) {\n    this.vertex = vertex;\n    this.prev = null;\n    this.next = null;\n    this.twin = null;\n    this.face = face;\n  }\n\n  Object.assign(HalfEdge.prototype, {\n    head: function() {\n      return this.vertex;\n    },\n\n    tail: function() {\n      return this.prev ? this.prev.vertex : null;\n    },\n\n    length: function() {\n      var head = this.head();\n      var tail = this.tail();\n\n      if (tail !== null) {\n        return tail.point.distanceTo(head.point);\n      }\n\n      return -1;\n    },\n\n    lengthSquared: function() {\n      var head = this.head();\n      var tail = this.tail();\n\n      if (tail !== null) {\n        return tail.point.distanceToSquared(head.point);\n      }\n\n      return -1;\n    },\n\n    setTwin: function(edge) {\n      this.twin = edge;\n      edge.twin = this;\n\n      return this;\n    }\n  });\n\n  // A vertex as a double linked list node.\n\n  function VertexNode(point) {\n    this.point = point;\n    this.prev = null;\n    this.next = null;\n    this.face = null; // the face that is able to see this vertex\n  }\n\n  // A double linked list that contains vertex nodes.\n\n  function VertexList() {\n    this.head = null;\n    this.tail = null;\n  }\n\n  Object.assign(VertexList.prototype, {\n    first: function() {\n      return this.head;\n    },\n\n    last: function() {\n      return this.tail;\n    },\n\n    clear: function() {\n      this.head = this.tail = null;\n\n      return this;\n    },\n\n    // Inserts a vertex before the target vertex\n\n    insertBefore: function(target, vertex) {\n      vertex.prev = target.prev;\n      vertex.next = target;\n\n      if (vertex.prev === null) {\n        this.head = vertex;\n      } else {\n        vertex.prev.next = vertex;\n      }\n\n      target.prev = vertex;\n\n      return this;\n    },\n\n    // Inserts a vertex after the target vertex\n\n    insertAfter: function(target, vertex) {\n      vertex.prev = target;\n      vertex.next = target.next;\n\n      if (vertex.next === null) {\n        this.tail = vertex;\n      } else {\n        vertex.next.prev = vertex;\n      }\n\n      target.next = vertex;\n\n      return this;\n    },\n\n    // Appends a vertex to the end of the linked list\n\n    append: function(vertex) {\n      if (this.head === null) {\n        this.head = vertex;\n      } else {\n        this.tail.next = vertex;\n      }\n\n      vertex.prev = this.tail;\n      vertex.next = null; // the tail has no subsequent vertex\n\n      this.tail = vertex;\n\n      return this;\n    },\n\n    // Appends a chain of vertices where 'vertex' is the head.\n\n    appendChain: function(vertex) {\n      if (this.head === null) {\n        this.head = vertex;\n      } else {\n        this.tail.next = vertex;\n      }\n\n      vertex.prev = this.tail;\n\n      // ensure that the 'tail' reference points to the last vertex of the chain\n\n      while (vertex.next !== null) {\n        vertex = vertex.next;\n      }\n\n      this.tail = vertex;\n\n      return this;\n    },\n\n    // Removes a vertex from the linked list\n\n    remove: function(vertex) {\n      if (vertex.prev === null) {\n        this.head = vertex.next;\n      } else {\n        vertex.prev.next = vertex.next;\n      }\n\n      if (vertex.next === null) {\n        this.tail = vertex.prev;\n      } else {\n        vertex.next.prev = vertex.prev;\n      }\n\n      return this;\n    },\n\n    // Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\n\n    removeSubList: function(a, b) {\n      if (a.prev === null) {\n        this.head = b.next;\n      } else {\n        a.prev.next = b.next;\n      }\n\n      if (b.next === null) {\n        this.tail = a.prev;\n      } else {\n        b.next.prev = a.prev;\n      }\n\n      return this;\n    },\n\n    isEmpty: function() {\n      return this.head === null;\n    }\n  });\n\n  // export\n\n  THREE.QuickHull = QuickHull;\n})();\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n(function() {\n  // ConvexGeometry\n\n  function ConvexGeometry(points) {\n    THREE.Geometry.call(this);\n\n    this.type = \"ConvexGeometry\";\n\n    this.fromBufferGeometry(new ConvexBufferGeometry(points));\n    this.mergeVertices();\n  }\n\n  ConvexGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  ConvexGeometry.prototype.constructor = ConvexGeometry;\n\n  // ConvexBufferGeometry\n\n  function ConvexBufferGeometry(points) {\n    THREE.BufferGeometry.call(this);\n\n    this.type = \"ConvexBufferGeometry\";\n\n    // buffers\n\n    var vertices = [];\n    var normals = [];\n\n    // execute QuickHull\n\n    if (THREE.QuickHull === undefined) {\n      console.error(\n        \"THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on THREE.QuickHull\"\n      );\n    }\n\n    var quickHull = new THREE.QuickHull().setFromPoints(points);\n\n    // generate vertices and normals\n\n    var faces = quickHull.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      var edge = face.edge;\n\n      // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\n\n      do {\n        var point = edge.head().point;\n\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n\n        edge = edge.next;\n      } while (edge !== face.edge);\n    }\n\n    // build geometry\n\n    this.addAttribute(\n      \"position\",\n      new THREE.Float32BufferAttribute(vertices, 3)\n    );\n    this.addAttribute(\"normal\", new THREE.Float32BufferAttribute(normals, 3));\n  }\n\n  ConvexBufferGeometry.prototype = Object.create(\n    THREE.BufferGeometry.prototype\n  );\n  ConvexBufferGeometry.prototype.constructor = ConvexBufferGeometry;\n\n  // export\n\n  THREE.ConvexGeometry = ConvexGeometry;\n  THREE.ConvexBufferGeometry = ConvexBufferGeometry;\n})();\n","/**\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar THREE = require(\"three\");\n\nTHREE.CSS3DObject = function(element) {\n  THREE.Object3D.call(this);\n\n  this.element = element;\n  this.element.style.position = \"absolute\";\n\n  this.addEventListener(\"removed\", function() {\n    if (this.element.parentNode !== null) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  });\n};\n\nTHREE.CSS3DObject.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.CSS3DObject.prototype.constructor = THREE.CSS3DObject;\n\nTHREE.CSS3DSprite = function(element) {\n  THREE.CSS3DObject.call(this, element);\n};\n\nTHREE.CSS3DSprite.prototype = Object.create(THREE.CSS3DObject.prototype);\nTHREE.CSS3DSprite.prototype.constructor = THREE.CSS3DSprite;\n\n//\n\nTHREE.CSS3DRenderer = function() {\n  console.log(\"THREE.CSS3DRenderer\", THREE.REVISION);\n\n  var _width, _height;\n\n  var matrix = new THREE.Matrix4();\n\n  var cache = {\n    camera: { fov: 0, style: \"\" },\n    objects: {}\n  };\n\n  var domElement = document.createElement(\"div\");\n  domElement.style.overflow = \"hidden\";\n\n  domElement.style.WebkitTransformStyle = \"preserve-3d\";\n  domElement.style.MozTransformStyle = \"preserve-3d\";\n  domElement.style.oTransformStyle = \"preserve-3d\";\n  domElement.style.transformStyle = \"preserve-3d\";\n\n  this.domElement = domElement;\n\n  var cameraElement = document.createElement(\"div\");\n\n  cameraElement.style.position = \"absolute\";\n  cameraElement.style.left = \"50%\";\n  cameraElement.style.top = \"50%\";\n\n  cameraElement.style.WebkitTransformStyle = \"preserve-3d\";\n  cameraElement.style.MozTransformStyle = \"preserve-3d\";\n  cameraElement.style.oTransformStyle = \"preserve-3d\";\n  cameraElement.style.transformStyle = \"preserve-3d\";\n\n  domElement.appendChild(cameraElement);\n\n  this.setClearColor = function() {};\n\n  // Added by Argo-lite, for optimization\n  this.isPaused = false;\n\n  this.getSize = function() {\n    return {\n      width: _width,\n      height: _height\n    };\n  };\n\n  this.setSize = function(width, height) {\n    _width = width;\n    _height = height;\n\n    domElement.style.width = width + \"px\";\n    domElement.style.height = height + \"px\";\n  };\n\n  function epsilon(value) {\n    return Math.abs(value) < Number.EPSILON ? 0 : value;\n  }\n\n  function getCameraCSSMatrix(matrix) {\n    var elements = matrix.elements;\n\n    return (\n      \"matrix3d(\" +\n      epsilon(elements[0]) +\n      \",\" +\n      epsilon(-elements[1]) +\n      \",\" +\n      epsilon(elements[2]) +\n      \",\" +\n      epsilon(elements[3]) +\n      \",\" +\n      epsilon(elements[4]) +\n      \",\" +\n      epsilon(-elements[5]) +\n      \",\" +\n      epsilon(elements[6]) +\n      \",\" +\n      epsilon(elements[7]) +\n      \",\" +\n      epsilon(elements[8]) +\n      \",\" +\n      epsilon(-elements[9]) +\n      \",\" +\n      epsilon(elements[10]) +\n      \",\" +\n      epsilon(elements[11]) +\n      \",\" +\n      epsilon(elements[12]) +\n      \",\" +\n      epsilon(-elements[13]) +\n      \",\" +\n      epsilon(elements[14]) +\n      \",\" +\n      epsilon(elements[15]) +\n      \")\"\n    );\n  }\n\n  function getObjectCSSMatrix(matrix) {\n    var elements = matrix.elements;\n\n    return (\n      \"translate3d(-50%,-50%,0) matrix3d(\" +\n      epsilon(elements[0]) +\n      \",\" +\n      epsilon(elements[1]) +\n      \",\" +\n      epsilon(elements[2]) +\n      \",\" +\n      epsilon(elements[3]) +\n      \",\" +\n      epsilon(-elements[4]) +\n      \",\" +\n      epsilon(-elements[5]) +\n      \",\" +\n      epsilon(-elements[6]) +\n      \",\" +\n      epsilon(-elements[7]) +\n      \",\" +\n      epsilon(elements[8]) +\n      \",\" +\n      epsilon(elements[9]) +\n      \",\" +\n      epsilon(elements[10]) +\n      \",\" +\n      epsilon(elements[11]) +\n      \",\" +\n      epsilon(elements[12]) +\n      \",\" +\n      epsilon(elements[13]) +\n      \",\" +\n      epsilon(elements[14]) +\n      \",\" +\n      epsilon(elements[15]) +\n      \")\"\n    );\n  }\n\n  function renderObject(object, camera) {\n    if (object instanceof THREE.CSS3DObject) {\n      var style;\n\n      if (object instanceof THREE.CSS3DSprite) {\n        // http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\n\n        matrix.copy(camera.matrixWorldInverse);\n        matrix.transpose();\n        matrix.copyPosition(object.matrixWorld);\n        matrix.scale(object.scale);\n\n        matrix.elements[3] = 0;\n        matrix.elements[7] = 0;\n        matrix.elements[11] = 0;\n        matrix.elements[15] = 1;\n\n        style = getObjectCSSMatrix(matrix);\n      } else {\n        style = getObjectCSSMatrix(object.matrixWorld);\n      }\n\n      var element = object.element;\n      var cachedStyle = cache.objects[object.id];\n\n      if (cachedStyle === undefined || cachedStyle !== style) {\n        element.style.WebkitTransform = style;\n        element.style.MozTransform = style;\n        element.style.oTransform = style;\n        element.style.transform = style;\n\n        cache.objects[object.id] = style;\n      }\n\n      if (element.parentNode !== cameraElement) {\n        cameraElement.appendChild(element);\n      }\n    }\n\n    for (var i = 0, l = object.children.length; i < l; i++) {\n      renderObject(object.children[i], camera);\n    }\n  }\n\n  this.render = function(scene, camera) {\n    if (this.isPaused) {\n      return;\n    }\n    var fov =\n      (0.5 / Math.tan(THREE.Math.degToRad(camera.getEffectiveFOV() * 0.5))) *\n      _height;\n\n    if (cache.camera.fov !== fov) {\n      domElement.style.WebkitPerspective = fov + \"px\";\n      domElement.style.MozPerspective = fov + \"px\";\n      domElement.style.oPerspective = fov + \"px\";\n      domElement.style.perspective = fov + \"px\";\n\n      cache.camera.fov = fov;\n    }\n\n    scene.updateMatrixWorld();\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n    var style =\n      \"translateZ(\" +\n      fov +\n      \"px)\" +\n      getCameraCSSMatrix(camera.matrixWorldInverse);\n\n    if (cache.camera.style !== style) {\n      cameraElement.style.WebkitTransform = style;\n      cameraElement.style.MozTransform = style;\n      cameraElement.style.oTransform = style;\n      cameraElement.style.transform = style;\n\n      cache.camera.style = style;\n    }\n\n    renderObject(scene, camera);\n  };\n};\n","module.exports = function(THREE) {\n  /**\n   * @author qiao / https://github.com/qiao\n   * @author mrdoob / http://mrdoob.com\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author erich666 / http://erichaines.com\n   */\n\n  // This set of controls performs orbiting, dollying (zooming), and panning.\n  // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n  //\n  //    Orbit - left mouse / touch: one finger move\n  //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n  //    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n  function OrbitControls(object, domElement) {\n    this.object = object;\n\n    this.domElement = domElement !== undefined ? domElement : document;\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new THREE.Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.25;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n    // Set to false to disable use of the keys\n    this.enableKeys = true;\n\n    // The four arrow keys\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40, SPACE: 32 };\n\n    // Mouse buttons\n    this.mouseButtons = {\n      ORBIT: THREE.MOUSE.LEFT,\n      ZOOM: THREE.MOUSE.MIDDLE,\n      PAN: THREE.MOUSE.RIGHT\n    };\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    // for space panning\n    this.spacePan = false;\n    this.bothPan = false;\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function() {\n      return spherical.phi;\n    };\n\n    this.getAzimuthalAngle = function() {\n      return spherical.theta;\n    };\n\n    this.reset = function() {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n\n      scope.update();\n\n      state = STATE.NONE;\n    };\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = (function() {\n      var offset = new THREE.Vector3();\n\n      // so camera.up is the orbit axis\n      var quat = new THREE.Quaternion().setFromUnitVectors(\n        object.up,\n        new THREE.Vector3(0, 1, 0)\n      );\n      var quatInverse = quat.clone().inverse();\n\n      var lastPosition = new THREE.Vector3();\n      var lastQuaternion = new THREE.Quaternion();\n\n      return function update() {\n        var position = scope.object.position;\n\n        offset.copy(position).sub(scope.target);\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat);\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n\n        // restrict theta to be between desired limits\n        spherical.theta = Math.max(\n          scope.minAzimuthAngle,\n          Math.min(scope.maxAzimuthAngle, spherical.theta)\n        );\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(\n          scope.minPolarAngle,\n          Math.min(scope.maxPolarAngle, spherical.phi)\n        );\n\n        spherical.makeSafe();\n\n        spherical.radius *= scale;\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(\n          scope.minDistance,\n          Math.min(scope.maxDistance, spherical.radius)\n        );\n\n        // move target to panned location\n        scope.target.add(panOffset);\n\n        offset.setFromSpherical(spherical);\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse);\n\n        position.copy(scope.target).add(offset);\n\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n        } else {\n          sphericalDelta.set(0, 0, 0);\n        }\n\n        scale = 1;\n        panOffset.set(0, 0, 0);\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          scope.dispatchEvent(changeEvent);\n\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n\n          return true;\n        }\n\n        return false;\n      };\n    })();\n\n    this.dispose = function() {\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu, false);\n      scope.domElement.removeEventListener(\"mousedown\", onMouseDown, false);\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel, false);\n\n      scope.domElement.removeEventListener(\"touchstart\", onTouchStart, false);\n      scope.domElement.removeEventListener(\"touchend\", onTouchEnd, false);\n      scope.domElement.removeEventListener(\"touchmove\", onTouchMove, false);\n\n      document.removeEventListener(\"mousemove\", onMouseMove, false);\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n      window.removeEventListener(\"keydown\", onKeyDown, false);\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n\n    //\n    // internals\n    //\n\n    var scope = this;\n\n    var changeEvent = { type: \"change\" };\n    var startEvent = { type: \"start\" };\n    var endEvent = { type: \"end\" };\n\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_DOLLY: 4,\n      TOUCH_PAN: 5\n    };\n\n    var state = STATE.NONE;\n\n    var EPS = 0.000001;\n\n    // current position in spherical coordinates\n    var spherical = new THREE.Spherical();\n    var sphericalDelta = new THREE.Spherical();\n\n    var scale = 1;\n    var panOffset = new THREE.Vector3();\n    var zoomChanged = false;\n\n    var rotateStart = new THREE.Vector2();\n    var rotateEnd = new THREE.Vector2();\n    var rotateDelta = new THREE.Vector2();\n\n    var panStart = new THREE.Vector2();\n    var panEnd = new THREE.Vector2();\n    var panDelta = new THREE.Vector2();\n\n    var dollyStart = new THREE.Vector2();\n    var dollyEnd = new THREE.Vector2();\n    var dollyDelta = new THREE.Vector2();\n\n    function getAutoRotationAngle() {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = (function() {\n      var v = new THREE.Vector3();\n\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        v.multiplyScalar(-distance);\n\n        panOffset.add(v);\n      };\n    })();\n\n    var panUp = (function() {\n      var v = new THREE.Vector3();\n\n      return function panUp(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n        v.multiplyScalar(distance);\n\n        panOffset.add(v);\n      };\n    })();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    var pan = (function() {\n      var offset = new THREE.Vector3();\n\n      return function pan(deltaX, deltaY) {\n        var element =\n          scope.domElement === document\n            ? scope.domElement.body\n            : scope.domElement;\n\n        if (scope.object instanceof THREE.PerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length();\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(\n            ((scope.object.fov / 2) * Math.PI) / 180.0\n          );\n\n          // we actually don't use screenWidth, since perspective camera is fixed to screen height\n          panLeft(\n            (2 * deltaX * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          );\n          panUp(\n            (2 * deltaY * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          );\n        } else if (scope.object instanceof THREE.OrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) /\n              scope.object.zoom /\n              element.clientWidth,\n            scope.object.matrix\n          );\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) /\n              scope.object.zoom /\n              element.clientHeight,\n            scope.object.matrix\n          );\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn(\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n          );\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    // Expose panning for external usage\n    this.pan = pan;\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n        );\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        );\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n        );\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        );\n        scope.enableZoom = false;\n      }\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      //console.log( 'handleMouseDownRotate' );\n\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      //console.log( 'handleMouseDownDolly' );\n\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      //console.log( 'handleMouseDownPan' );\n\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      //console.log( 'handleMouseMoveRotate' );\n\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart);\n\n      var element =\n        scope.domElement === document\n          ? scope.domElement.body\n          : scope.domElement;\n\n      // rotating across whole screen goes 360 degrees around\n      rotateLeft(\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\n          scope.rotateSpeed\n      );\n\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\n      rotateUp(\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\n          scope.rotateSpeed\n      );\n\n      rotateStart.copy(rotateEnd);\n\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      //console.log( 'handleMouseMoveDolly' );\n\n      dollyEnd.set(event.clientX, event.clientY);\n\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyIn(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyOut(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      //console.log( 'handleMouseMovePan' );\n\n      panEnd.set(event.clientX, event.clientY);\n\n      panDelta.subVectors(panEnd, panStart);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n      scope.update();\n    }\n\n    function handleMouseUp(event) {\n      //console.log( 'handleMouseUp' );\n    }\n\n    function handleMouseWheel(event) {\n      //console.log( 'handleMouseWheel' );\n\n      if (event.deltaY < 0) {\n        dollyOut(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyIn(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyUp(event) {\n      switch (event.keyCode) {\n        case scope.keys.SPACE:\n          if (scope.spacePan == true) {\n            scope.spacePanStart = false;\n            state = STATE.NONE;\n          }\n          break;\n      }\n    }\n\n    function handleKeyDown(event) {\n      //console.log( 'handleKeyDown' );\n\n      switch (event.keyCode) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n\n        case scope.keys.SPACE:\n          if (scope.spacePan == true) {\n            scope.spacePanStart = true;\n            state = STATE.PAN;\n          }\n          break;\n      }\n    }\n\n    function handleTouchStartRotate(event) {\n      //console.log( 'handleTouchStartRotate' );\n\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    }\n\n    function handleTouchStartDolly(event) {\n      //console.log( 'handleTouchStartDolly' );\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartPan(event) {\n      //console.log( 'handleTouchStartPan' );\n\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    }\n\n    function handleTouchMoveRotate(event) {\n      //console.log( 'handleTouchMoveRotate' );\n\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      rotateDelta.subVectors(rotateEnd, rotateStart);\n\n      var element =\n        scope.domElement === document\n          ? scope.domElement.body\n          : scope.domElement;\n\n      // rotating across whole screen goes 360 degrees around\n      rotateLeft(\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\n          scope.rotateSpeed\n      );\n\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\n      rotateUp(\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\n          scope.rotateSpeed\n      );\n\n      rotateStart.copy(rotateEnd);\n\n      scope.update();\n    }\n\n    function handleTouchMoveDolly(event) {\n      //console.log( 'handleTouchMoveDolly' );\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyEnd.set(0, distance);\n\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n\n      scope.update();\n    }\n\n    function handleTouchMovePan(event) {\n      //console.log( 'handleTouchMovePan' );\n\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n      panDelta.subVectors(panEnd, panStart);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n      scope.update();\n    }\n\n    function handleTouchEnd(event) {\n      //console.log( 'handleTouchEnd' );\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onMouseDown(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n\n      if (event.button === scope.mouseButtons.ORBIT) {\n        if (scope.enableRotate === false) return;\n\n        handleMouseDownRotate(event);\n\n        state = STATE.ROTATE;\n      } else if (event.button === scope.mouseButtons.ZOOM) {\n        if (scope.enableZoom === false) return;\n\n        handleMouseDownDolly(event);\n\n        state = STATE.DOLLY;\n      } else if (event.button === scope.mouseButtons.PAN) {\n        if (scope.enablePan === false) return;\n\n        if (!scope.spacePan || scope.bothPan) {\n          handleMouseDownPan(event);\n\n          state = STATE.PAN;\n        }\n      }\n\n      if (state !== STATE.NONE) {\n        document.addEventListener(\"mousemove\", onMouseMove, false);\n        document.addEventListener(\"mouseup\", onMouseUp, false);\n\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n\n      if (state === STATE.ROTATE) {\n        if (scope.enableRotate === false) return;\n\n        handleMouseMoveRotate(event);\n      } else if (state === STATE.DOLLY) {\n        if (scope.enableZoom === false) return;\n\n        handleMouseMoveDolly(event);\n      } else if (state === STATE.PAN) {\n        if (scope.enablePan === false) return;\n\n        if (scope.spacePan == true) {\n          if (scope.spacePanStart == true) {\n            handleMouseDownPan(event);\n            scope.spacePanStart = false;\n          }\n        }\n\n        handleMouseMovePan(event);\n      }\n    }\n\n    function onMouseUp(event) {\n      if (scope.enabled === false) return;\n\n      handleMouseUp(event);\n\n      //document.removeEventListener( 'mousemove', onMouseMove, false );\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n      scope.dispatchEvent(endEvent);\n\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableZoom === false ||\n        (state !== STATE.NONE && state !== STATE.ROTATE)\n      )\n        return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      handleMouseWheel(event);\n\n      scope.dispatchEvent(startEvent); // not sure why these are here...\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableKeys === false ||\n        scope.enablePan === false\n      )\n        return;\n\n      document.addEventListener(\"mousemove\", onMouseMove, false);\n\n      handleKeyDown(event);\n    }\n\n    function onKeyUp(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableKeys === false ||\n        scope.enablePan === false\n      )\n        return;\n\n      handleKeyUp(event);\n    }\n\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.touches.length) {\n        case 1: // one-fingered touch: rotate\n          if (scope.enableRotate === false) return;\n\n          handleTouchStartRotate(event);\n\n          state = STATE.TOUCH_ROTATE;\n\n          break;\n\n        case 2: // two-fingered touch: dolly\n          if (scope.enableZoom === false) return;\n\n          handleTouchStartDolly(event);\n\n          state = STATE.TOUCH_DOLLY;\n\n          break;\n\n        case 3: // three-fingered touch: pan\n          if (scope.enablePan === false) return;\n\n          handleTouchStartPan(event);\n\n          state = STATE.TOUCH_PAN;\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      switch (event.touches.length) {\n        case 1: // one-fingered touch: rotate\n          if (scope.enableRotate === false) return;\n          if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\n\n          handleTouchMoveRotate(event);\n\n          break;\n\n        case 2: // two-fingered touch: dolly\n          if (scope.enableZoom === false) return;\n          if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\n\n          handleTouchMoveDolly(event);\n\n          break;\n\n        case 3: // three-fingered touch: pan\n          if (scope.enablePan === false) return;\n          if (state !== STATE.TOUCH_PAN) return; // is this needed?...\n\n          handleTouchMovePan(event);\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd(event) {\n      if (scope.enabled === false) return;\n\n      handleTouchEnd(event);\n\n      scope.dispatchEvent(endEvent);\n\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      event.preventDefault();\n    }\n\n    //\n\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu, false);\n\n    scope.domElement.addEventListener(\"mousedown\", onMouseDown, false);\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, false);\n\n    scope.domElement.addEventListener(\"touchstart\", onTouchStart, false);\n    scope.domElement.addEventListener(\"touchend\", onTouchEnd, false);\n    scope.domElement.addEventListener(\"touchmove\", onTouchMove, false);\n\n    window.addEventListener(\"keydown\", onKeyDown, false);\n    window.addEventListener(\"keyup\", onKeyUp, false);\n\n    // force an update at start\n\n    this.update();\n  }\n\n  OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n  OrbitControls.prototype.constructor = OrbitControls;\n\n  Object.defineProperties(OrbitControls.prototype, {\n    center: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .center has been renamed to .target\"\n        );\n        return this.target;\n      }\n    },\n\n    // backward compatibility\n\n    noZoom: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\n        );\n        return !this.enableZoom;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\n        );\n        this.enableZoom = !value;\n      }\n    },\n\n    noRotate: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\n        );\n        return !this.enableRotate;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\n        );\n        this.enableRotate = !value;\n      }\n    },\n\n    noPan: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\n        );\n        return !this.enablePan;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\n        );\n        this.enablePan = !value;\n      }\n    },\n\n    noKeys: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\n        );\n        return !this.enableKeys;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\n        );\n        this.enableKeys = !value;\n      }\n    },\n\n    staticMoving: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\n        );\n        return !this.enableDamping;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\n        );\n        this.enableDamping = !value;\n      }\n    },\n\n    dynamicDampingFactor: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\n        );\n        return this.dampingFactor;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\n        );\n        this.dampingFactor = value;\n      }\n    }\n  });\n\n  return OrbitControls;\n};\n","var def = require(\"../imports\").default;\nvar appState = require(\"../../../stores\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   * Calculates coordinates of mouse on canvas adjusted for padding\n   * @param {*} event\n   * @param {*} currentElement\n   */\n  self.relMouseCoords = function(pageX, pageY, currentElement) {\n    var totalOffsetX = 0;\n    var totalOffsetY = 0;\n    var canvasX = 0;\n    var canvasY = 0;\n\n    do {\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\n      totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\n    } while ((currentElement = currentElement.offsetParent));\n\n    canvasX = pageX - totalOffsetX;\n    canvasY = pageY - totalOffsetY;\n\n    return { x: canvasX, y: canvasY };\n  };\n\n  /**\n   * Add metadata to node\n   * @param {*} node\n   */\n  self.prepNode = function(node) {\n    let nodeToAdd = node;\n    if (!node.data) {\n      node.data = {};\n    }\n\n    let hexToRGB = (hex) => {\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result ? \n      new THREE.Color(appState.graph.edges.color)\n      : null;\n  }\n    nodeToAdd.renderData = {\n      label: node.data.label || \"No Label\",\n      color: node.data.color || def.NODE_COLOR,\n      hcolor: node.data.hcolor || def.NODE_HIGHLIGHT,\n      shape: node.data.shape || def.NODE_SHAPE,\n      linecolor:  hexToRGB(appState.graph.edges.color),\n      numYeast: Math.ceil(Math.random() * 8),\n      size: node.data.size,\n      tsize: node.data.tsize || def.TEXT_SIZE,\n      x: 0,\n      y: 0,\n      vx: 0,\n      vy: 0\n    };\n    return nodeToAdd;\n  };\n\n  /**\n   * Creates a generic rectangle shape to use for selection and boundaries\n   */\n  self.make1x1Rect = function() {\n    var rectShape = new THREE.Shape();\n    rectShape.moveTo(0, 0);\n    rectShape.lineTo(0, 1);\n    rectShape.lineTo(1, 1);\n    rectShape.lineTo(1, 0);\n    rectShape.lineTo(0, 0);\n    rectShape.lineTo(0, 1);\n    return new THREE.ShapeGeometry(rectShape);\n  };\n\n  /**\n   * Creates a centered 2x2 Rectangle\n   */\n  self.make2x2Rect = function() {\n    var rectShape = new THREE.Shape();\n    rectShape.moveTo(-1, -1);\n    rectShape.lineTo(-1, 1);\n    rectShape.lineTo(1, 1);\n    rectShape.lineTo(1, -1);\n    rectShape.lineTo(-1, -1);\n    return new THREE.ShapeGeometry(rectShape);\n  };\n\n  /**\n   *  find radius of circle given the volume\n   * @param {*} volume\n   */\n  self.volToRadius = function(volume) {\n    return Math.pow((volume / Math.PI) * (3.0 / 4.0), 1.0 / 3.0);\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   * Creates or converts ngraph or d3 graph\n   */\n  self.setupGraph = function() {\n    var createNGraph = require(\"ngraph.graph\");\n    self.graph = createNGraph();\n    if (self.inGraph) {\n      self.updateGraph(self.inGraph);\n    }\n  };\n\n  /**\n   *  Create layout using d3\n   */\n  self.setupLayout = function() {\n    if (self.options.layout == \"ngraph\") {\n      self.setupNgraphLayout();\n    } else if (self.options.layout == \"d3\") {\n      self.setupD3Layout();\n    }\n  };\n\n  /**\n   * Set graph layout to ngraph\n   */\n  self.setupNgraphLayout = function() {\n    self.force = require(\"ngraph.forcelayout\")(self.graph);\n  };\n\n  /**\n   * Set graph layout to D3 Force Directed and set decay parameters\n   */\n  self.setupD3Layout = function() {\n    self.force = d3\n      .forceSimulation()\n      .force(\"charge\", d3.forceManyBody().strength(-1))\n      .force(\"link\", d3.forceLink())\n      .force(\"y\", d3.forceY(0).strength(0.001))\n      .force(\"x\", d3.forceX(0).strength(0.001))\n      .stop();\n\n    // set alpha decay to be lower than the default 0.0228\n    // so force layout does not prematurely stop\n    self.force.alphaDecay(0.005);\n\n    // set velocity decay to be lower than the default 0.4\n    // so nodes move to their final locations\n    self.force.velocityDecay(0.1);\n  };\n\n  self.setDisplayParams = function() {\n    self.element = document.getElementById(\"graph-container\");\n    self.clientRect = self.element.getBoundingClientRect();\n    self.width = self.clientRect.width;\n    self.height = self.clientRect.height;\n    self.aspect = self.width / self.height;\n    self.resolution = new THREE.Vector2(self.width, self.height);\n  };\n\n  self.setRendererParams = function() {\n    self.renderer.setSize(self.width, self.height);\n    self.cssRenderer = new THREE.CSS3DRenderer();\n    self.cssRenderer.setSize(self.width, self.height);\n    self.cssRenderer.domElement.style.position = \"absolute\";\n    self.cssRenderer.domElement.style.top = 0;\n    self.minimapRenderer.domElement.style.position = \"absolute\";\n    self.minimapRenderer.domElement.style.bottom = 0;\n    self.minimapRenderer.domElement.style.left = 0;\n    self.minimapRenderer.setSize(0.2 * self.height, 0.2 * self.height);\n    self.minimapRenderer.zIndex = 1000;\n    self.renderer.setPixelRatio(window.devicePixelRatio);\n  };\n\n  /**\n   *  Create initial camera and parameters\n   */\n  self.setupCamera = function() {\n    self.ccamera = new THREE.PerspectiveCamera(\n      self.fov,\n      self.width / self.height,\n      self.near,\n      self.far\n    );\n    self.ccamera.position.z = 200;\n    var controls = new OrbitControls(self.ccamera, self.element);\n    controls.spacePan = true; // Space bar panning\n    controls.bothPan = true; // Space bar and right click panning\n    controls.minDistance = 10;\n    controls.maxDistance = self.renderWidth * 2;\n    controls.target.set(0, 0, 0);\n    controls.enableRotate = false;\n    self.controls = controls;\n  };\n\n  /**\n   *  Create minimap\n   */\n  self.setupMinimap = function() {\n    self.minimap = {};\n    self.minimap.camera = new THREE.PerspectiveCamera(\n      self.fov,\n      1,\n      self.near,\n      self.far\n    );\n    self.minimap.camera.position.z = self.renderWidth * 2;\n\n    (self.oldCoords = {\n      x: null,\n      y: null,\n      z: null\n    }),\n      /**\n       * Pan the ccamera according to mouse position on screen (should be called only when mouse is on minimap)\n       * @param coordX mouse position on screen returned by relMouseCoords\n       * @param coordY mouse position on screen returned by relMouseCoords\n       */\n      (self.minimap.panToMousePosition = function(coordX, coordY) {\n        // ensures that the camera position is updated from the last pan.\n        if (\n          self.ccamera.position.x == self.oldCoords.x &&\n          self.ccamera.position.y == self.oldCoords.y &&\n          self.ccamera.position.z == self.oldCoords.z\n        ) {\n          return;\n        }\n\n        self.oldCoords.x = self.ccamera.position.x;\n        self.oldCoords.y = self.ccamera.position.y;\n        self.oldCoords.z = self.ccamera.position.z;\n\n        // 850 is an approximation\n        const coefficient = (self.height - 200) / self.ccamera.position.z;\n\n        self.controls.pan(\n          ((coordX / self.minimap.width) * 4000 -\n            2000 -\n            self.ccamera.position.x) *\n            -coefficient,\n          (((self.height - coordY) / self.minimap.height) * 4000 -\n            2000 -\n            self.ccamera.position.y) *\n            coefficient\n        );\n      });\n  };\n\n  /**\n   *  Create initial scene geometry and attributes\n   */\n  self.setupGeometry = function() {\n    self.scene = new THREE.Scene();\n\n    self.points = new THREE.BufferGeometry();\n    self.nodes = new THREE.Group();\n    self.scene.add(self.nodes);\n\n    if (def.LINES == \"fancy\") {\n      self.setupFancyEdges();\n    } else {\n      self.setUpSimpleEdges();\n    }\n\n    var rect = self.make1x1Rect();\n\n    self.setupSelectionBox(rect);\n    self.setupBoundaries(rect);\n    self.setupViewPort(rect);\n  };\n\n  /**\n   * Setup data structures for fancy edges\n   */\n  self.setupFancyEdges = function() {\n    self.edges = [];\n    self.edgeCount = 0;\n  };\n\n  /**\n   * Sets up data structures for simple edges\n   */\n  self.setUpSimpleEdges = function() {\n    self.edges = new THREE.BufferGeometry();\n    var material = new THREE.LineBasicMaterial({\n      linewidth: 2,\n      color: 0xffffff,\n      vertexColors: THREE.VertexColors,\n      shading: THREE.FlatShading\n    });\n    self.line = new THREE.LineSegments(self.edges, material);\n    self.line.frustumCulled = false;\n    self.scene.add(self.line);\n\n    var positions = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n    var colors = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n\n    self.edges.addAttribute(\"position\", positions);\n    self.edges.addAttribute(\"color\", colors);\n\n    /**Adding triangles for directed edges update*/\n    self.directedArrows = new THREE.BufferGeometry();\n    var arrowMaterial = new THREE.MeshBasicMaterial({\n      color: 0xffffff,\n    });\n    self.arrow = new THREE.Mesh(self.directedArrows, arrowMaterial);\n    self.arrow.frustumCulled = false;\n    self.scene.add(self.arrow)\n    var arrowPositions = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n    var arrowColors = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n\n    self.directedArrows.addAttribute(\"position\", arrowPositions);\n    self.directedArrows.addAttribute(\"color\", arrowColors);\n    \n    self.drawCount = 0;\n  };\n\n  /**\n   * Adds box to screen that is displayed when selecting groups of nodes\n   */\n  self.setupSelectionBox = function(rect) {\n    self.selectBox = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x3399aa })\n    );\n    self.selectBox.visible = false;\n    self.scene.add(self.selectBox);\n  };\n\n  /**\n   * Sets boundaries for max edges of graph\n   */\n  self.setupBoundaries = function(rect) {\n    self.boundaries = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x999999 })\n    ); \n    self.scene.add(self.boundaries);\n    self.setBoundarySize(self.renderWidth * 2);\n  };\n\n  /**\n   * Sets viewport to match size of display\n   */\n  self.setupViewPort = function(rect) {\n    self.viewPort = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: self.darkMode? 0xffffff : 0x000000})\n    );\n    self.scene.add(self.viewPort);\n    self.setViewPortSize(self.ccamera);\n  };\n\n  /**\n   *  Creates listeners and events for selecting nodes\n   */\n  self.setupSelect = function() {\n    self.points.addAttribute(\n      \"position\",\n      new THREE.BufferAttribute(new Float32Array(20 * 3), 3)\n    );\n    self.points.computeBoundingSphere();\n    self.nodeCount = 0;\n    var mouseHandler = function(callback) {\n      return function(event) {\n        event.preventDefault();\n        let pageX, pageY;\n        if (event.touches && event.touches.length > 0) {\n          // for touch events\n          pageX = event.touches.item(0).pageX;\n          pageY = event.touches.item(0).pageY;\n        } else {\n          pageX = event.pageX;\n          pageY = event.pageY;\n        }\n        \n        var coords = self.relMouseCoords(pageX, pageY, this);\n        var mouseX = (coords.x / self.width) * 2 - 1;\n        var mouseY = 1 - (coords.y / self.height) * 2;\n        var mousePosition = new THREE.Vector3(mouseX, mouseY, 1);\n        mousePosition.unproject(self.ccamera);\n        var dir = mousePosition.sub(self.ccamera.position).clone();\n        mousePosition.normalize();\n        // Determine whether mouse is on minimap\n        self.isMouseCoordinatesOnMinimap =\n          coords.x <= self.minimap.width &&\n          self.height - coords.y <= self.minimap.height;\n        if (self.isMouseCoordinatesOnMinimap) {\n          self.minimap.mouseX = coords.x;\n          self.minimap.mouseY = coords.y;\n        }\n\n        // Determine intersects\n        var raycaster = new THREE.Raycaster(\n          self.ccamera.position,\n          mousePosition\n        );\n\n        // Find real location of mouse\n        var distance = -self.ccamera.position.z / dir.z;\n        var pos = self.ccamera.position\n          .clone()\n          .add(dir.multiplyScalar(distance));\n\n        if (callback == self.onRightClick && event.which != 3) {\n          return;\n        }\n\n        if (\n          callback == self.onRightClick &&\n          event.target.getAttribute(\"contenteditable\")\n        ) {\n          event.target.focus();\n        } else {\n          event.preventDefault();\n          if (callback == self.onRightClick) {\n            self.onRightClickCoords(event);\n          }\n          self.callMouseHandler(event, raycaster, pos, callback);\n        }\n      };\n    };\n\n    //Add listeners to web page\n    self.setupMouseHandlers(mouseHandler);\n  };\n\n  /**\n   * Checks if a node has been clicked, and calls the appropriate mouse handler function\n   */\n  self.callMouseHandler = function(event, raycaster, pos, callback) {\n    var intersects = raycaster.intersectObjects(self.nodes.children);\n    if (intersects.length) {\n      // If a node has been clicked\n      var nodeIndex = intersects[0].object.index;\n      self.oldIntersect = nodeIndex;\n      callback(\n        self.graph.getNode(nodeIndex),\n        pos.x,\n        pos.y,\n        event.button,\n        event.ctrlKey\n      );\n    } else {\n      callback(null, pos.x, pos.y, event.button, event.ctrlKey);\n    }\n  };\n\n  /**\n   * Add Mouse Event Listeners to page\n   */\n  self.setupMouseHandlers = function(mouseHandler) {\n    self.element.addEventListener(\n      \"mousemove\",\n      mouseHandler(self.onMouseMove),\n      false\n    );\n    self.element.addEventListener(\n      \"mousedown\",\n      mouseHandler(self.onMouseDown),\n      false\n    );\n    self.element.addEventListener(\n      \"mouseup\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n    self.element.addEventListener(\n      \"mouseup\",\n      mouseHandler(self.onRightClick),\n      false\n    );\n    self.element.addEventListener(\n      \"touchstart\",\n      mouseHandler(self.onMouseDown),\n      false\n    );\n    self.element.addEventListener(\n      \"touchmove\",\n      mouseHandler(self.onMouseMove),\n      false\n    );\n    self.element.addEventListener(\n      \"touchend\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n    self.element.addEventListener(\n      \"touchcancel\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\n\nmodule.exports = function(self) {\n  self.addNode = function(node) {\n    self.graph.addNode(node.id, node.data);\n    var graphNode = self.graph.getNode(node.id);\n    graphNode.x = node.x;\n    graphNode.y = node.y;\n    graphNode.fx = node.fx;\n    graphNode.fy = node.fy;\n    graphNode.pinnedx = node.fx != undefined;\n    graphNode.pinnedy = node.fy != undefined;\n    self.prepNode(graphNode);\n    self.drawNode(graphNode);\n    graphNode.links = [];\n    self.layoutInit = true;\n    return graphNode;\n  };\n\n  self.removeNode = function(node) {\n    if (!node || !node.id) {\n      return;\n    }\n    self.removeGraphEdges(node);\n    self.undrawEdges(node);\n    self.nodes.remove(node.renderData.draw_object);\n    self.graph.removeNode(node.id);\n    self.undrawNode(node);\n    self.nodeCount -= 1;\n  };\n\n  self.removeGraphEdges = function(node) {\n    var nodeLinks = self.graph.getLinks(node.id);\n    if (nodeLinks) {\n      nodeLinks.forEach(function(edge) {\n        self.graph.removeLink(edge);\n      });\n    }\n  };\n\n  self.undrawNode = function(node) {\n    var nodes = self.force.nodes();\n    if (nodes) {\n      for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id == node.id) {\n          self.scene.remove(nodes[i].renderData.draw_object);\n          nodes[i].renderData.textHolder.children[0].element.hidden = true;\n          nodes.splice(i, 1);\n        }\n      }\n    }\n  };\n\n  self.undrawEdges = function(node) {\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n    var killed = 0;\n    for (var i = 0; i - killed < self.lineIndices.length; i++) {\n      if (\n        self.lineIndices[i - killed].source.id == node.id ||\n        self.lineIndices[i - killed].target.id == node.id\n      ) {\n        for (var j = i - killed; j < self.lineIndices.length; j++) {\n          var k = j + 1;\n          if (k == self.lineIndices.length) {\n            positions[j * 6] = 0;\n            positions[j * 6 + 1] = 0;\n            positions[j * 6 + 3] = 0;\n            positions[j * 6 + 4] = 0;\n            colors[j * 6] = 255;\n            colors[j * 6 + 1] = 160;\n            colors[j * 6 + 2] = 80;\n            colors[j * 6 + 3] = 255;\n            colors[j * 6 + 4] = 160;\n            colors[j * 6 + 5] = 80;\n          } else {\n            self.lineIndices[j] = self.lineIndices[k];\n            self.lineObjects[j * 2] = self.lineObjects[k * 2];\n            self.lineObjects[j * 2 + 1] = self.lineObjects[k * 2 + 1];\n            positions[j * 6] = positions[k * 6];\n            positions[j * 6 + 1] = positions[k * 6 + 1];\n            positions[j * 6 + 3] = positions[k * 6 + 3];\n            positions[j * 6 + 4] = positions[k * 6 + 4];\n            colors[j * 6] = colors[k * 6];\n            colors[j * 6 + 1] = colors[k * 6 + 1];\n            colors[j * 6 + 2] = colors[k * 6 + 2];\n            colors[j * 6 + 3] = colors[k * 6 + 3];\n            colors[j * 6 + 4] = colors[k * 6 + 4];\n            colors[j * 6 + 5] = colors[k * 6 + 5];\n          }\n        }\n        self.lineIndices.pop();\n        self.lineObjects.pop();\n        self.lineObjects.pop();\n        self.drawCount -= 2;\n        killed += 1;\n      }\n    }\n    console.log(\"Deleted \" + killed.toString() + \" edges\");\n  };\n\n  self.getNode = function(node_id) {\n    return self.graph.getNode(node_id);\n  };\n\n  self.addEdge = function(source, target, visible = true) {\n    self.graph.addLink(source.id, target.id);\n    self.drawEdge(self.getNode(source.id), self.getNode(target.id), visible);\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   *  Change color of node edges\n   */\n  self.highlightNode = function(node, toggle, color = def.NODE_HIGHLIGHT) {\n    if (toggle) {\n      node.renderData.draw_object.children[0].material.color.setHex(color);\n      node.renderData.draw_object.children[0].visible = true;\n    } else {\n      node.renderData.draw_object.children[0].material.color.set(\n        node.renderData.hcolor\n      );\n      node.renderData.draw_object.children[0].visible = false;\n    }\n  };\n\n  /**\n   *  Highlight edges from and to a node and hide others\n   */\n  self.highlightEdges = function(node, toggle) {\n    const froms = [];\n    const tos = [];\n    for (var i = 0; i < self.selection.length; i++) {\n      for (var j = 0; j < self.selection[i].links.length; j++) {\n        froms.push(self.selection[i].links[j].fromId);\n        tos.push(self.selection[i].links[j].toId);\n      }\n    }\n    if (toggle) {\n      for (var i = 0; i < node.links.length; i++) {\n        froms.push(node.links[i].fromId);\n        tos.push(node.links[i].toId);\n      }\n      self.highlightNeighbors(node, froms, tos);\n    } else {\n      self.highlightNeighbors(node, froms, tos);\n    }\n  };\n\n  /**\n   * Highlight adjacent nodes\n   * \n   * Also highlights edges.\n   */\n  self.highlightNeighbors = function(node, froms, tos) {\n    self.graph.forEachNode(n => {\n      if (self.selection.indexOf(n) != -1 || n == node) {\n        // If the node is selected or the node is the node to be highlighted\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, true);\n        for (var i = 0; n.linkObjs && i < n.linkObjs.length; i++) {\n          n.linkObjs[i].linecolor = n.renderData.linecolor;\n        }\n      } else if (\n        self.doHighlightNeighbors &&\n        (froms.indexOf(n.id) != -1 || tos.indexOf(n.id) != -1)\n      ) {\n        // If the node is not selected or highlighted and\n        // if the node is present in either froms or tos arrays\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, false);\n      } else if (\n        !self.prevHighlights ||\n        self.prevHighlights.indexOf(n.id) == -1\n      ) {\n        self.colorNodeOpacity(n, 0.5);\n        self.colorNodeEdge(n, false);\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\n      }\n    });\n  };\n\n  /**\n   *  Change color of node edges\n   */\n  self.colorNodeEdge = function(node, isHighlighted) {\n    let red = new THREE.Color(appState.graph.edges.color).r;\n    let blue = new THREE.Color(appState.graph.edges.color).g;\n    let green = new THREE.Color(appState.graph.edges.color).b;\n    if(isHighlighted) {\n      node.renderData.linecolor.r = red;\n      node.renderData.linecolor.g = blue;\n      node.renderData.linecolor.b = green;\n      self.arrow.material.color.setRGB(red, blue, green);\n    } else {\n      node.renderData.linecolor.r =  self.darkMode ? 0.25 : .75;\n      node.renderData.linecolor.g = self.darkMode ? 0.25 : .75;\n      node.renderData.linecolor.b = self.darkMode ? 0.25 : .75;\n    }\n    \n  };\n\n  /**\n   *  Change node opacity\n   */\n  self.colorNodeOpacity = function(node, op) {\n    node.renderData.draw_object.material.opacity = op;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\nconst { default: appState } = require(\"../../stores\");\n\nmodule.exports = function (self) {\n  /**\n   * Mouse move event that selections nodes in selection box\n   */\n  self.onMouseMove = function (selection, mouseX, mouseY, button, ctrl) {  \n    // check if left button is not down\n    self.mouseX = mouseX;\n    self.mouseY = mouseY;\n    if (self.leftMouseDown && self.mouseDown) {\n      \n      // left-clicked empty space (i.e., not clicking a node)\n      if (!self.dragging && self.selection.indexOf(selection) == -1 && !ctrl) {\n        self.clearSelection();\n      }\n\n\n      if (!self.dragging) {\n        // add nodes enclosed by selection box into node selection\n        self.checkSelection(mouseX, mouseY);\n      }\n    }\n\n    \n\n\n    if (self.selection.length > 0) {\n      // reactivate (in D3's terminology: reheat) the force layout\n      if (self.dragging) {\n        self.force.alpha(1);\n      }\n      // update position of nodes in selection\n      self.updateSelection(mouseX, mouseY);\n    }\n\n    if (!self.mouseDown) {\n      self.onHover(selection);\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\n    } else {\n      // if mouse is in minimap, do nothing else\n      if (self.isMouseCoordinatesOnMinimap && self.mapShowing) {\n        self.minimap.panToMousePosition(\n          self.minimap.mouseX,\n          self.minimap.mouseY\n        );\n        return;\n      }\n\n\n\n      // update selection box size/position\n      if (self.leftMouseDown && !self.dragging) {\n        if (self.showBox) {\n          self.selectBox.visible = true;\n          self.showBox = false;\n        }\n        self.selectBox.position.x = mouseX;\n        self.selectBox.position.y = mouseY;\n        var diffx = self.mouseStart.x - mouseX;\n        var diffy = self.mouseStart.y - mouseY;\n        self.selectBox.scale.set(diffx, diffy, 1);\n      } else {\n        self.selectBox.visible = false;\n      }\n    }\n  };\n\n  /**\n   * Mouse hover over node event that highlights the node and neighbors at mouse position\n   */\n  self.onHover = function (node) {\n    if (self.lastHover && self.selection.indexOf(self.lastHover) == -1) {\n      self.highlightNode(self.lastHover, false);\n      self.lastHover.renderData.textHolder.children[0].element.hideme = true;\n      self.highlightEdges(node, false);\n    }\n    self.lastHover = node;\n    if (node) {\n      self.highlightNode(node, true);\n      node.renderData.textHolder.children[0].element.hideme = false;\n      self.highlightEdges(node, true);\n      //set currently hovered node\n      appState.graph.currentlyHovered = node;\n    } else if (self.selection.length == 0) {\n      self.graph.forEachNode(n => {\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, 0.5, 0.5);\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\n      });\n    }\n    if (self.prevHighlights != undefined) {\n      for (var i = 0; i < self.prevHighlights.length; i++) {\n        self.colorNodeOpacity(self.prevHighlights[i], 1);\n        self.highlightNode(self.prevHighlights[i], true, def.SEARCH_HIGHLIGHT);\n      }\n    }\n  };\n  \n\n\n\n\n  // vars to get time at mouse press and time at mouse release\n  var startTime = 0;\n  var endTime = 0;\n  /**\n   * Mouse down event to start a selection box or start dragging a node\n   */\n  self.onMouseDown = function (selection, mouseX, mouseY, button, ctrl) {\n    // if mouse is in minimap, do nothing else\n    if (self.isMouseCoordinatesOnMinimap && self.mapShowing) {\n      self.mouseDown = true;\n      self.minimap.panToMousePosition(self.minimap.mouseX, self.minimap.mouseY);\n      return;\n    }\n\n    \n\n    self.leftMouseDown = true;\n    if (self.leftMouseDown) {\n      self.mouseDown = true;\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\n      if (button == 0 && !self.dragging) {\n        self.showBox = true;\n      }\n      if (self.selection.indexOf(selection) == -1 && !ctrl) {\n        for (var i = 0; i < self.selection.length; i++) {\n          self.selection[i].renderData.isSelected = false;\n          if (!def.NODE_NO_HIGHLIGHT) {\n            self.selection[\n              i\n            ].renderData.draw_object.children[0].visible = false;\n          } else {\n            self.selection[i].renderData.draw_object.material.color.set(\n              new THREE.Color(self.selection[i].renderData.color)\n            );\n          }\n          self.selection[\n            i\n          ].renderData.textHolder.children[0].element.hideme = true;\n        }\n        self.selection = [];\n      }\n\n\n      if(selection) {\n        //when any node is clicked, un-smartpause if smartpaused\n        //appState.graph.smartPause.lastUnpaused = Date.now(); //old code using lastUnpaused\n        appState.graph.smartPause.interactingWithGraph = true;\n      }\n\n\n      //captures click times to measure time distance between clicks\n      oldStartTime = startTime;\n      startTime = Date.now();\n\n      //keeps track of time difference\n      clickDifference = startTime - oldStartTime;\n\n      //sets whether or not last click was \n      //double click or not\n      if (clickDifference < 225) {\n        self.doubleClicked = true;\n      } else {\n        self.doubleClicked = false;\n      }\n\n      \n\n      //selects single node when dragged\n      if (selection) {\n        self.dragging = selection;\n        if (self.selection.indexOf(selection) == -1) {\n          self.selection.push(selection);\n          selection.renderData.isSelected = false;\n        }\n      }\n\n      if (selection) {\n        self.dragging = selection;\n        //only pins node if double-clicked\n        if (self.doubleClicked) {\n          //passing in 'selection' node to pass information for node to pin\n          self.updateSelection(self.dragging.x, self.dragging.y, selection);\n        } else if (ctrl) {\n          self.selection.splice(self.selection.indexOf(selection), 1);\n          selection.renderData.isSelected = false;\n          if (!def.NODE_NO_HIGHLIGHT) {\n            selection.renderData.draw_object.children[0].visible = false;\n          } else {\n            selection.renderData.draw_object.material.color.set(\n              new THREE.Color(self.selection[i].renderData.color)\n            );\n          }\n          selection.renderData.textHolder.children[0].element.hideme = true;\n          self.dragging = null;\n        }\n      } else {\n        if (self.newNodeIds) {\n          self.highlightNodeIds([], true);\n          self.newNodeIds = undefined;\n        }\n      }\n    }\n  };\n\n  /**\n   * Mouse up event that closes selection flags and emits selection to Argo\n   */\n  self.onMouseUp = function (selection, mouseX, mouseY, button) {\n    endTime = Date.now();\n    self.mouseDown = false;\n\n    //when not clicking, nodes aren't being interacted with\n    appState.graph.smartPause.interactingWithGraph = false;\n\n    // Left or right mouse button\n    if (true) {\n      self.showBox = false;\n      self.dragging = null;\n      self.selectBox.visible = false;\n\n      self.ee.emit(\"select-nodes\", self.selection);\n    }\n\n  };\n\n\n\n  /**\n   * Right click event to save right clicked node\n   */\n  self.onRightClick = function (selection) {\n    if (selection) {\n      self.rightClickedNode = selection;\n    } else {\n      self.rightClickedNode = null;\n    }\n  };\n\n  /**\n   * Right click event that emits context menu event to Argo\n   */\n  self.onRightClickCoords = function (event) {\n    // Don't show menu if dragging camera\n    if (endTime - startTime < 200) {\n      self.ee.emit(\"right-click\", {\n        pageX: event.pageX,\n        pageY: event.pageY\n      });\n    }\n  };\n};","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   * Set all nodes to a size\n   */\n  self.setUniformNodeSize = function(s) {\n    self.graph.forEachNode(function(node) {\n      node.renderData.draw_object.scale.set(s, s, 1);\n      var hsize = 1 + def.HIGHLIGHT_SIZE / s;\n      node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n    });\n  };\n\n  /**\n   * Set all nodes to a size based on a value in the node's data\n   */\n  self.setNodeDataSize = function(dataValue) {\n    self.graph.forEachNode(function(node) {\n      dataVal = node.renderData[dataValue];\n      if (!dataVal) {\n        console.log(\"Data value does not exist\");\n      } else {\n        dataVal = Math.log(dataVal + 1);\n        node.renderData.draw_object.scale.set(dataVal, dataVal, 1);\n        var hsize = 1 + def.HIGHLIGHT_SIZE / dataVal;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      }\n    });\n  };\n\n  /**\n   * Set all nodes to a color\n   */\n  self.setUniformNodeColor = function(hsvDegree) {\n    self.graph.forEachNode(function(node) {\n      node.renderData.draw_object.material.color.set(\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 43%)\")\n      );\n      if (!def.NODE_NO_HIGHLIGHT) {\n        node.renderData.draw_object.children[0].material.color.set(\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\n        );\n      }\n    });\n  };\n\n  /**\n   * Set all nodes to a color based on a value in the node's data\n   */\n  self.setNodeDataColor = function(dataValue) {\n    var i = 0;\n    values = [];\n    min = null;\n    max = null;\n\n    self.graph.forEachNode(function(node) {\n      if ((dataVal = node.renderData[dataValue])) {\n        if (min == null) min = dataVal;\n        if (max == null) max = dataVal;\n        if (dataVal < min) min = dataVal;\n        else if (dataVal > max) max = dataVal;\n        values[i] = dataVal;\n        i += 1;\n      } else {\n        values[i] = -1;\n      }\n    });\n\n    i = 0;\n    self.graph.forEachNode(function(node) {\n      var hsvDegree;\n      if (values[i] == -1) {\n        hsvDegree = 0;\n      } else {\n        values[i] = (values[i] - min) / (max - min);\n        hsvDegree = values[i] * 120;\n      }\n      node.renderData.draw_object.material.color.set(\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 48%)\")\n      );\n      if (!def.NODE_NO_HIGHLIGHT) {\n        node.renderData.draw_object.children[0].material.color.set(\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\n        );\n      }\n      i++;\n    });\n  };\n\n  /**\n   * Map a node attribute based on some mapping function\n   */\n  self.mapNodeAttributes = function(mapping, nodes = null) {\n    let val;\n    if (mapping[0] == \"degree\") {\n      val = node => (node.links ? node.links.length + 2 : 2);\n    } else if (mapping[0] == \"scalex\") {\n      val = node => node.renderData.draw_object.scale.x;\n    } else {\n      val = node => mapping[0];\n    }\n\n    let mod;\n    if (mapping[1] == \"volume\") {\n      mod = val => self.volToRadius(val);\n    } else if (mapping[1] == \"mult\") {\n      mod = val => val * mapping[3](val);\n    } else if (mapping[1] == \"add\") {\n      mod = val => val + mapping[3](val);\n    } else if (mapping[1] == \"log\") {\n      mod = val => Math.log(val);\n    } else {\n      mod = val => val;\n    }\n\n    let attr;\n    if (mapping[2] == \"scalexy\") {\n      attr = (node, val) => {\n        node.renderData.draw_object.scale.set(val, val, 1);\n        var hsize = 1 + def.HIGHLIGHT_SIZE / val;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      };\n    } else if (mapping[2] == \"edgeColorRed\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.r = 1;\n        node.renderData.linecolor.b = 1 - val / 5;\n        node.renderData.linecolor.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"edgeColorBlue\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.b = 1;\n        node.renderData.linecolor.r = 1 - val / 5;\n        node.renderData.linecolor.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"edgeColorGreen\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.g = 1;\n        node.renderData.linecolor.b = 1 - val / 5;\n        node.renderData.linecolor.r = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"nodeColorBlue\") {\n      attr = (node, val) => {\n        node.renderData.draw_object.material.color.b = 1;\n        node.renderData.draw_object.material.color.r = 1 - val / 5;\n        node.renderData.draw_object.material.color.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"pinned\") {\n      attr = (node, val) => {\n        node.pinnedx = val;\n        node.pinnedy = val;\n      };\n    } else if (mapping[2] == \"labelSize\") {\n      attr = (node, val) => {\n        self.changeLabelFontSize(node, val);\n      };\n    } else if (mapping[2] == \"labelLength\") {\n      attr = (node, val) => {\n        self.changeLabelLength(node, val);\n      };\n    }\n\n    self.changeNodes(val, mod, attr, nodes);\n  };\n\n  /**\n   *  get attribute from node using function val\n   *  modify result with function mode\n   *  set node attribute with attr\n   */\n  self.changeNode = function(val, mod, attr, node) {\n    var v = val(node);\n    if (v != undefined) {\n      var r = mod(v);\n      if (r != undefined) {\n        attr(node, r);\n      }\n    }\n  };\n\n  /**\n   *  perform changeNode on many nodes\n   */\n  self.changeNodes = function(val, mod, attr, nodes = null) {\n    if (nodes == null) {\n      self.graph.forEachNode(function(node) {\n        self.changeNode(val, mod, attr, node);\n      });\n    } else {\n      for (var i = 0; i < nodes.length; i++) {\n        self.changeNode(val, mod, attr, nodes[i]);\n      }\n    }\n  };\n\n  /**\n   * Limit label size by (estimated) characters\n   * This is only accurate if the label is monospaced\n   */\n  self.changeLabelLength = function(node, numChars) {\n    node.renderData.textHolder.children[0].element.children[0].style.width =\n      numChars.toString() + \"ch\";\n  };\n\n  /**\n   * Limit label size by (estimated) characters\n   * This is only accurate if the label is monospaced\n   */\n  self.changeLabelFontSize = function(node, size, relativeSize = 1) {\n    size = size * relativeSize;\n    node.renderData.textHolder.children[0].element.children[0].style.fontSize =\n      size.toString() + \"rem\";\n  };\n\n  /**\n   * Change boundary size\n   */\n  self.setBoundarySize = function(size) {\n    self.renderWidth = size;\n    self.renderHeight = size;\n    self.boundaries.scale.set(size * 2, size * 2, 1);\n    self.boundaries.position.x = -size;\n    self.boundaries.position.y = -size;\n    self.controls.maxDistance = size * 2;\n    self.minimap.camera.position.z = self.renderWidth * 2;\n  };\n\n  /**\n   * Change viewport size\n   */\n  self.setViewPortSize = function(camera) {\n    var distance = self.ccamera.position.z;\n    var height =\n      Math.tan(((camera.fov * Math.PI) / 180) * 0.5) * distance * 2 + 5;\n    var width = height * camera.aspect + 5;\n    self.viewPort.scale.set(width, height, 1);\n    self.viewPort.position.x = camera.position.x - width / 2;\n    self.viewPort.position.y = camera.position.y - height / 2;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\n\nmodule.exports = function(self) {\n  /**\n   *  Create highlight mesh\n   */\n  self.createHighlightMesh = function(node, texture) {\n    var shape =\n      node.renderData.hshape || node.renderData.shape || def.NODE_HSHAPE;\n    if (shape == \"square\") {\n      var hgeometry = self.make2x2Rect();\n    } else {\n      var hgeometry = new THREE.CircleGeometry(1, 32);\n    }\n\n    return self.createHighlightDrawObject(hgeometry, node, texture);\n  };\n\n  /**\n   * Sets the material, color, visibility, and size of the highlight drawing for a node.\n   */\n  self.createHighlightDrawObject = function(hgeometry, node, texture) {\n    var size = self.getNodeSize(node);\n    var hsize = def.HIGHLIGHT_SIZE;\n\n    texture = def.NODE_NO_HTEX ? null : texture;\n    var color = def.NODE_NO_HCOLOR\n      ? null\n      : parseInt(node.renderData.hcolor || def.NODE_HIGHLIGHT);\n    var hmaterial = new THREE.MeshBasicMaterial({ color: color, map: texture });\n    hmaterial.transparent = true;\n    var highlight = new THREE.Mesh(hgeometry, hmaterial);\n    highlight.visible = true;\n    highlight.scale.set(1 + hsize / size, 1 + hsize / size, 1);\n    highlight.position.z = -0.01;\n    return highlight;\n  };\n\n  /**\n   *  Create node mesh\n   */\n  self.createNodeMesh = function(node, texture) {\n    var shape = node.renderData.shape || def.NODE_SHAPE;\n    if (shape == \"square\") {\n      var geometry = self.make2x2Rect();\n    } else {\n      var geometry = new THREE.CircleGeometry(1, 32);\n    }\n    return self.createNodeDrawObject(geometry, node, texture);\n  };\n\n  /**\n   * Create mesh to visual show pinning\n   */\n  self.createPinMesh = function(size) {\n    var geometry = self.make2x2Rect();\n    var color = new THREE.Color(def.PIN_COLOR);\n    var material = new THREE.MeshBasicMaterial({ color: color });\n    var pinMesh = new THREE.Mesh(geometry, material);\n    pinMesh.scale.set(0.1, 0.1, 1);\n    pinMesh.position.z = 0.01;\n    pinMesh.visible = false;\n    return pinMesh;\n  };\n\n  /**\n   * Create the drawing information for a node\n   */\n  self.createNodeDrawObject = function(geometry, node, texture) {\n    var size = self.getNodeSize(node);\n\n    texture = def.NODE_NO_TEX ? null : texture;\n    var color = def.NODE_NO_COLOR\n      ? null\n      : new THREE.Color(node.renderData.color || def.NODE_COLOR);\n    var material = new THREE.MeshBasicMaterial({ color: color, map: texture });\n    material.transparent = true;\n    var draw_object = new THREE.Mesh(geometry, material);\n    draw_object.scale.set(size, size, 1);\n    return draw_object;\n  };\n\n  /**\n   * Get the size of a node if it exists, otherwise get it from the render data.\n   */\n  self.getNodeSize = function(node) {\n    var size;\n    if (node.renderData.size != undefined) size = node.renderData.size;\n    else size = node.renderData[\"size\"];\n    return size;\n  };\n\n  self.createNodeLabel = function(node) {\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x000000,\n      wireframe: true,\n      wireframeLinewidth: 1,\n      side: THREE.DoubleSide\n    });\n    var geometry = new THREE.PlaneGeometry(1000, 200);\n    var textMesh = self.createAndSetupLabelTextMesh(geometry, material);\n    var label = self.createAndSetupLabelDiv(node, textMesh);\n    var textHolder = self.createAndSetupTextHolder(label, textMesh);\n    node.renderData.textHolder = textHolder;\n    self.scene.add(textHolder);\n  };\n\n  self.createAndSetupLabelTextMesh = function(geometry, material) {\n    var textMesh = new THREE.Mesh(geometry, material);\n    textMesh.scale.set(def.TEXT_SIZE, def.TEXT_SIZE, 1);\n    var bbox = new THREE.Box3().setFromObject(textMesh);\n    textMesh.position.x += (bbox.max.x - bbox.min.x) * def.TEXT_X_OFFSET;\n    textMesh.position.y -= (bbox.max.y - bbox.min.y) * def.TEXT_Y_OFFSET;\n    textMesh.visible = def.TEXT_WIREFRAME;\n    return textMesh;\n  };\n\n  self.createAndSetupLabelDiv = function(node, textMesh) {\n    var label = self.createLabelDiv(node);\n    label.element.hidden = true;\n    label.position.copy(textMesh.position);\n    label.scale.copy(textMesh.scale);\n    return label;\n  };\n\n  self.createAndSetupTextHolder = function(label, textMesh) {\n    var textHolder = new THREE.Object3D();\n    textHolder.add(label);\n    textHolder.add(textMesh);\n    return textHolder;\n  };\n\n  /**\n   *  Create label div\n   */\n  self.createLabelDiv = function(node) {\n    // Create canvas to draw text label onto sprite image\n    var element = self.createLabelDivElement();\n    var content = document.createTextNode(node.renderData.label);\n    var textElement = self.createLabelTextElement();\n    textElement.appendChild(content);\n    element.appendChild(textElement);\n    var labelObj = new THREE.CSS3DObject(element);\n    return labelObj;\n  };\n\n  /**\n   * Creates the Label Div Element for a node's label\n   */\n  self.createLabelDivElement = function() {\n    var element = document.createElement(\"div\");\n    element.style.width = \"1000px\";\n    element.style.height = \"200px\";\n    element.style.backgroundColor = def.TEXT_BACK_COLOR;\n    element.style.opacity = def.TEXT_OPACITY;\n    return element;\n  };\n\n  /**\n   * Creates the text element to add to the label div for a node.\n   */\n  self.createLabelTextElement = function() {\n    var textElement = document.createElement(\"div\");\n    textElement.style.width = \"1000px\";\n    textElement.style.height = \"2ch\";\n    textElement.style.fontSize = \"96px\";\n    textElement.style.textOverflow = \"ellipsis\";\n    textElement.style.overflow = \"hidden\";\n    textElement.style.userSelect = \"all\";\n    textElement.style.whiteSpace = \"nowrap\";\n    //textElement.setAttribute('contenteditable', 'true');\n    return textElement;\n  };\n\n  /**\n   * Instantiates, sets highlight for, and sets position for the actual THREE\n   * drawing of a node\n   */\n  self.setupNodeDrawObject = function(node, htexture, texture) {\n    var draw_object = self.createNodeMesh(node, texture);\n\n    // Create highlight\n    if (!def.NODE_NO_HIGHLIGHT) {\n      var highlight = self.createHighlightMesh(node, htexture);\n      draw_object.add(highlight);\n    }\n\n    var pinMesh = self.createPinMesh();\n    draw_object.add(pinMesh);\n\n    draw_object.position.x = node.renderData.x;\n    draw_object.position.y = node.renderData.y;\n    draw_object.index = node.id;\n    draw_object.name = node.id;\n    node.renderData.draw_object = draw_object;\n\n    return draw_object;\n  };\n\n  /**\n   *  Create a node object and add it to the scene.\n   */\n  self.drawNode = function(node) {\n    function onHTextureLoad(node, htexture) {\n      // Load node texture\n      self.textureLoader.load(\n        node.renderData.image || def.NODE_TEXTURE,\n        onTextureLoad.bind(null, node, htexture)\n      );\n    }\n\n    function onTextureLoad(node, htexture, texture) {\n      // Create mesh for node\n      var draw_object = self.setupNodeDrawObject(node, htexture, texture);\n\n      // Create div for label\n      self.createNodeLabel(node);\n\n      self.nodeCount += 1;\n      self.nodes.add(draw_object);\n    }\n\n    if (def.NODE_NO_HTEX && def.NODE_NO_TEX) {\n      onTextureLoad(node, null, null);\n    } else {\n      // Load highlight texture\n      self.textureLoader.load(\n        node.renderData.himage || def.NODE_HTEXTURE,\n        onHTextureLoad.bind(null, node)\n      );\n    }\n  };\n\n  /**\n   *  Create an edge and add it to the lineSegments.\n   */\n  self.drawEdge = function(source, target, visible = true) {\n    if (\n      source.renderData.draw_object === undefined ||\n      target.renderData.draw_object === undefined\n    ) {\n      setTimeout(self.drawEdge.bind(null, source, target), 50);\n      return;\n    }\n    var index = self.drawCount * 3;\n    self.lineObjects[index / 3] = source;\n    self.lineObjects[index / 3 + 1] = target;\n    if (!source.linkObjs) {\n      source.linkObjs = [];\n    }\n    if (!target.linkObjs) {\n      target.linkObjs = [];\n    }\n\n    self.lineIndices.push({\n      source: source,\n      target: target,\n      hide: !visible,\n      linecolor: source.renderData.linecolor, \n    });\n\n    source.linkObjs.push(self.lineIndices[index / 6]);\n    target.linkObjs.push(self.lineIndices[index / 6]);\n    self.updateColorsAndPositions(source, target, index);\n    self.drawCount += 2;\n  };\n\n  /**\n   * Update the colors and positions of the edges between source and target\n   */\n  self.updateColorsAndPositions = function(source, target, index) {\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n\n    var v1pos = source.renderData.draw_object.position;\n    var v2pos = target.renderData.draw_object.position;\n    var v1color = self.lineIndices[index / 6].linecolor;\n    var v2color = self.lineIndices[index / 6].linecolor;\n    colors[index] = v1color.b;\n    positions[index++] = v1pos.x;\n    colors[index] = v1color.g;\n    positions[index++] = v1pos.y;\n    colors[index] = v1color.r;\n    positions[index++] = v1pos.z - 0.02;\n    colors[index] = v2color.b;\n    positions[index++] = v2pos.x;\n    colors[index] = v2color.g;\n    positions[index++] = v2pos.y;\n    colors[index] = v2color.r;\n    positions[index++] = v2pos.z - 0.02;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\n/**\n * These functions are endpoints revealed to Argo frontend\n */\nmodule.exports = function(self) {\n  /**\n   * Set frame.mouseMode to the specified mode\n   * @param {string} mode name of the mode, currently supports ['select', 'move']\n   */\n  self.setMouseMode = mode => {\n    if (mode === \"select\") {\n      // This is the default mode, where users can select one or multiple nodes\n      self.mouseMode = \"select\";\n      self.isMouseModeMove = false;\n    } else if (mode === \"move\") {\n      // move mode, where user can drag the screen to achieve panning\n      self.mouseMode = \"move\";\n      self.isMouseModeMove = true;\n    }\n  };\n\n  self.pauseLayout = () => {\n    self.paused = true;\n  };\n  window.pause = self.pauseLayout;\n\n  self.resumeLayout = () => {\n    self.paused = false;\n  };\n\n  self.mapSelectedNodes = () => {\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"], self.selection);\n  };\n\n  self.mapAllNodes = () => {\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"]);\n  };\n\n  self.pinSelectedNodes = () => {\n    self.mapNodeAttributes([true, \"\", \"pinned\"], self.selection);\n  };\n\n  self.unpinSelectedNodes = () => {\n    self.mapNodeAttributes([false, \"\", \"pinned\"], self.selection);\n  };\n\n  self.setLabelFontSize = size => {\n    self.graph.forEachNode(function(node) {\n      self.changeLabelFontSize(node, size, self.relativeFontSize);\n    });\n  };\n\n  self.setLabelRelativeSize = size => {\n    self.relativeFontSize = size;\n    self.setLabelFontSize(self.labelSize);\n  };\n\n  self.setLabelLength = numChars => {\n    self.graph.forEachNode(function(node) {\n      self.changeLabelLength(node, numChars);\n    });\n  };\n\n  self.toggleMiniMap = () => {\n    if (self.mapShowing) {\n      self.hideMiniMap();\n    } else {\n      self.showMiniMap();\n    }\n  };\n\n  self.showMiniMap = () => {\n    if (self.mapShowing) {\n      return;\n    }\n    self.mapShowing = true;\n    self.element.appendChild(self.minimapRenderer.domElement);\n  };\n\n  self.hideMiniMap = () => {\n    if (!self.mapShowing) {\n      return;\n    }\n    self.mapShowing = false;\n    self.element.removeChild(self.minimapRenderer.domElement);\n  };\n\n  // The CSS Renderer for rendering labels is the most expensive\n  // renderer. For 300+ nodes it's recommended to turn it off by\n  // default and only use it when no node is moving to prevent\n  // visible lagging (during layout, dragging etc.)\n  self.turnOffLabelCSSRenderer = () => {\n    if (self.cssRenderer.isPaused) {\n      return;\n    }\n    self.element.removeChild(self.cssRenderer.domElement);\n    self.cssRenderer.isPaused = true;\n  };\n\n  // See turnOffLabelCSSRenderer.\n  self.turnOnLabelCSSRenderer = () => {\n    if (!self.cssRenderer.isPaused) {\n      return;\n    }\n    self.element.appendChild(self.cssRenderer.domElement);\n    self.cssRenderer.isPaused = false;\n  };\n\n  // Emits id of every node with label being displayed at this moment.\n  // Used to keep mobx state in sync since GraphStore and snapshot\n  // needs to save what nodes have labels shown and what not.\n  // Also turns off label CSSRenderer when no node is showing label.\n  self.updateNodesShowingLabels = () => {\n    var nodes = [];\n    self.graph.forEachNode(n => {\n      var node = self.graph.getNode(n.id);\n      if (node.renderData.textHolder.children[0].element.override) {\n        nodes.push(n.id);\n      }\n    });\n\n    // Turns off label CSSRenderer when no node is showing label.\n    // This is because CSSRenderer is slow.\n    if (nodes.length == 0) {\n      self.turnOffLabelCSSRenderer();\n    } else if (!((self.selection.length > 0) && (self.dragging)) || (appState.graph.frame.paused)) { \n      //Only turns on when no node is moving\n      self.turnOnLabelCSSRenderer();\n    }\n\n    self.ee.emit(\"show-node-label\", nodes);\n  };\n\n  self.toggleSelectedLabels = () => {\n    self.toggleLabels(self.selection.map(n => n.id));\n  };\n\n  self.showSelectedLabels = () => {\n    document.getElementById(\"showSelected\").style.display=\"none\";\n    document.getElementById(\"hideSelected\").style.display=\"inline\";\n    self.showLabels(self.selection.map(n => n.id));\n  };\n\n  self.hideSelectedLabels = () => {\n    document.getElementById(\"hideSelected\").style.display=\"none\";\n    document.getElementById(\"showSelected\").style.display=\"inline\";\n    self.hideLabels(self.selection.map(n => n.id));\n  };\n\n  self.toggleLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        if (\n          node.renderData.textHolder.children[0].element.override == undefined\n        ) {\n          node.renderData.textHolder.children[0].element.override = false;\n        }\n        node.renderData.textHolder.children[0].element.override = !node\n          .renderData.textHolder.children[0].element.override;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.showLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        node.renderData.textHolder.children[0].element.override = true;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.hideLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        node.renderData.textHolder.children[0].element.override = false;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.hideAllLabels = () => {\n    document.getElementById(\"hideAll\").style.display=\"none\";\n    document.getElementById(\"showAll\").style.display=\"inline\";\n    self.graph.forEachNode(function(node) {\n      var node = self.graph.getNode(node.id);\n      node.renderData.textHolder.children[0].element.override = false;\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.showAllLabels = () => {\n    document.getElementById(\"showAll\").style.display=\"none\";\n    document.getElementById(\"hideAll\").style.display=\"inline\";\n    self.graph.forEachNode(function(node) {\n      var node = self.graph.getNode(node.id);\n      node.renderData.textHolder.children[0].element.override = true;\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.setCanvasSize = function(size) {\n    self.setBoundarySize(size);\n  };\n\n  self.setAllNodesShape = function(shape) {\n    if (self.selection.length == 0) {\n      self.graph.forEachNode(function(node) {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      });\n    } else {\n      self.selection.forEach(function(node) {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      });\n    }\n  };\n\n  self.setAllNodesShapeWithOverride = function(shape, overrides) {\n    self.graph.forEachNode(function(node) {\n      if (overrides.has(node.id) && overrides.get(node.id).has('shape')) {\n        self.setNodeShape(self.graph.getNode(node.id), overrides.get(node.id).get('shape'));\n      } else {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      }\n    });\n  }\n\n  self.setNodeShape = function(node, shape) {\n    if (shape == \"square\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = self.make2x2Rect();\n      node.renderData.draw_object.children[0].geometry = self.make2x2Rect();\n    } else if (shape == \"circle\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 32);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        32\n      );\n    } else if (shape == \"triangle\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 3);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        3\n      );\n    } else if (shape == \"pentagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 5);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        5\n      );\n    } else if (shape == \"hexagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 6);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        6\n      );\n    } else if (shape == \"octagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 8);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        8\n      );\n    }\n  };\n\n  self.getNumSelected = function() {\n    if (self.selection.length == self.graph.getNodesCount()) {\n      return 0;\n    }\n    return self.selection.length;\n  };\n\n  self.toggleDark = function() {\n    self.darkMode = !self.darkMode;\n    self.updateViewPortEdgeColor();\n  };\n\n  self.updateViewPortEdgeColor = function() {\n    self.viewPort.material.color = new THREE.Color( self.darkMode? 0xffffff : 0x000000 );       \n  }\n\n  self.getGraph = function() {\n    return self.graph;\n  };\n\n  self.getNodeList = function() {\n    var nodes = [];\n    self.graph.forEachNode(function(node) {\n      nodes.push(node);\n    });\n    return nodes;\n  };\n\n  self.getPositions = function() {\n    var poses = {};\n    self.graph.forEachNode(function(node) {\n      poses[node.id] = [node.x, node.y];\n    });\n    return poses;\n  };\n\n  self.getPinPositions = function() {\n    var poses = {};\n    self.graph.forEachNode(function(node) {\n      poses[node.id] = [node.fx, node.fy];\n    });\n    return poses;\n  };\n\n  // retrieves current graph's pinned nodes \n  self.getPinnedNodes = function() {\n    var poses = new Set();\n    self.graph.forEachNode(function(node) {\n      if(node.pinnedx && node.pinnedy) {\n        poses.add(node.id);\n      }\n    });\n    return poses;\n  }\n\n  //pins nodes that were pinned from a graph loaded in\n  self.setPinnedNodes = function(nodesToPin) {\n    self.mapNodeAttributes([true, \"\", \"pinned\"], nodesToPin);\n  }\n\n  var alias = false;\n  self.toggleAlias = () => {\n    // TODO: recreate renderer with new antialias\n    // self.init(alias);\n    // self.display();\n    alias = !alias;\n  };\n\n  self.setLastNode = id => {\n    self.lastNode = self.graph.getNode(id);\n  };\n\n  self.dragLastNode = () => {\n    self.selectNode(self.lastNode);\n  };\n\n  var x = 1.0;\n  self.lowerRes = () => {\n    x -= 0.1;\n    self.renderer.setPixelRatio(x);\n    self.onWindowResize();\n  };\n\n  self.toggleNeighborHighlight = function() {\n    self.doHighlightNeighbors = !self.doHighlightNeighbors;\n  };\n\n  self.highlightNodeIds = function(nodeids, toggle) {\n    if (nodeids.length > 0 && Array.isArray(nodeids[0])) {\n      nodeids = nodeids[0];\n    }\n    if (self.prevHighlights) {\n      for (var i = 0; i < self.prevHighlights.length; i++) {\n        self.highlightNode(\n          self.prevHighlights[i],\n          !toggle,\n          def.SEARCH_HIGHLIGHT\n        );\n      }\n    }\n    self.prevHighlights = [];\n    self.graph.forEachNode(function(node) {\n      if (nodeids.indexOf(node.id) != -1) {\n        self.highlightNode(node, toggle, def.SEARCH_HIGHLIGHT);\n        self.prevHighlights.push(node);\n      }\n    });\n  };\n\n  self.removeSelected = function() {\n    for (var i = 0; i < self.selection.length; i++) {\n      self.removeNode(self.selection[i]);\n    }\n    self.selection = [];\n  };\n\n  self.removeNodesByIds = function(nodeids) {\n    for (var i = 0; i < nodeids.length; i++) {\n      const node = self.graph.getNode(nodeids[i]);\n      if (node) {\n        self.removeNode(node);\n      }\n    }\n    self.selection = [];\n  };\n\n  self.getSelected = function() {\n    return self.selection;\n  };\n\n  self.getSelectedIds = function() {\n    return self.selection.map(n => n.id);\n  };\n};","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   *  Update the position and color of the edges\n   */\n  self.updateEdges = function() {\n    self.edges.setDrawRange(0, self.drawCount + 6);\n    var total = self.drawCount + 6;\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n\n     //directed arrows\n     self.directedArrows.attributes.position.array = new Float32Array(self.MAX_LINES * 3);\n     var arrowPosition = self.directedArrows.attributes.position.array;\n     var arrowColor = self.directedArrows.attributes.color.array;\n\n    for (var i = 0; i < total; i += 2) {\n      if (self.lineIndices[i / 2]) {\n        if (self.lineIndices[i / 2].hide) {\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\n          positions[i * 3] = v1pos.x;\n          positions[i * 3 + 1] = v1pos.y;\n          positions[i * 3 + 3] = v2pos.x;\n          positions[i * 3 + 4] = v2pos.y;\n          colors[i * 3] = 255;\n          colors[i * 3 + 1] = 255;\n          colors[i * 3 + 2] = 255;\n          colors[i * 3 + 3] = 255;\n          colors[i * 3 + 4] = 255;\n          colors[i * 3 + 5] = 255;\n        } else {\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\n          var v1color = self.lineIndices[i / 2].linecolor;\n          var v2color = self.lineIndices[i / 2].linecolor;\n          positions[i * 3] = v1pos.x;\n          positions[i * 3 + 1] = v1pos.y;\n          positions[i * 3 + 3] = v2pos.x;\n          positions[i * 3 + 4] = v2pos.y;\n          colors[i * 3] = v1color.r;\n          colors[i * 3 + 1] = v1color.g;\n          colors[i * 3 + 2] = v1color.b;\n          colors[i * 3 + 3] = v2color.r;\n          colors[i * 3 + 4] = v2color.g;\n          colors[i * 3 + 5] = v2color.b;\n\n          //directed edges\n          if (appState.graph.directedOrNot) {\n            self.arrow.visible = true;\n            var midPointX = (v1pos.x + v2pos.x)/2;\n            var midPointY = (v1pos.y + v2pos.y)/2;\n\n            var dX = v2pos.x - v1pos.x;\n            var dY = v2pos.y - v1pos.y;\n\n            if (dX === 0) {\n              dX = 0.001;\n            }\n            var radianDegree = Math.atan(dY / dX);\n            // var tempXCorner = midPointX - Math.cos(radianDegree) * 0.866;\n            // var tempYCorner = midPointY - Math.sin(radianDegree) * 0.866;\n\n            // var degreeDifference = Math.PI/2 - radianDegree\n            arrowPosition[i / 2 * 9] = midPointX;\n            arrowPosition[i / 2 * 9 + 1] = midPointY;\n\n            if (dX >= 0) {\n              var tempXCorner = midPointX - Math.cos(radianDegree) * 0.866;\n              var tempYCorner = midPointY - Math.sin(radianDegree) * 0.866;\n              var degreeDifference = Math.PI/2 - radianDegree;\n              arrowPosition[i / 2 * 9 + 3] = tempXCorner - 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 4] = tempYCorner + 0.5 * Math.sin(degreeDifference);\n              arrowPosition[i / 2 * 9 + 6] = tempXCorner + 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 7] = tempYCorner - 0.5 * Math.sin(degreeDifference);\n\n            } else {\n              var tempXCorner = midPointX + Math.cos(radianDegree) * 0.866;\n              var tempYCorner = midPointY + Math.sin(radianDegree) * 0.866;\n              var degreeDifference = Math.PI/2 - radianDegree;\n              arrowPosition[i / 2 * 9 + 3] = tempXCorner + 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 4] = tempYCorner - 0.5 * Math.sin(degreeDifference);\n              arrowPosition[i / 2 * 9 + 6] = tempXCorner - 0.5 * Math.cos(degreeDifference);\n              arrowPosition[i / 2 * 9 + 7] = tempYCorner + 0.5 * Math.sin(degreeDifference);\n            }\n          } else {\n            self.arrow.visible = false;\n          } \n        }\n      }\n    }\n    self.edges.attributes.position.needsUpdate = true;\n    self.edges.attributes.color.needsUpdate = true;\n\n    self.directedArrows.attributes.position.needsUpdate = true;\n    self.directedArrows.attributes.color.needsUpdate = true;\n  };\n\n  /**\n   *  Update the position of the labels\n   */\n  self.updateLabels = function() {\n    var nodes = self.force.nodes();\n    for (var i = 0; i < nodes.length; i++) {\n      let thisNode = self.graph.getNode(nodes[i].id);\n      if (thisNode.renderData.textHolder != undefined) {\n        if (\n          //thisNode.renderData.textHolder.children[0].element.hideme != false &&\n          !thisNode.renderData.textHolder.children[0].element.override\n        ) {\n          thisNode.renderData.textHolder.children[0].element.hidden = true;\n        } else {\n          thisNode.renderData.textHolder.children[0].element.hidden = false;\n        }\n      }\n      thisNode.renderData.textHolder.position.x =\n        thisNode.renderData.size + thisNode.renderData.draw_object.position.x;\n      thisNode.renderData.textHolder.position.y =\n        thisNode.renderData.draw_object.position.y;\n    }\n  };\n\n  /**\n   *  Update the position and color of the edges\n   */\n  self.updateNodes = function() {\n    if (self.options.layout == \"ngraph\") {\n      self.graph.forEachNode(function(node) {\n        if (node.renderData) {\n          node.renderData.draw_object.position.x = self.force.getNodePosition(\n            node.id\n          ).x;\n          node.renderData.draw_object.position.y = self.force.getNodePosition(\n            node.id\n          ).y;\n        }\n      });\n      if (!self.paused) {\n        self.force.step();\n      }\n    } else if (self.options.layout == \"d3\") {\n      var nodes = self.force.nodes();\n      for (var i = 0; i < nodes.length; i++) {\n        nodes[i].x = Math.max(\n          -self.renderWidth,\n          Math.min(self.renderWidth, nodes[i].x)\n        );\n        nodes[i].y = Math.max(\n          -self.renderHeight,\n          Math.min(self.renderHeight, nodes[i].y)\n        );\n        let thisNode = self.graph.getNode(nodes[i].id);\n        if (thisNode && thisNode.renderData.draw_object) {\n          if (!thisNode.pinnedx) {\n            thisNode.fx = null;\n            thisNode.renderData.draw_object.children[1].visible = false;\n          } else {\n            thisNode.fx = thisNode.x;\n            thisNode.renderData.draw_object.children[1].visible = true;\n          }\n          if (!thisNode.pinnedy) {\n            thisNode.fy = null;\n          } else {\n            thisNode.fy = thisNode.y;\n          }\n          thisNode.renderData.draw_object.position.x = nodes[i].x;\n          thisNode.renderData.draw_object.position.y = nodes[i].y;\n        }\n      }\n\n      if (!self.paused) {\n        self.force.tick();\n      }\n    }\n  };\n\n  /**\n   * Restrict camera translation\n   */\n  self.updateCamera = function() {\n    self.controls.target.x -=\n      self.controls.object.position.x -\n      Math.max(\n        -self.renderWidth,\n        Math.min(self.renderWidth, self.controls.object.position.x)\n      );\n    self.controls.object.position.x -=\n      self.controls.object.position.x -\n      Math.max(\n        -self.renderWidth,\n        Math.min(self.renderWidth, self.controls.object.position.x)\n      );\n    self.controls.target.y -=\n      self.controls.object.position.y -\n      Math.max(\n        -self.renderHeight,\n        Math.min(self.renderHeight, self.controls.object.position.y)\n      );\n    self.controls.object.position.y -=\n      self.controls.object.position.y -\n      Math.max(\n        -self.renderHeight,\n        Math.min(self.renderHeight, self.controls.object.position.y)\n      );\n    self.setViewPortSize(self.ccamera);\n  };\n\n  /**\n   * Given an ngraph, update the current ngraph and add or remove inconsistent nodes\n   */\n  self.updateGraph = function(graph) {\n    var numNodesAdded = 0;\n    graph.forEachNode(function(node) {\n      var oldNode = self.graph.getNode(node.id);\n      if (!oldNode) {\n        if (!self.newNodeIds) {\n          self.newNodeIds = [];\n        }\n        self.newNodeIds.push(node.id);\n        self.addNode(node);\n        numNodesAdded += 1;\n        self.lastNode = self.graph.getNode(node.id);\n      } else {\n        self.updateNode(oldNode, node);\n      }\n    });\n    graph.forEachLink(function(link) {\n      if (!self.graph.getLink(link.fromId, link.toId)) {\n        self.addEdge(\n          self.graph.getNode(link.fromId),\n          self.graph.getNode(link.toId)\n        );\n      }\n    });\n\n    self.graph.forEachNode(function(node) {\n      var oldNode = graph.getNode(node.id);\n      if (!oldNode) {\n        self.removeNode(node);\n      }\n    });\n\n    self.force.alpha(1);\n    self.force.stop();\n\n    if (numNodesAdded > 10) {\n      // This seems unnecessary for now\n      // self.tickToStatic = true;\n      self.tickToStatic = false;\n    } else {\n      self.tickToStatic = false;\n    }\n\n    if (self.newNodeIds) {\n      // Highlight every new node.\n      self.highlightNodeIds(self.newNodeIds, true);\n\n      // Select every new node if there aren't too many of them.\n      if (self.newNodeIds.length < 10) {\n        for (let i = 0; i < self.newNodeIds.length; i++) {\n          self.selection.push(self.graph.getNode(self.newNodeIds[i]));\n        }\n        self.ee.emit(\"select-nodes\", self.selection);\n      }\n    }\n  };\n\n  /**\n   * update positions in the ngraph given a list of positions\n   */\n  self.updatePositions = function(positions) {\n    self.graph.forEachNode(function(node) {\n      var pos = positions[node.id];\n      if (pos) {\n        node.x = pos[0];\n        node.y = pos[1];\n        if (node.pinnedx) {\n          node.fx = pos[0];\n        }\n        if (node.pinnedy) {\n          node.fy = pos[1];\n        }\n      }\n    });\n  };\n\n  /**\n   * Update a node given a new node\n   */\n  self.updateNode = function(node, newNode) {\n    if (newNode.data) {\n      if (node.data.color && newNode.data.color) {\n        node.data.color = newNode.data.color;\n        node.renderData.color = node.data.color;\n        node.renderData.draw_object.material.color.set(\n          new THREE.Color(node.data.color)\n        );\n      }\n      if (newNode.data.size && newNode.data.size > 0) {\n        node.data.size = newNode.data.size;\n        node.renderData.size = newNode.data.size;\n        node.renderData.draw_object.scale.set(\n          newNode.data.size,\n          newNode.data.size,\n          1\n        );\n        var hsize = 1 + def.HIGHLIGHT_SIZE / newNode.data.size;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      }\n      if (newNode.data.label) {\n        node.data.label = newNode.data.label;\n        node.renderData.label = node.data.label;\n        node.renderData.textHolder.children[0].element.childNodes[0].innerText =\n          node.data.label;\n      }\n      if (newNode.data.shape) {\n        node.data.shape = newNode.data.shape;\n        node.renderData.shape = node.data.shape;\n        self.setNodeShape(node, node.data.shape);\n      }\n    }\n  };\n};\n"],"sourceRoot":""}